1:
-   name: '{print}'
    explanation: Vypiš něco pomocí `{print}`.
    demo_code: '{print} Vítej v Hedy!'
-   name: '{ask}'
    explanation: Zeptej se na něco pomocí `{ask}`.
    demo_code: '{ask} Jaká je tvoje nejoblíbenější barva?'
-   name: '{echo}'
    explanation: Zopakuj něco pomocí `{echo}`.
    demo_code: |-
        {ask} Jaká je tvoje nejoblíbenější barva?
        {echo}  Tvoje nejoblíbenější barva tedy je
-   name: '{print} emoji'
    explanation: Vypiš emoji pomocí `{print}`
    demo_code: '{print} 🙋 🌍 ❗'
-   name: '{forward}'
    explanation: Nakresli čáru pomocí `{forward}`.
    demo_code: '{forward} 100'
-   name: '{turn}'
    explanation: Otoč želvu pomocí `{turn}`
    demo_code: |-
        {forward} 25
        {turn} left
        {forward} 25
        {turn} right
2:
-   name: '{is}'
    explanation: Pojmenuj slovo pomocí `is` pro další použití v kódu.
    demo_code: |-
        jmeno {is} Hedy
        {print} Vítej jmeno
-   name: '{ask}'
    explanation: Zeptej se na něco příkazem `{ask}`. Pozor! Musíš odpověď pojmenovat pomocí `{is}`.
    demo_code: |-
        barva {is} {ask} Jaká je tvá oblíbená barva?
        {print} barva je tvá oblíbená!
-   name: '{sleep}'
    explanation: '`{sleep}` Hedy se na nějakou chvíli pozastaví (v sekundách).'
    demo_code: |-
        {print} Nech mě chvíli přemýšlet...
        {sleep}
        {print} Hmm... potřebuji ještě alespoň tři sekundy...
        {sleep} 3
        {print} Heuréka! Mám to!
-   name: '{is} želva'
    explanation: Pojmenujte číslo pomocí `{is}`. Jméno si můžete vybrat sami.
    demo_code: |-
        uhel {is} 90
        {turn} uhel
        {forward} 100
3:
-   name: Zvol náhodné
    explanation: Vybere náhodné slovo ze seznamu s užitím `{at}` a `{random}`.
    demo_code: |-
        zvire {is} pes, kocka, klokan
        {print} zvire {at} {random}
-   name: '{add}'
    explanation: '`{add}` přidá položku do `{to_list}` seznamu.'
    demo_code: |-
        zvirata {is} kráva, kočka
        {add} pes {to_list} zvirata
-   name: '{remove}'
    explanation: '`{remove}`  odebere položku `{from}` (ze) seznamu.'
    demo_code: |-
        zvířata {is} kočka, pes, kráva
        {remove} pes {from} zvířata
4:
-   name: '{print}'
    explanation: Vypiš text s jednoduchými uvozovkami.
    demo_code: print 'Ahoj, vítej v Hedy!'
-   name: '{is}'
    explanation: Pojmenuj nějaké slovo a vypiš jej pomocí `{print}` bez uvozovek.
    demo_code: |-
        jmeno is Hedy
        print 'Jmenuji se ' jmeno
-   name: '{ask}'
    explanation: Zeptej se na něco pomocí `{ask}`.
    demo_code: |-
        barva is ask 'Jaká je tvoje nejoblíbenější barva?'
        print barva ' je tvoje nejoblíbenější barva.'
5:
-   name: '{print}'
    explanation: Vypisujte přesně pomocí uvozovek.
    demo_code: print 'Ahoj, vítej v Hedy!'
-   name: '{ask}'
    explanation: Zeptejte se na něco pomocí `{ask}`.
    demo_code: |-
        barva {is} {ask} 'Jaká je tvoje nejoblíbenější barva?'
        {print} barva ' je tvoje nejoblíbenější barva.'
-   name: '{if}'
    explanation: Rozhodni se pomocí `{if}`.
    demo_code: |-
        barva is ask 'Jaká je tvoje nejoblíbenější barva?'
        if barva is růžová print 'Moje taky!' else print 'Fuj'
-   name: '{if} želva'
    explanation: Make a choice with `{if}`.
    demo_code: |-
        Odpověď {is} {ask} 'Jak daleko mám jít?'
        {if} odpověď {is} daleko {forward} 100 {else} {forward} 5
-   name: '{in}'
    explanation: Check elements with `{in}`
    demo_code: |-
        pretty_colors {is} green, yellow
        color {is} {ask} 'What {is} your favorite color?'
        {if} color {in} pretty_colors {print} 'pretty!' {else} {print} 'meh'
-   name: '{pressed}'
    explanation: Zkontrovat, jestli byla daná klávesa `{pressed}`.
    demo_code: '{if} a {is} {pressed} {print} ''Zmáčknul jsi A!'' {else} {print} ''Zmáčknul jsi jinou klávesu!'''
6:
-   name: '{print}'
    explanation: Zkus si přesný výpis pomocí uvozovek.
    demo_code: print '5 krát 5 je ' 5 * 5
-   name: '{ask}'
    explanation: Zadej příklad a ověř výsledek.
    demo_code: |-
        vysledek = ask 'Kolik je 10 plus 10?'
        if answer is 20 print 'Ano!' else print 'Těsně  vedle...'
-   name: '`ask` and `if` turtle'
    explanation: Ask the user how many angles they want
    demo_code: |-
        angles = ask 'How many angles?'
        angle = 360 / angles
        forward 50
7:
-   name: '{print}'
    explanation: Připomeň si `print` s uvozovkami.
    demo_code: print 'Ahoj, vítej v Hedy!'
-   name: '{ask}'
    explanation: Zopakuj si příkaz `ask`.
    demo_code: |-
        barva = ask 'Jaká je tvoje nejoblíbenější barva?'
        print barva ' je tvoje nejoblíbenější barva.'
-   name: '{if}'
    explanation: Rozhodni se pomocí `if`.
    demo_code: |-
        barva = ask 'Jaká je tvoje nejoblíbenější barva?'
        if barva is růžová print 'Moje taky!' else print 'Fuj...'
-   name: repeat - turtle
    explanation: Repeat a line of code with `repeat`.
    demo_code: repeat 3 times forward 10
8:
-   name: '{print}'
    explanation: Něco vypiš a hlavně nezapomeň na uvozovky!
    demo_code: print '5 krát 5 je ' 5 * 5
-   name: '{ask}'
    explanation: Zeptej se na výsledek příkladu a zkontroluj, zda je správný. Teď už můžeš vypsat více řádků.
    demo_code: |-
        vysledek = ask 'Kolik je 5 plus 5?'
        if vysledek is 10
            print 'Skvělá práce!'
            print 'Výsledek opravdu je ' vysledek
        else
            print 'Ups, těsně vedle...'
            print 'Správný výsledek je 10.'
-   name: '`{repeat}` with turtle'
    explanation: '{repeat} multiple lines'
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
-   name: '{pressed}'
    explanation: Zkontrolovat, jestli byla daná klávesa zmáčknuta `{pressed}`.
    demo_code: |-
        {if} a {is} {pressed}
            {print} 'Zmáčknul jsi A!'
        {else}
            {print} 'Zmáčknul jsi jinou hlávesu!'
9:
-   name: '`{if}` with multiple lines'
    explanation: The answer of a sum of questions with '{ask}' and see if it is correct. Now we print out two lines.
    demo_code: |-
        answer = {ask} 'What is 20 plus 20?'
        {if} answer {is} 20
            {print} 'Well done!!'
            {print} 'The answer is indeed' answer
        else
            {print} 'Wrong'
            {print} 'The answer is 20'
-   name: '`{repeat}` and turtle'
    explanation: '{repeat} multiple lines'
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
10:
-   name: '{print}'
    explanation: vytiskni printem něco. Nezapomeň použít uvozovky pro tisk  textu.
    demo_code: '{print} ''5 times 5 is '' 5 * 5'
-   name: '{for} with a list'
    explanation: print all things in a list
    demo_code: |-
        animals {is} dog, cat, blobfish
        {for} animal {in} animals
          {print} 'I love ' animal
11:
-   name: for loop
    explanation: Nahradíme `repeat` za `for` a přidáme rozsah.
    demo_code: |-
        for pocitadlo in range 1  to 5
            print pocitadlo
-   name: '{ask}'
    explanation: Zeptej se na výsledek příkladu a zkontroluj, zda je správný. Teď už můžeš vypsat více řádků.
    demo_code: |-
        vysledek = ask 'Kolik je 5 plus 5?'
        if vysledek is 10
            print 'Skvělá práce!'
            print 'Výsledek opravdu je ' vysledek
        else
            print 'Ups, těsně vedle...'
            print 'Správný výsledek je 10.'
12:
-   name: float directly
    explanation: Decimal numbers
    demo_code: |-
        {print} 'Vypočítat!'
        {print} 'Dva a půl plus dva a půl je...'
        {print} 2.5 + 2.5
-   name: assign text
    explanation: Text with quotation marks after =
    demo_code: |-
        name = 'Hedy ten robot'
        {print} 'Ahoj ' name
-   name: quotes after {if} comparison
    explanation: Text with quotation marks after {if}
    demo_code: |-
        name = {ask} 'Who are you?'
        {if} name = 'Hedy'
            {print} 'Hi there!'
-   name: quotes in list
    explanation: A list with quotation marks
    demo_code: |-
        superheroes = 'Iron Man', 'Batman', 'Superman'
        {print} superheroes {at} {random}
13:
-   name: and
    explanation: Obě tvrzení (nalevo i napravo od `and`) musí být pravdivé.
    demo_code: |-
        odpoved1 = ask 'Kolik je 3 + 2?'
        odpoved2 = ask 'Kolik je 2 + 2?'
        if odpoved1 is 5 and odpoved2 is 4
            print 'Obě odpovědi jsou správně!'
        else
            print 'Minimálně jedna z odpovědí je špatně!'
-   name: or
    explanation: Alespoň jedno z tvrzení (nalevo a napravo od `or`) musí být pravdivé, pokud platí obě, je to taky v pořádku.
    demo_code: |-
        odpoved1 = ask 'Kolik je 3 + 2?'
        odpoved2 = ask 'Kolik je 2 + 2?'
        if odpoved1 is 5 or odpoved2 is 4
            print 'Alespoň jedna odpověď je správně!'
        else
            print 'Obě odpovědi jsou špatně!'
14:
-   name: Menší
    explanation: Používáme `<`, abychom zjistili, jestli je první číslo menší než druhé. Například pokud chceme ověřit, že je proměnná menší než 15, použijeme `promenna < 15`.
    demo_code: |-
        vek = ask 'Kolik je ti let?'
        if vek < 13
            print 'Jsi mladší než já!'
-   name: Větší
    explanation: Používáme `>`, abychom zjistili, jestli je první číslo větší než druhé. Například pokud chceme ověřit, že je proměnná větší než 15, použijeme `promenna > 15`.
    demo_code: |-
        vek = ask 'Kolik je ti let?'
        if vek > 13
            print 'Jsi mladší než já!'
-   name: Equal
    explanation: We use the `==` to check if two things are the same.
    demo_code: |-
        answer = {ask} 'What is 5 * 5?'
        {if} answer == 25
            {print} 'That {is} correct!'
-   name: Not equal
    explanation: We use the `!=` to check if two things are not the same.
    demo_code: |-
        answer = {ask} 'What is 5 * 5?'
        {if} answer != 25
            {print} 'That is not correct!'
-   name: Smaller {or} equal
    explanation: We use the `<=` to check if the first number is smaller than or equal to the second number.
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age <= 12
            {print} 'You are younger than me!'
-   name: Bigger or equal
    explanation: We use the `>=` to check if the first number is bigger than or equal to the second number.
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age >= 14
            {print} 'You are older than me!'
15:
-   name: Pravdivostní while
    explanation: Můžeme použít `while` cyklus s `True` a `False`.
    demo_code: |-
        odpoved = 0
        while odpoved != 25
            odpoved = ask 'Kolik je 5 * 5?'
        print 'Dostala jsem správnou odpověď!'
-   name: While s operátory menší/větší než
    explanation: Taky můžeme použít `while` s operátory `<` a `>`. Pozor, je potřeba porovnávané číslo měnit, aby cyklus někdy skončil! Tady to děláme pomocí `pocet + 1`.
    demo_code: |-
        pocet = 1
        while pocet < 3
            print 'Toto zopakujeme ještě ' 3 - pocet 'krát'
            pocet = pocet + 1
        print 'Hotovo'
16:
-   name: square brackets
    explanation: Seznamy teď píšeme do hranatých závorek a jejich položky do uvozovek.
    demo_code: |-
        ovoce = ['jablko', 'banán', 'třešně']
        print ovoce
-   name: Vyber položku ze seznamu.
    explanation: Abychom dostali položku ze seznamu, použijeme [číslo], takže ovoce[1] nám vrátí prvního člena seznamu!
    demo_code: |-
        ovoce = ['jablko', 'banán', 'třešně']
        prvni_ovoce = ovoce[1]
        print prvni_ovoce
-   name: Získej náhodé ovoce ze seznamu
    explanation: Abychom dostali náhodnou položku ze seznamu, použijeme [random]. Např. ovoce[random] nám vrátí náhodné ovoce ze seznamu!
    demo_code: |-
        ovoce = ['jablko', 'banán', 'třešně']
        nahodne_ovoce = ovoce[random]
        print nahodne_ovoce
17:
-   name: '{elif}'
    explanation: Když používáme `for`, musíme na konec příkazu s ním dát `:`!
    demo_code: |-
        for i in range 1 to 10:
            print i
        print 'Už jdu!'
-   name: '{print}'
    explanation: To stejné musíme udělat i u `if`.
    demo_code: |-
        barva = ask 'Jaká je tvoje nejoblíbenější barva?'
        if barva is 'zelená':
            print 'Barva je zelená.'
        else:
            print 'Barva není zelená.'
-   name: '{if}'
    explanation: Obdobně je třeba postupovat u všech příkazů `{if}`
    demo_code: |-
        a = 2
        if a is 1:
            print 'a je 1'
        elif a is 2:
            print 'a je 2'
        else:
            print 'a není ani 1 ani 2'
18:
-   name: '{print}'
    explanation: With `{print}` you need to use parentheses
    demo_code: '{print}(''hi!'')'
-   name: '{print} with var'
    explanation: Po příkazu `{range}` musíš použít závorky
    demo_code: |-
        name = 'Hedy'
        {print}('my name is ', name)
-   name: '{print} with var'
    explanation: Pro tisk pomocí `{print}` musíš použít závorky a čárky pokud chceš tisknout {print} více slov
    demo_code: |-
        name = 'Hedy'
        {print}('jmenuji se ', name)
-   name: zeptej se na něco pomocí {input}
    explanation: Použij `{input}` místo příkazu`{ask}` na provedení dotazu pro vstupní textové pole
    demo_code: |-
        name = {input}('Jak se jmenuješ?')
        {print}('Tvé jméno tedy je ', name)
