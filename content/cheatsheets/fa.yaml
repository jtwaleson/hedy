1:
-   name: '{print}'
    explanation: یک چیزی رو با دستور `{print}` چاپ کن.
    demo_code: '{print} خوش آمدید!'
-   name: '{ask}'
    explanation: با دستور `{ask}` یک سوالی رو بپرسید.
    demo_code: '{ask} رنگ مورد علاقه ات چیه?'
-   name: '{echo}'
    explanation: با دستور `{echo}` یک چیز را تکرار کنید.
    demo_code: |-
        {ask} رنگ مورد علاقه ات چیه؟?
        {echo} پس رنگ مورد علاقه ات:
-   name: '{print} شکلک'
    explanation: یک شکلک رو با دستور `{print}` چاپ کن
    demo_code: '{print} 🙋 🌍 ❗'
-   name: '{forward}'
    explanation: با دستور `{forward}` یک خط بکش.
    demo_code: '{forward} 100'
-   name: '{turn}'
    explanation: با دستور `{turn}` لاکپشت رو بچرخون
    demo_code: |-
        {forward} 25
        {turn} {left}
        {forward} 25
        {turn} {right}
2:
-   name: '{is}'
    explanation: با دستور `{is}` به یک کلمه، یک اسم بدید. اسم می‌تونه به انتخاب خودت باشه.
    demo_code: |-
        name {is} Hedy
        {print} welcome name
-   name: '{ask}'
    explanation: با دستور `{ask}` یک چیزی بپرسید. توجه کنید که به یک اسم نیاز دارید تا بتونید از دستور `{is}` استفاده کنید.
    demo_code: |-
        رنگ {is} {ask} رنگ مورد علاقه ات چیه؟
        {print} رنگ مورده علاقه ام است!
-   name: '{sleep}'
    explanation: بذار هِدی برای یک یا چند ثانیه توقف کنه.
    demo_code: |-
        {print} بزار یه ثانیه فکر کنم...
        {sleep}
        {print}آهان...بیشتر از 3 ثانیه میخوام فرک کنم...
        {sleep} 3
        {print} Eureka! Ive got it!
-   name: is - turtle
    explanation: با دستور `{is}` به یک عدد، یک اسم بده. اسم می‌تونه هر چیزی که می‌خوای باشه.
    demo_code: |-
        زاویه {is} 90
        {turn} زاویه
        {forward} 100
3:
-   name: یه چیز تصادفی انتخاب کن
    explanation: یک حرف را به صورت تصادفی انتخاب کن `{at}` و`{random}`
    demo_code: |-
        حیوانات {is} سگ, گربه, کانگورو
        {print} حیوانات {at} {random}
-   name: '{add}'
    explanation: یک آیتم به لیست اضافه کن
    demo_code: |-
        حیوانات {is} گاو, گربه
        {add} سگ {to_list} حیوانات
-   name: '{remove}'
    explanation: یک آیتم را از لیست حذف کن
    demo_code: |-
        حیوانات {is} گربه, سگ, گاو
        {remove} سگ {from} حیوانات
4:
-   name: '{print}'
    explanation: print exactly using quotation marks
    demo_code: '{print} ''سلام به هدی خوش اومدی.'''
-   name: '{is}'
    explanation: به متن یک نام بده و `{print}` بدون گیومه
    demo_code: |-
        name {is} Hedy
        {print} 'my name is ' name
-   name: '{ask}'
    explanation: ask something with `{ask}`.
    demo_code: |-
        color {is} {ask} 'What is your favorite color?'
        {print} color ' is your favorite!'
5:
-   name: '{print}'
    explanation: print exactly using quotation marks
    demo_code: '{print} ''Hello welcome to Hedy.'''
-   name: '{ask}'
    explanation: ask something with `{ask}`.
    demo_code: |-
        color {is} {ask} 'What is your favorite color?'
        {print} color ' {is} your favorite!'
-   name: '{if}'
    explanation: Make a choice with `{if}`
    demo_code: |-
        color {is} {ask} 'What is your favorite color?'
        {if} color {is} green {print} 'pretty!' {else} {print} 'meh'
-   name: '{if} with turtle'
    explanation: Make a choice with `{if}`
    demo_code: |-
        answer {is} {ask} 'How far should I walk?'
        {if} answer {is} far {forward} 100 {else} {forward} 5
-   name: '{in}'
    explanation: Check elements with `{in}`
    demo_code: |-
        pretty_colors {is} green, yellow
        color {is} {ask} 'What {is} your favorite color?'
        {if} color {in} pretty_colors {print} 'pretty!' {else} {print} 'meh'
-   name: '{pressed}'
    explanation: Check whether a given key on the keyboard is `{pressed}`.
    demo_code: '{if} a {is} {pressed} {print} ''You pressed A!'' {else} {print} ''You pressed another key!'''
6:
-   name: '{print}'
    explanation: print exactly using quotation marks
    demo_code: '{print} ''5 times 5 is '' 5 * 5'
-   name: '{ask}'
    explanation: '{ask} for a calculation and check whether it is correct.'
    demo_code: |-
        answer = {ask} 'What is 10 plus 10?'
        {if} answer {is} 20 {print} 'Yes!' {else} {print} 'Oops'
-   name: '`{ask}` {and} `{if}` turtle'
    explanation: '{ask} the user how many angles they want'
    demo_code: |-
        angles = {ask} 'How many angles?'
        angle = 360 / angles
        {forward} 50
7:
-   name: '{print}'
    explanation: print exactly using quotation marks
    demo_code: '{print} ''Hello welcome to Hedy.'''
-   name: '{ask}'
    explanation: ask something with `{ask}`.
    demo_code: |-
        color = {ask} 'What is your favorite color?'
        {print} color ' is your favorite!'
-   name: '{if}'
    explanation: Make a choice with `{if}`
    demo_code: |-
        color = {ask} 'What is your favorite color?'
        {if} color {is} green {print} 'pretty!' {else} {print} 'meh'
-   name: '{repeat} - turtle'
    explanation: repeat a line of code with `{repeat}`.
    demo_code: '{repeat} 3 {times} {forward} 10'
8:
-   name: '{print}'
    explanation: print something. Remember to use a quotation mark for literal printing.
    demo_code: '{print} ''5 times 5 is '' 5 * 5'
-   name: '{ask}'
    explanation: ask for the answer to a sum and check if it is correct. We can now print 2 lines.
    demo_code: |-
        answer = {ask} 'What is 5 plus 5?'
        {if} answer {is} 10
            {print} 'Well done!'
            {print} 'Indeed, the answer was ' answer
        else
            {print} 'Oops!'
            {print} 'The answer is 10'
-   name: '`{repeat}` with turtle'
    explanation: '{repeat} multiple lines'
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
-   name: '{pressed}'
    explanation: Check whether a given key on the keyboard is `{pressed}`.
    demo_code: |-
        {if} a {is} {pressed}
            {print} 'You pressed A!'
        {else}
            {print} 'You pressed another key!'
9:
-   name: '`{if}` with multiple lines'
    explanation: The answer of a sum of questions with '{ask}' and see if it is correct. Now we print out two lines.
    demo_code: |-
        answer = {ask} 'What is 20 plus 20?'
        {if} answer {is} 20
            {print} 'Well done!!'
            {print} 'The answer is indeed' answer
        else
            {print} 'Wrong'
            {print} 'The answer is 20'
-   name: '`{repeat}` and turtle'
    explanation: '{repeat} multiple lines'
    demo_code: |-
        {repeat} 4 {times}
            {turn} 90
            {forward} 50
10:
-   name: '{print}'
    explanation: print something. Remember to use a quotation mark for literal printing.
    demo_code: '{print} ''5 times 5 is '' 5 * 5'
-   name: '{for} with a list'
    explanation: print all things in a list
    demo_code: |-
        animals {is} dog, cat, blobfish
        {for} animal {in} animals
          {print} 'I love ' animal
11:
-   name: '{for} loop'
    explanation: We can use `{for}` with a {range}
    demo_code: |-
        {for} counter {in} {range} 1 {to} 5
            {print} counter
-   name: '{ask}'
    explanation: ask for the answer to a sum and check if it is correct. We can now print 2 lines.
    demo_code: |-
        answer = {ask} 'What is 5 plus 5?'
        {if} answer {is} 10
            {print} 'Well done!'
            {print} 'Indeed, the answer was ' answer
        else
            {print} 'Oops!'
            {print} 'The answer is 10'
12:
-   name: float directly
    explanation: Decimal numbers
    demo_code: |-
        {print} 'Calculate away!'
        {print} 'Two and a half plus two and a half is...'
        {print} 2.5 + 2.5
-   name: assign text
    explanation: Text with quotation marks after =
    demo_code: |-
        name = 'Hedy the Robot'
        {print} 'Hello ' name
-   name: quotes after {if} comparison
    explanation: Text with quotation marks after {if}
    demo_code: |-
        name = {ask} 'Who are you?'
        {if} name = 'Hedy'
            {print} 'Hi there!'
-   name: quotes in list
    explanation: A list with quotation marks
    demo_code: |-
        superheroes = 'Iron Man', 'Batman', 'Superman'
        {print} superheroes {at} {random}
13:
-   name: '{and}'
    explanation: Two parts both need to be correct
    demo_code: |-
        answer1 = {ask} 'What is 3+2?'
        answer2 = {ask} 'What is 2+2?'
        {if} answer1 {is} 5 {and} answer2 {is} 4
            {print} 'Both answers are correct!'
        else
            {print} 'At least one answer is wrong!'
-   name: '{or}'
    explanation: At least 1 of the two parts need to be correct. If both are correct, it is also fine.
    demo_code: |-
        answer1 = {ask} 'What is 3+2?'
        answer2 = {ask} 'What is 2+2?'
        {if} answer1 {is} 5 {or} answer2 {is} 4
            {print} 'At least one answer is correct!'
        else
            {print} 'Both answers are wrong!'
14:
-   name: Smaller
    explanation: We use the `<` to check if the first number is smaller than the second number.
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age < 13
            {print} 'You are younger than me!'
-   name: Bigger
    explanation: We use the `>` to check if the first number is bigger than the second number.
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age > 13
            {print} 'You are older than me!'
-   name: Equal
    explanation: We use the `==` to check if two things are the same.
    demo_code: |-
        answer = {ask} 'What is 5 * 5?'
        {if} answer == 25
            {print} 'That {is} correct!'
-   name: Not equal
    explanation: We use the `!=` to check if two things are not the same.
    demo_code: |-
        answer = {ask} 'What is 5 * 5?'
        {if} answer != 25
            {print} 'That is not correct!'
-   name: Smaller {or} equal
    explanation: We use the `<=` to check if the first number is smaller than or equal to the second number.
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age <= 12
            {print} 'You are younger than me!'
-   name: Bigger or equal
    explanation: We use the `>=` to check if the first number is bigger than or equal to the second number.
    demo_code: |-
        age = {ask} 'How old are you?'
        {if} age >= 14
            {print} 'You are older than me!'
15:
-   name: '{while}'
    explanation: We can use the `{while}` loop with not equal
    demo_code: |-
        answer = 0
        {while} answer != 25
            answer = {ask} 'What is 5 times 5?'
        {print} 'A correct answer has been given'
-   name: Smaller {while}
    explanation: We can also use the `{while}` loop with `<` and `>`.
    demo_code: |-
        count = 1
        {while} count < 3
            {print} 'We do this ' 3 - count ' more times'
            count = count + 1
        {print} 'We are done'
16:
-   name: square brackets
    explanation: Lists with square brackets
    demo_code: |-
        fruit = ['apple', 'banana', 'cherry']
        {print} fruit
-   name: Get an item from a list
    explanation: To get an item from a list we use [number] so fruit[1] means, get the first fruit from the list!
    demo_code: |-
        fruit = ['banana', 'apple', 'cherry']
        firstfruit = fruit[1]
        {print} firstfruit
-   name: Get a random item from a list
    explanation: To get a random item from a list we use [random] so fruit[random] means, get a random fruit from the list!
    demo_code: |-
        fruit = ['banana', 'apple', 'cherry']
        random_fruit = fruit[random]
        {print} random_fruit
17:
-   name: '{elif}'
    explanation: '`{elif}`.'
    demo_code: |-
        a = 2
        {if} a == 1:
            {print} 'a is 1'
        {elif} a == 2:
            {print} 'a is 2'
        {else}:
            {print} 'a is not 1 or 2'
-   name: '{print}'
    explanation: When we use a `{for}`, we need to put a `:` behind the `{for}` statement!
    demo_code: |-
        {for} i {in} {range} 1 {to} 12:
            {print} i
        {print} 'Ready or not, here I come!'
-   name: '{if}'
    explanation: We need to do the same with all of our `{if}` statements
    demo_code: |-
        colour = {ask} 'What is your favorite color?'
        {if} colour == 'green':
            {print} 'Your favorite colour is green'
        {else}:
            {print} 'Your favorite colour is not green'
18:
-   name: '{print}'
    explanation: With `{print}` you need to use parentheses
    demo_code: '{print}(''hi!'')'
-   name: '{print} with var'
    explanation: With `{print}` you need to use parentheses and commas if you {print} more items
    demo_code: |-
        name = 'Hedy'
        {print}('my name is ', name)
-   name: '{print} with var'
    explanation: With `{print}` you need to use parentheses and commas if you {print} more items
    demo_code: |-
        name = 'Hedy'
        {print}('my name is ', name)
-   name: ask something with {input}
    explanation: Use `{input}` instead of `{ask}` to ask something
    demo_code: |-
        name = {input}('What is your name?')
        {print}('So your name is ', name)
