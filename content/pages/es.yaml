title: Documentación de Hedy
join-sections:
-   title: Apoyar a Hedy
    text: |
        # ¡Hay tres maneras en las que puedes apoyar a Hedy!
-   title: Mejorar el idioma
    text: |
        El carácter gradual y multilingüe de Hedy crea muchos retos técnicos interesantes.
        Encuentra esas cuestiones en <a href="https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage" target="_blank">Github</a>.
-   title: Traducir Hedy
    text: |
        ¿No eres programador? ¡Sin problema! Otra manera de apoyar a Hedy es <a href="https://github.com/hedyorg/hedy/wiki/Hedy-Translation-Tutorial" target="_blank">traduciendo palabras clave, mensajes de error, aventuras y otro contenido</a>.
        Este es el estado actual, ayúdanos a completar un idioma, ¡o a añadir uno nuevo!
        <a href="https://hosted.weblate.org/engage/hedy/">
        <img src="https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg" alt="Estado de traducción" /></a>
-   title: Ayuda a los profesores a empezar
    text: |
        Hedy está diseñado para ayudar a los profesores a enseñar lecciones de programación en clase. Tenemos funciones específicas para profesores como la opción para crear una clase, personalizarla y ver el progreso de los estudiantes.
        Si te gusta Hedy, puedes contactar a los colegios que conoces ¡para ayudar a los profesores a empezar! Nosotros podemos ayudar en la búsqueda de escuelas o profesores vía <a href="https://discord.gg/8yY7dEme9r" target="_blank">Discord</a>.
learn-more-sections:
-   title: Únete a la comunidad de Hedy
    text: |
        ¡Nos encantaría saber de ti! La mejor forma de ponerte en contacto con nosotros es uniéndose a nuestro <a href="https://discord.gg/8yY7dEme9r" target="_blank">Servidor Discord</a>.

        También puede [enviarnos un correo electrónico](mailto:hello@hedy.org "Acerca de Hedy").

        Para estar al tanto de las últimas noticias, [suscribirte a nuestro boletín](/suscribirse).
-   title: ¡En profundidad!
    text: |
        ¿Quieres saber más sobre el diseño y filosofía de Hedy? Echa un vistazo a esta charla que dio Felienne en la Conferencia StrangeLoop en 2022:

        <iframe width="560" height="315" class="mx-auto mt-4" src="https://www.youtube.com/embed/fmF7HpU_-9k?wmode=opaque" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
-   title: Hedy en las noticias
    text: |
        Algunas páginas web y noticiarios han escrito acerca de Hedy desde nuestro lanzamiento a primeros de 2020. Guardamos una lista aquí:
        * [Tech Optimism - A Solution to the IT Shortage (Dutch), August 2022](https://pom.show/2022/08/12/een-oplossing-voor-het-it-tekort/)
        * [Codeweek Podcast, July 2022](https://codeweek.eu/podcast/26)
        * [Heise.de (German), Januari 2022](https://www.heise.de/news/Hedy-die-mitwachsende-Programmiersprache-6336264.html)
        * [Strumenta, November 2021](https://tomassetti.me/teaching-programming-with-hedy/)
        * [Vives (Dutch), CodeWeek Special October 2021](images/Vives-174-Codeweek.pdf)
        * [CodeWeek.eu - Haunted House Challenge, September 2021](https://codeweek.eu/2021/challenges/haunted-house)
        * [Opensource.com, April 2021](https://opensource.com/article/21/4/hedy-teach-code)
        * [IO Magazine, April 2021](https://ict-research.nl/wordpress/wp-content/uploads/2021/04/IO-magazine-NR1-2021_web.pdf)
        * [Ingeniería De Software (Spanish), February 2021](https://ingenieriadesoftware.es/hedy-mejor-lenguaje-ensenar-programacion-ninos/)
        * [Hello World Magazine, February 2021](images/Hello_World_15_Hedy.pdf)
        * [Discoro, January 2021](https://discoro.wordpress.com/2021/01/09/hedy-gradually-learning-a-programming-language/)
        * [Felienne wins the Dutch award for ICT research for Hedy, January 2021](https://www.nwo.nl/en/news/felienne-hermans-receives-dutch-prize-ict-research-2021)
        * [SlashDot, August 2020](https://news.slashdot.org/story/20/08/17/024248/scientist-proposes-a-new-programming-language-for-teaching-coding-and-python)
        * [GenBeta (Spanish), August 2020](https://www.genbeta.com/desarrollo/nuevo-lenguaje-para-ensenar-programacion-a-ninos-como-se-ensena-a-leer-escribir-forma-gradual-niveles)
        * [Developpez (French), August 2020](https://programmation.developpez.com/actu/308095/Une-scientifique-propose-un-nouveau-langage-de-programmation-pour-enseigner-aux-enfants-le-codage-informatique-au-travers-d-une-approche-graduelle-implementee-en-Python-sur-13-paliers/)
        * [Vives (Dutch), October 2020](images/artikel_vives.pdf) "Met Hedy stap voor stap leren programmeren"
        * [Leiden University, April 2020](https://www.universiteitleiden.nl/en/news/2020/03/looking-to-distract-the-kids-while-you-work-from-home-get-them-programming)
        * [Mare (Dutch), April 2020](https://www.mareonline.nl/cultuur/computercode-voor-de-kids/)
        * [AG Connect (Dutch), April 2020](https://www.agconnect.nl/artikel/stapsgewijs-python-leren-programmeren-met-nieuwe-taal-hedy)
sections:
-   title: Introducción
    key: intro
    subsections:
    -   title: ¿Qué es Hedy?
        text: |
            Hedy es un lenguaje de programación textual, específicamente desarrollado para (pre-)adolescentes (entre 10 y 15 años).
            Al contrario que los lenguajes de programación para niños, como Scratch, Hedy no usa bloques de código sino código textual.
            Así con Hedy aprenderás a escribir código como los programadores de verdad, pero dando pequeños pasos con entretenidos ejercicios.
            De esta forma Hedy puede funcionar como un escalón hacia los lenguajes de programación reales como Python ¡de una forma accesible y divertida!
            Si quieres saber más, aquí puedes ver este <a href="https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s" target="_blank">video</a> sobre el desarrollo de Hedy como lenguaje de programación.
    -   title: Público objetivo
        text: |
            Hedy está desarrollado pensando en los estudiantes de primaria y secundaria (edades 10 - 15).
            Es importante que los estudiantes sean capaces de leer bien. Recomendamos no empezar con Hedy hasta que los estudiantes no tengan al menos el nivel de lectura de 3º.
            Los estudiantes (¡y profesores!) no necesitan ninguna experiencia en programación para empezar con Hedy.
    -   title: ¿Cómo funciona Hedy?
        text: |
            Hedy se divide en niveles, en los cuales se enseñan nuevos comandos. Cada nivel contiene una variedad de aventuras para practicar los nuevos comandos aprendidos.
            Como profesor/a, tú decides qué aventuras están disponibles a tu alumnos. ¿Harán un restaurante, una calculadora o una casa encantada en este nivel? En cada nivel, las aventuras están ordenadas de mas fácil a difícil.
            De ésta forma tus estudiantes siempre tienen un reto. Las aventuras pueden realizarse por alumnos individuales o puedes enseñarlas en grupos.

            Las aventuras también incluyen un código de ejemplo, para asegurarse que ¡incluso profesores con poca experiencia de programación puedan usar Hedy también!
            ¡Por supuesto Hedy también permite a los profesores más creativos que prefieren crear sus propias aventuras!

            Después de resolver todas las aventuras de un nivel concreto, tus alumnos pueden poner a prueba sus conocimientos con la encuesta.
            Puedes revisar el trabajo de tus alumnos y su progreso en la página de la clase.
    -   title: Dispositivos
        text: |
            Hedy está basado en la web, lo que significa que funciona en cualquier dispositivo con un navegador (Google Chrome, Firefox, Edge etc), así que los portátiles, chromebooks, tablets e incluso teléfonos inteligentes son adecuados para usar Hedy.
            No hay necesidad de descargar nada antes de empezar a trabajar con Hedy, sólo ve a la página web ¡y listo!
    -   title: La comunidad de Hedy
        text: |
            Todos los profesores de Hedy, programadores y otros fans son bienvenidos a unirse a nuestro <a href="https://discord.gg/8yY7dEme9r" target="_blank">servidor de Discord</a>.. Este es el lugar ideal para charlar sobre Hedy: tenemos canales donde puedes mostrar tus interesantes proyectos y lecciones, canales para informar sobre errores, y canales para hablar con otros profesores y con el equipo de Hedy.
            <a href="https://www.youtube.com/watch?v=Lyz_Lnd-_aI" target="_blank">Aquí</a> puedes ver un video sobre como unirte a la Comunidad de Discord.
-   title: Tutorial
    key: tutorial
    subsections:
    -   title: Tutorial
        text: |
            ¿Quieres ver el tutorial (de nuevo)? Haz clic <a href="https://hedy.org/tutorial)" target="_blank">aquí</a>.
-   title: Preparaciones
    key: preparaciones
    subsections:
    -   title: For teachers
        text: |
            You can prepare your classes at the <a href="https://hedy.org/for-teachers" target="_blank">For Teachers page</a>. On this page you'll find everything you'll need to teach with Hedy, like your classes, your adventures and slides. All the functionalities of the for teachers page are explained below.
    -   title: Creando una clase
        text: |
            Como profesor, puedes crear una clase para tus estudiantes. En esta clase puedes ver las cuentas de cada uno de los estudiantes y sus programas. También puedes monitorear su progreso.
            Este <a href="https://www.youtube.com/watch?v=Y3RTIWftJQg" target="_blank">vídeo</a> demuestra cómo crear rápidamente una clase en Hedy.
    -   title: Customize your Class
        text: |
            You can customize your class and choose which adventures are available for your students. This way your students won't be overwhelmed by the amount of adventures and levels, and they can specifically focus on the adventures you'd like them to practice with.
            Click on your class on the for teachers page and choose 'customize class'. On this page you can select levels, set opening dates, unlock level tresholds and more.

            **Select and order adventures**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/df38cbb2-468e-4317-ac67-92eaf4212adc" width="1000">
            In this section you can select and order adventures. The pink tabs are adventures with new commands. The gray tabs are regular adventures. To rearrange the order of the adventures, you can drag the tabs. However, we do advise you to use the regular order of adventures as the Hedy team made sure the adventures go from easiest to hardest.
            If you want to remove an adventure for your students, simply click the cross on the adventure's tab.
            <img src="https://github.com/hedyorg/hedy/assets/80678586/0ddd10b5-ef60-4480-a0c4-fc9a0f323baa" width="300">
            If you want to add adventures, for instance your own adventure or an adventure you accidentally removed, use this menu to add the adventure to your students' adventures. Simply click the adventure you want to add and it (re)appears in the line of adventures. To undo all your changes to the adventures, click 'Reset'.

            **Opening dates**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/4e59acfa-4772-429f-8328-babb43c942d5" width="300">
            With this feature you can set open_ingdates for the levels. This way you can make a lesson plan before your course begins and not worry about opening new levels each week. In the image above the first level is opened directly, the second will open the 23th of september, and the 3rd level the week after. The other levels are closed.
            Don't want to set opening dates? No problem, just leave this section blank.

            **Unlock level tresholds**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/99a34dab-f112-459e-bfd1-07618be4715a" width = "1000">
            This featue allows you to set a treshold for your students' quiz grade, before they can continue to the next level. For example, if you enter "80" your students have to score at least 80% on the quiz before they are allowed to go to the next level. If they haven't met the treshold, they are not allowed to continue and have to retake the quiz.
            Don't want to use the treshold? No worries, just keep this section blank.


            **Other settings**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/a8491d67-6d6e-42a7-b672-fd3d083a76f8"/>
            There are some other setting that could be usefu to you aswell. Our first extra setting is 'Mandatory developer's mode'. In developers mode the students only see their input and output screens and the run button. The adventures are hidden and there are no cheatsheets available. This might come in handy in a test situation.
            If this option is not selected the developer's mode is available for students too as a voluntairy option.

            If you want all your students to be visible in de class highscore, you can select the second option.
            With all the other options you can choose to hide some functions or content for your students, this might help them focus more.

            **Save**
            <img src="https://github.com/hedyorg/hedy/assets/80678586/df179df3-3073-4d15-bba6-62e58fb675be" width="300">
            Don't forget to save your changes when you're done costumizing your class.
    -   title: Cuentas de Estudiantes
        text: |
            Hay 2 formas de permitir que tus estudiantes se unan a tu clase: Puedes dejarles crear sus propias cuentas, o puedes crearlas por ellos.

            **Los estudiantes crean sus propias cuentas**
            Tus estudiantes pueden in a la página web de Hedy y crear su cuenta, igual que tú lo hiciste. Para tenerlos en tu clase, ellos simplemente deber hacer clic en el enlace de la invitación.
            Puedes encontrar el enlace para invitarlos en la página de la clase y enviarlo a tus estudiantes. Ten en cuenta que tus estudiantes deben estar conectados en Hedy cuando hagan clic en el enlace, para hacer que todo funcione fácilmente.

            **Tú creas las cuentas para tus estudiantes**
            Algunas veces es más fácil que tú crees las cuentas para tus estudiantes. Esto se hace al hacer clic en el botón 'crear cuentas de estudiantes' y rellenando los nombres de usuarios y contraseñas por ellos.
            Los estudiantes pueden conectarse con el nombre de usuario y contraseña que elegiste. Después, ellos pueden cambiar su nombre de usuario o contraseña si quieren, manteniéndose en tu clase.
            Este <a href="https://www.youtube.com/watch?v=eEQvik-Ce5M" target="_blank">vídeo</a> muestra cómo agregar estudiantes a tu clase de la manera más rápida y fácil.
            También puedes invitar manualmente a un alumno a tu clase con el botón 'Invitar por nombre de usuario'.
    -   title: Escoger lenguage preferido
        text: |
            Cuando los alumnos crean sus perfiles deben escoger su 'idioma preferido'. Hedy siempre cargará utilizando este idioma.
            El idioma siempre se podrá modificar a posteriori navegando a ' Mi cuenta' y 'Mis opciones personales'.
            Desde Diciembre de 2021, es obligatorio definir tu idioma preferido para cada cuenta de Hedy.
            Si tu cuenta o la cuenta de tus alumnos fue creada antes de esta fecha, recibirás un mensaje notificando que el idioma preferido no se ha seleccionado.
            ¡No te preocupes! Navega a 'Mi perfil' y añade el idioma en tus opciones.
            Hasta que selecciones un idioma Hedy se mostrará en el idioma configurado en tu navegador, y cuando ese idioma no esté soportado, en inglés.

            **Para no hablantes de la lengua inglesa**
            No solo puedes cambiar el idioma de las aventuras a tu propio idioma. También puedes cambiar el idioma de los comandos (por ejemplo 'print' o 'ask').
            De ésta forma, puedes enseñar a tus alumnos con los comandos originales en Inglés pero también puedes permitirles utilizar su propio idioma. Por ejemplo, los estudiantes holandeses pueden utilizar 'vraag' en vez de 'ask'.

            **Video**
            Este <a href="https://www.youtube.com/watch?v=QrVZETj4oLM" target="_blank">vídeo</a> muestra cómo establecer el lenguaje preferido y también cómo cambiar los comandos a tu lenguaje preferido.
    -   title: Guardar los programas
        text: |
            Cuando inicias sesión, verás Mis programas junto a tu icono de perfil.
            Esta opción también existen para tus alumnos. En Mis programas puedes encontrar todos los códigos con los que has trabajado.
            Por defecto, los programas serán guardados en 'Mis programas' cuando ejecutes el código, y cada 10 segundos, bajo su nombre por defecto
            y su nivel (por ejemplo: Historia 5). Si quieres guardar un programa con un nuevo nombre, simplemente escribe el nuevo nombre en la barra de nombre.
            Ahora mismo, sólo se puede guardar un programa por nivel, por pestaña.

            Tú (y tus alumnos) podéis compartir los programas usando el botón de compartir situado junto a los nombres de programas.
            Estos programas se publicarán en nuestra <a href="https://hedy.org/explore" target="_blank">página de exploración</a>, para que todo el mundo pueda verlos y utilizarlos.
            Si quieres dejar de compartir tu programa, ve a 'Mis programas' y haz clic en 'No compartir'.

            El icono de avión de papel puede utilizarse para entregar los programas a un profesor de la clase. Los programas que se hayan entregado, no se podrán editar después.
-   title: Enseñando con Hedy
    key: enseñando
    subsections:
    -   title: Enseñando con Hedy
        text: |
            Hedy contiene un montón de niveles diferentes que cada uno enseña una nueva habilidad diferente. Recomendamos enseñar un nivel por lección.
            Esto da a tus estudiantes el tiempo para comprender plenamente un nuevo comando o concepto y practicar con él, antes de pasar al siguiente nivel.
            Nosotros utilizamos esta estructura en nuestras lecciones: Introducción, nuevos conceptos y órdenes, manos a la obra, rompecabezas y pruebas.
    -   title: Diapositivas
        text: |
            When giving instructions you might want to use our slides. Our slides are available on the 'For teachers' page. There is a set of slides for each level. In the slides all the new commands for that level are explained. We have aimed to explain why these changes are nessecary or how the new commands come in handy.
            We also give some examples of how the new commands can be used. You could of course also use your own slides, or just open Hedy and show your students around the website. Whichever you prefer to give the best Hedy lessons!
    -   title: Introducción
        text: |
            Puedes empezar tus clases activando los conocimientos previos de tus alumnos: ¿Qué saben ya sobre el tema?, ¿Qué aprendieron en la lección anterior? y ¿qué errores cometieron de lo que han aprendido hasta ahora?
            De este modo, todos los comandos aprendidos previamente y los errores cometidos con frecuencia estarán frescos en la memoria de tus alumnos cuando empieces a introducir la nueva lección.
    -   title: Introducción de nuevos conceptos y comandos
        text: |
            Los nuevos conceptos y comandos pueden ser muy difíciles de entender para algunos alumnos.
            Por eso es importante enseñar a los alumnos el uso correcto de los nuevos comandos.
            Especialmente en los niveles más bajos, donde algunos estudiantes no tienen ninguna experiencia con la programación, puede ser difícil para ellos entender los nuevos conceptos.
            Mostrar muchos ejemplos hace que un concepto (por ejemplo: "¿Qué es una variable?") sea más reconocible y fácil de entender ("Mira, la variable mascota se ha convertido en perro"). Nuestras diapositivas pueden ayudarte con eso.
    -   title: Vamos a trabajar
        text: |
            Cada nivel contiene diferentes aventuras que podrás encontrar en las pestañas rosas. La primera pestaña rosa explica los nuevos comandos del nivel.
            Las siguientes pestañas son las aventuras que tus alumnos pueden probar y hacer por sí mismos.
            Las aventuras están ordenadas de fácil a difícil, así que recomendamos empezar por la izquierda hacia la derecha.
            La última pestaña da una pequeña pista de que aprenderás en el siguiente nivel. Por supuesto, puedes seleccionar las aventuras que quieras que tus alumnos hagan en cada nivel.
            No siempre tienen que hacer todas las aventuras. Cada aventura contiene un código de ejemplo que los alumnos pueden probar con el botón verde.
            El código de ejemplo se copia en el area de trabajo, donde los alumnos pueden probar y ajustar a su gusto.
            Anima a tus alumnos a convertir los ejemplos en sus propios proyectos, añadiendo sus propias ideas e introduciendo variaciones a las aventuras.
    -   title: Concursos y rompecabezas
        text: |
            Para evaluar si tus alumnos han aprendido toda la nueva información en el nivel, puedes permitirles que hagan un cuestionario.
            El cuestionario contiene 10 preguntas de respuesta múltiple sobre los nuevos conceptos y comandos de ese nivel.
            No todos los niveles tienen un cuestionario aún, ya que aún estamos creando los cuestionarios.
            Algunos niveles también contienen puzles. Los puzles muestran al alumno un par de líneas de código que tienen que poner en el orden correcto.

            Este <a href="https://www.youtube.com/watch?v=lNh5EdZVUwc" target="_blank">video</a> muestra los cuestionarios y los puzles.
    -   title: Evaluación
        text: |
            Termina tus lecciones haciendo una pequeña evaluación. ¿Qué aprendieron los alumnos? ¿Qué dificultades encontraron?
            ¿Cómo aprendieron de sus errores? Y por supuesto: ¿Qué crearon?
            Los alumnos suelen estar muy orgullosos de sus propias creaciones, así que es importante reservar algo de tiempo y darles a tus alumnos la oportunidad de mostrar su trabajo a sus compañeros.
-   title: Funciones extra de Hedy
    key: funciones
    subsections:
    -   title: Estadísticas del profesor
        text: |
            Este <a href="https://www.youtube.com/watch?v=iwHVG4NRKI4&t=5s" target="_blank">video</a> te muestra más información sobre cómo usar las estadísticas del profesor en tu clase.
    -   title: Crea tu propia aventura
        text: |
            Para los profesores también es posible crear su propia aventura. Este <a href="https://www.youtube.com/watch?v=A0zbXpxX4q4" target="_blank">video</a> te muestra como crear tu propia aventura como un profesor y añadirla a tu(s) clase(s).
    -   title: Página de exploración
        text: |
            En la <a href="https://hedy.org/explore" target="_blank">página de exploración</a> puedes ver el trabajo de otros usuarios de Hedy. Puedes probar sus programas y usarlos como inspiración para crear algo chulo por ti mismo.
            También puedes añadir un programa que hayas hecho a la página de explorar tú mismo haciendo clic en 'Guardar y compartir código' en la pantalla de programación o yendo a Mis Programas y haciendo clic en 'Compartir'.
            ¿Ya no quieres compartir más tu trabajo? Simplemente ve a 'Mis Programas' y haz clic en 'Dejar de compartir'.
            Si quieres más información sobre la página de exploración, echa un vistazo a este <a href="https://www.youtube.com/watch?v=26boFjqvS5Q" target="_blank">video</a>.
    -   title: Mis logros
        text: |
            Si haces clic en tu nombre de usuario en la esquina superior derecha de la pantalla, podrás ir a <a href="https://hedy.org/my-achievements" target="_blank">Mis logros</a>. En esta página se recogen tus logros. Tus alumnos también tienen una página como esta.
            Cuando pasas el ratón sobre la insignia, verás cómo conseguirla. También hay insignias ocultas, que tendrás que averiguar por ti mismo cómo obtenerlas.
            Si quieres más información sobre los logros, echa un vistazo a este <a href="https://www.youtube.com/watch?v=-FjmKejukCs" target="_blank">video</a>.
    -   title: Mejores Puntuaciones
        text: |
            En <a href="www.https://hedy.org/highscores" target="_blank">esta página</a> puedes ver las mejores puntuaciones de todos los usuarios de Hedy.
            En este <a href="https://www.youtube.com/watch?v=IqTiUkBVTo8" target="_blank">video</a> puedes aprender más sobre las mejores puntuaciones.
    -   title: Depurador
        text: |
            ¿No funciona el código de tus alumnos? ¡Debe haber un error (fallo de programación) en él! Puedes usar el depurador para encontrar el fallo.
            El depurador es el botón mariquita en tu pantalla de programación. Si lo pulsas, puedes ejecutar tu código línea por línea para encontrar tu fallo.
            ¿Has encontrado el fallo? Pulsa el botón rojo de parada y el depurador se apagará.
    -   title: Leer en voz alta
        text: |
            ¿Quieres que se lea en voz alta el resultado de tu programa? Entonces puedes usar la función de lectura en voz alta que se encuentra debajo del botón 'ejecutar código' en tu pantalla de programación.
    -   title: Modo programador
        text: |
            ¿Te distraen todas las aventuras o quieres hacer un programa largo? Entonces echa un vistazo al interruptor 'Modo programador' debajo de tu pantalla de programación.
            El modo programador te permite a ti y tus alumnos usar una pantalla de programación más grande.
    -   title: Cheat sheets
        text: |
            En cada nivel hay un botón con este emoji 🤔. Tú y tus alumnos podéis encontrar allí las "hojas de trucos". En esta hoja de trucos, puedes encontrar todos los comandos que se pueden utilizar en este nivel en su forma correcta.
            Así que si has olvidado cómo funciona un comando, ¡simplemente echa un vistazo a la hoja de trucos!
    -   title: Other useful features
        text: |
            Este <a href="https://www.youtube.com/watch?v=c4MntPPgl1Y" target="_blank">vídeo</a> te muestra aún más funciones de Hedy, como los trucos y el conmutador de las palabras clave.
-   title: Respuestas a los ejercicios
    key: respuestas
    intro: |
        Las respuestas a todos los ejercicios se pueden encontrar en el perfil público de la cuenta de usuario 'Hedy_answers'. A menudo alentamos a los estudiantes a usar su propia creatividad en sus respuestas, por lo que estas respuestas son simplemente una guía sobre cómo podría ser una posible respuesta correcta.

        Para ir al perfil 'Hedy_answers', haz clic <a href="https://hedy.org/user/hedy_answers" target="_blank">aquí</a>.
-   title: Errores frecuentes
    levels:
    -   level: '1'
        sections:
        -   title: Los estudiantes olvidan escribir los comandos
            example:
                error_text: |
                    Por ejemplo, escribir una frase sin usar imprimir.
                error_code: |
                    Hedy no puede imprimir esto
                solution_text: |
                    Enseña a tus estudiantes a siempre comenzar una linea de código con un comando.
                solution_code: |
                    imprimir Hedy puede imprimir esto!
        -   title: Los estudiantes usan mayúsculas al escribir los comandos
            example:
                error_text: |
                    Los comandos no funcionarán si están en mayúsculas.
                error_code: |
                    Preguntar ¿Por qué mi código no funciona?
                    Imprimir Porque estoy usando mayúsculas.
                solution_text: |
                    Quita las mayúsculas.
                solution_code: |
                    preguntar ¿Por qué mi código funciona ahora?
                    imprimir Porque removí las mayúsculas
        -   title: Alumnos utilizan echo sin ask
            example:
                error_text: |
                    El comando Echo se utiliza para repetir una respuesta después de un comando ask. Sin ask, echo no hará nada.
                error_code: |
                    echo Tu nombre es
                solution_text: |
                    Agrega un comando preguntar para hacerlo funcionar
                solution_code: |
                    ask ¿Cuál es tu nombre?
                    echo Tu nombre es
        -   title: Los alumnos quieren su palabra echo (variable) en el medio de una frase
            example:
                error_text: |
                    Y están en lo cierto! Por eso ellos aprenderán a utilizar variables adecuadas en el siguiente nivel.
                error_code: |
                    ask ¿Cuál lenguaje de programación es el más divertido?
                    echo es el mejor!
                solution_text: |
                    En el nivel 1 tenemos que llegar hasta aquí:
                solution_code: |
                    ask ¿Cuál lenguaje de programación es el más divertido?
                    echo el mejor es...
        -   title: 'Tortuga: los estudiantes hacen que la tortuga se salga de la pantalla'
            example:
                error_text: |
                    A menudo, a los estudiantes les encanta probar números grandes cuando usan la tortuga, lo que hace que la flecha se salga de la pantalla.
                error_code: |
                    adelante 300
                    girar 90
                solution_text: |
                    En el ejemplo, los alumnos tienden a pensar que el comando girar no funciona. Aunque sí funciona, no se puede ver que sucede fuera de la pantalla. Utiliza números más pequeños para evitar que esto ocurra.
                solution_code: |
                    adelante 100
                    girar 90
        -   title: 'Tortuga: Los estudiantes usan el comando retroceder, pero no existe'
            example:
                error_text: |
                    Retroceder no es un comando.
                error_code: |
                    retroceder 100
                solution_text: |
                    Para que la tortuga retroceda, debes uitlizar el comando adelante un número negativo. Por ejemplo:
                solution_code: |
                    adelante -100
    -   level: '2'
        sections:
        -   title: Los estudiantes hacen errores de escritura en sus comandos
            example:
                error_text: |
                    Hedy no puede reconocer un comando mal escrito.
                error_code: |
                    imprimir No hagas errores de escritura!
                solution_text: |
                    Enseña a tus estudiantes a leer los mensajes de error. De esta forma ellos pueden encontrar por sí solos que es lo que está mal.
                solution_code: |
                    imprimir No hagas errores de escritura
        -   title: Los estudiantes olvidan que el comando preguntar ha cambiado
            example:
                error_text: |
                    En este nivel, los estudiantes aprender sobre variables. El comando preguntar requiere variables también, peroo los estudiantes olvidan esto.
                error_code: |
                    preguntar ¿Qué te gustaría comer?
                solution_text: |
                    En este nivel tienes que decirle a Hedy dónde debe guardar tu respuesta para ser usada luego. Esto se llama una variable.
                solution_code: |
                    ordenar es preguntar ¿Que te gustaría comer?
        -   title: 'Los estudiantes intentan usar el comando `{echo}`. '
            example:
                error_text: |
                    Para algunos estudiantes, puede ser frustrante aprender que el comando `{echo}` ya no funciona. Por eso es muy importante explicar las ventajas de usar variables. ¡Por ejemplo, puedes usar múltiples variables en un código y ponerlas donde quieras en una frase!
                error_code: |
                    respuesta {is} {ask} ¡¿Por qué ya no funciona {echo}?!
                    {echo}
                solution_text: |
                    En su lugar, utiliza una variable.
                solution_code: |
                    respuesta {is} {ask} ¿¡Por qué ya no funciona {echo}?!
                    {print} respuesta
        -   title: Los estudiantes usan el nombre de una variable o como una palabra normal
            example:
                error_text: |
                    En el siguiente ejemplo, se usa la palabra 'nombre' como una variable, pero también como un texto normal. El resultado de este código será 'Hola mi Hedy es Hedy'.
                error_code: |
                    nombre is Hedy
                    print Hola mi nombre es nombre
                solution_text: |
                    Así que no uses una palabra que quieras usar en el texto como nombre de variable. En el nivel 4, esto se soluciona con comillas.
                solution_code: |
                    nombre is Hedy
                    print Hola soy nombre
        -   title: Los estudiantes usan nombres de variables largos que contienen dos palabras.
            example:
                error_text: |
                    Las variables deben nombrarse con una sola palabra. Puedes usar un guion bajo (_) para conectar dos palabras. Eso cuenta como una.
                error_code: |
                    puerta escogida is ask ¿Qué puerta eliges?
                solution_text: |
                    Añade un guion bajo.
                solution_code: |
                    puerta_elegida is ask ¿qué puerta escoges?
        -   title: Es posible que los estudiantes usen dos nombres diferentes para la misma variable
            example:
                error_text: |
                    En este ejemplo, el estudiante ha usado 'horse' y 'name' para la misma variable.
                error_code: |
                    caballo is ask ¿Cómo se llama tu caballo?
                    print Tu caballo se llama nombre
                solution_text: |
                    Comprueba siempre cuando una variable tiene el mismo nombre en todo el código. Las pequeñas diferencias pueden ser difíciles de detectar (por ejemplo los plurales) pero interferirán con tu código.
                solution_code: |
                    nombre is ask ¿Cómo se llama tu caballo?
                    print Tu caballo se llama nombre
    -   level: '3'
        sections:
        -   title: Los estudiantes intentan imprimir listas enteras
            example:
                error_text: |
                    No se puede imprimir una lista. Con {at} {random} sólo puedes imprimir un elemento de la lista.
                error_code: |
                    productos is apples, milk, chocolate
                    print productos
                solution_text: |
                    Para imprimir una lista de todos los productos de la compra, simplemente tienes que ponerlos después de un comando `{print}`. Si no, puedes usar la lista para imprimir un objeto con `{at}` `{random}`.
                solution_code: |
                    {print} manzanas, leche, chocolate

                    o

                    comestibles {is} manzanas, leche, chocolate
                    {print} comestibles {at} {random}
        -   title: Los alumnos utilizan el nombre de una variable o lista como texto normal
            example:
                error_text: |
                    Probablemente este problema ocurría también en el nivel 2. Ahora puede ocurrir también con las listas.
                error_code: |
                    nombre {is} Hedy
                    {print} Hola mi nombre es nombre

                    o

                    animal {is} rinoceronte, abeja, cisne
                    {print} El mejor animal es... animal {at} {random}
                solution_text: |
                    No uses el nombre de variables o listas en texto normal para imprimir. En el nivel 4 este problema se soluciona con las comillas.
                solution_code: |
                    nombre {is} Hedy
                    {print} Hola soy nombre

                    o

                    animales {is} rinoceronte, abeja, cisne
                    {print} El mejor animal es... animales {at} {random}
        -   title: Los alumnos se olvidan `{at}` en `{at}` `{random}`
            example:
                error_text: |
                    Como en el ejemplo
                error_code: |
                    pájaros es gorrión, gaviota, petirrojo
                    imprimir pájaros aleatorio
                solution_text: |
                    Este problema se resuelve añadiendo la palabra en.
                solution_code: |
                    pájaros {is} gorrión, gaviota, petirrojo
                    {print} pájaros {at} {random}
        -   title: Los alumnos olvidan utilizar el comando `{print}` cuando también utilizan el comando `{at}` `{random}`
            example:
                error_text: |
                    O a veces pondrán `{at}` `{random}` al principio de la línea.
                error_code: |
                    fruta {is} manzana, cereza, plátano
                    fruta {at} {random}
                solution_text: |
                    Haz hincapié a tus alumnos de que siempre se necesita imprimir un texto.
                solution_code: |
                    fruta {is} manzana, cereza, plátano
                    {print} fruta {at} {random}
        -   title: Los alumnos olvidan usar comas en sus listas
            example:
                error_text: |
                    En una lista los objetos están separados por una coma.
                error_code: |
                    pizzas {is} setas de atún cuatro estaciones
                    {print} pizzas {at} {random}
                solution_text: |
                    Tras cada objeto de tu lista, debería haber una coma
                solution_code: |
                    pizzas es setas, de atún, cuatro estaciones
                    imprime pizzas en aleatorio
        -   title: Los alumnos intentan usar `{at}` `{random}` sin una lista
            example:
                error_text: |
                    Por ejemplo
                error_code: |
                    clubs {is} Manchester United
                    {print} clubs {at} {random}
                solution_text: |
                    Hedy no puede imprimir nada en aleatorio, porque no hay una lista de la que elegir.
                solution_code: |
                    clubs {is} Manchester United, Bayern Munchen, FC Barcelona
                    {print} clubs {at} {random}
        -   title: 'Los alumnos intentan utilizar añadir/eliminar sin una lista '
            example:
                error_text: |
                    En el siguiente ejemplo. 'nombres no es una lista, pero sí una variable. No puedes añadirle nada.
                error_code: |
                    nombres {is} Jake
                    tu_nombre {is} {ask} ¿Quién eres tú?
                    {add} tu_nombre {to} nombres
                    {print} nombres {at} {random}
                solution_text: |
                    Primero tiene que haber una lista, así que tienes que añadir un segundo nombre para convertir nombres en una lista, por ejemplo Amy. Si no quieres Amy en tu lista, puedes usar borrar para borrarlo después.
                solution_code: |
                    nombres {is} Jake, Amy
                    tu_nombre {is} {ask} ¿Quién eres tú?
                    {add} tu_nombre {to} nombres
                    {print} nombres {at} {random}
        -   title: Los estudiantes olvidan utilizar to/from con add/remove
            example:
                error_text: |
                    Sin a/de el comando añadir/borrar no funcionará.
                error_code: |
                    aventuras {is} historia, loro, dados
                    opción {is} ¿Qué aventura te gusta más?
                    {add} opción
                    {remove} dados
                    {print} Me encanta aventuras {at} {random}
                solution_text: |
                    Hedy tiene que saber a qué lista debe añadirse/eliminarse el objeto.
                solution_code: |
                    aventuras es historia, loro, dado
                    opción es ¿Qué aventura te gusta más?
                    añadir opción a aventuras
                    borrar dado de aventuras
                    imprimir Me encanta aventuras en aleatorio
    -   level: '4'
        sections:
        -   title: Los alumnos olvidan utilizar las comillas en ambos lados del texto
            example:
                error_text: |
                    En este nivel imprimir y preguntar necesitan un conjunto de comillas. Una antes del texto y otra después.
                error_code: |
                    imprimir Hola
                    estado_animo es preguntar '¿Cómo estás?
                solution_text: |
                    Añade las comillas correctas.
                solution_code: |
                    imprimir 'Hola'
                    estado_animo es preguntar '¿Cómo estás?'
        -   title: Los alumnos utilizan las comillas equivocadas
            example:
                error_text: |
                    It is important to start your lesson by checking if the students know how to type a quotation mark properly. ELse they might use the "double quotes" or the `skewed one`.
                error_code: |
                    imprimir `Bienvenido al restaurante`
                    comida es preguntar "¿Qué te gustaría pedir?"
                solution_text: |
                    Estas son las comillas correctas:
                solution_code: |
                    imprimir 'Bienvenido al restaurante'
                    comida es preguntar '¿Qué te gustaría pedir?'
        -   title: Los alumnos utilizan un apóstrofe en su texto
            example:
                error_text: |
                    Desde este nivel en adelante no se permiten los apóstrofes. Se suelen usar en inglés al escribir contracciones como you're, don't o what's.
                error_code: |
                    imprimir 'No está permitido escribir esto'
                solution_text: |
                    Puedes elegir usar la gramática incorrecta y solo omitir el apóstrofe. O podrías usar el ` como un apóstrofe.
                solution_code: |
                    print 'Se permite que escribas esto (Youre)'
                    print 'Y también puedes escribir esto (you`re)'
    -   level: '5'
        sections:
        -   title: Los alumnos olvidan utilizar `{print}` en un comando `{if}`
            example:
                error_text: |
                    Después de que los alumnos usen `{if}` o `{else}` se olvidan de usar un segundo comando como `{print}` o `{ask}`.
                error_code: |
                    si nombre es Hedy '¡Genial!'
                    si no '¡Hedy es mejor!'
                solution_text: |
                    Añade el comando imprimir para arreglarlo.
                solution_code: |
                    si nombre es Hedy imprimir '¡Genial!'
                    si no imprimir '¡Hedy es mejor!'
        -   title: Los alumnos podrían utilizar dos nombres distintos para la misma variable
            example:
                error_text: |
                    En este ejemplo el alumno ha utilizado 'caballo' y 'nombre' para las mismas variables.
                error_code: |
                    caballo es preguntar '¿Cómo se llama tu caballo?'
                    si nombre es Hoguera imprimir 'mola'
                    si no imprimir '¡no mola tanto!'
                solution_text: |
                    Comprueba si la variable tiene el mismo nombre en todo el código. Las pequeñas diferencias pueden ser difíciles de encontrar (por ejemplo en los plurales) pero pueden interferir con el código.
                solution_code: |
                    caballo es preguntar 'Cómo se llama tu caballo'
                    si caballo es Hoguera imprimir '¡mola!'
                    si no imprimir '¡no mola tanto!'
        -   title: Los estudiantes aún olvidan las comillas en ambos lados
            example:
                error_text: |
                    If commandos can get very long and students tend to forget to use quotes.
                error_code: |
                    si nombre es Hedy imprimir divertido
                    si no imprimir '¡meh!
                solution_text: |
                    Usa siempre dos comillas en un comando imprimir.
                solution_code: |
                    si nombre es Hedy imprimir 'divertido'
                    si no imprimir '¡meh!'
        -   title: Los estudiantes usan comillas alredeor de los nombres de las variables
            example:
                error_text: |
                    En este nivel no hay comillas alrededor de los nombres de variables.
                error_code: |
                    si 'nombre' es 'Hedy' imprimir 'divertido'
                    si no imprimir '¡meh!'
                solution_text: |
                    Borra las comillas para hacer que el código funcione.
                solution_code: |
                    si nombre es Hedy imprimir 'divertido'
                    si no imprimir '¡meh!
        -   title: Los estudiantes usan nombres largos para las variables que contienen dos palabras
            example:
                error_text: |
                    Una variable debería llamarse con una palabra. Puedes usar un guion bajo para conectar dos palabras. Eso cuenta como una.
                error_code: |
                    puerta elegida es preguntar '¿Qué puerta eliges?'
                solution_text: |
                    Añade un guion bajo.
                solution_code: |
                    puerta_elegida es preguntar '¿qué puerta eliges?'
        -   title: Los alumnos quieren varias respuestas correctas
            example:
                error_text: |
                    Por ejemplo este alumno Hedy le dice a todos sus amigos que son divertidos, pero a otros compañeros les diría que no lo son.
                error_code: |
                    si nombre es Jesse, David, Souf imprimir 'Eres divertido' si no imprimir 'No eres divertido'
                solution_text: |
                    Puedes usar el comando `in` para eso. Se explica en un nivel superior, pero ya funciona en el nivel 5.
                    Otra solución es usar varios comandos si y no comando si no. La desventaja es que no le dirá a los otros compañeros que no son divertidos.
                solution_code: |
                    amigos es Jesse, David, Souf
                    nombre es preguntar '¿Quién eres?'
                    si nombre en amigos imprimir 'Eres divertido'
                    sino imprimir 'No eres divertido'

                    o

                    nombre es preguntar '¿Quién eres?'
                    si nombre es Jesse imprimir 'Eres divertido'
                    si nombre es David imprimir 'Eres divertido'
                    si nombre es Souf imprimir 'Eres divertido'
        -   title: Los alumnos hacen que el nombre de la variable sea el mismo que el valor en la sentencia `{if}`
            example:
                error_text: |
                    En el siguiente ejemplo la contraseña es 'contraseña'. Esto hará que siempre sea correcta.
                error_code: |
                    contraseña es preguntar '?Cuál es la contraseña?'
                    si contraseña es contraseña imprimir 'Acceso permitido'
                    si no imprimir '¡Acceso denegado!'
                solution_text: |
                    Elige un nombre distinto para tu variable.
                solution_code: |
                    contraseña_secreta {is} {ask} 'Cuál es la contraseña'
                    {if} contraseña_secreta {is} contraseña {print} '¡Acceso permitido!'
                    {else} {print} '¡Acceso denegado!'
    -   level: '6'
        sections:
        -   title: Los alumnos tienen problemas con las comillas
            example:
                error_text: |
                    Algunos alumnos tienen problemas al añadir o no comillas. Si añades comillas, la pantalla de salida mostrará literalmente '5+5'.
                error_code: |
                    imprimir '5 + 5'
                solution_text: |
                    En este código la pantalla de salida imprimirá '10'.
                solution_code: |
                    print 5 + 5
        -   title: Los alumnos tiene problemas con el concepto de hacer cálculos con una variable
            example:
                error_text: |
                    Algunos alumnos tendrán dificultades al hacer cálculos con variables. Intenta enseñarles ejemplos muy sencillos, como:
                error_code: |
                    edad = preguntar '¿Cuántos años tienes?'
                    imprimir 'El año que viene tendré ' edad + 1
                solution_text: |
                    O ve un paso más allá.
                solution_code: |
                    precio = 0
                    imprimir 'Bienvenido a nuestro restaurante de hamburguesas'
                    hamburguesa = preguntar '¿Quieres una hamburguesa?'
                    si hamburguesa = sí precio = precio + 10
                    bebida = preguntar '¿Quieres una bebida?'
                    si bebida = sí precio = precio + 4
                    imprimir 'Serán ' precio ' euros por favor'
    -   level: '7'
        sections:
        -   title: Los alumnos olvidan una de las palabras en el comando repetir, u olvidan el comando imprimir
            example:
                error_text: |
                    Asegúrate que los alumnos saben usar tanto el comando repetir completo y el comando imprimir.
                error_code: |
                    repetir 3 veces 'Porque es un buen amigo'
                    repetir 3 imprimir '¡Que nadie puede negar!'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    repetir 3 veces imprimir 'Porque es un buen amigo'
                    repetir 3 veces imprimir '¡Que nadie puede negar!'
        -   title: Los alumnos intentan repetir varias líneas
            example:
                error_text: |
                    En este nivel sólo puedes repetir una línea de código varias veces. En este código el alumno quiso imprimir 3 bebidas diferentes, pero no funcionará. Hará la pregunta 3 veces y sólo imprime la última respuesta.
                error_code: |
                    repetir 3 veces bebida = preguntar '¿Qué te gustaría beber?'
                    imprimir bebida
                solution_text: |
                    Deberías ir al siguiente nivel para ser capaz de repetir varias líneas. Así que en este nivel tendrás que imprimir todo por separado.
                solution_code: |
                    bebida = preguntar '¿Qué te gustaría beber?'
                    imprimir bebida
                    bebida = preguntar '¿Qué te gustaría beber?'
                    imprimir bebida
                    bebida = preguntar '¿Qué te gustaría beber?'
                    imprimir bebida
        -   title: Los alumnos hacen programas que tardan demasiado en ejecutar
            example:
                error_text: |
                    En este nivel es muy fácil hacer códigos extensos. Los alumnos no tienen permitido hacer programas que tarden mucho en cargar (para proteger nuestros servidores).
                error_code: |
                    repetir 100 veces imprimir '¿Cuántas veces puedo repetir esto?'
                solution_text: |
                    Asegúrate que los códigos no son demasiado largos
                solution_code: |
                    repetir 20 veces imprimir 'Esto es suficiente'
    -   level: '8'
        sections:
        -   title: Los alumnos usan la sangría mal
            example:
                error_text: |
                    La sangría es un nuevo concepto de este nivel, es complicada de usar para algunos alumnos. Asegúrate que practican algunos códigos sencillos antes de hacer un programa entero con ella.
                error_code: |
                    repetir 3 veces
                    imprimir 'hola'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    repetir 3 veces
                        imprimir 'hola'
        -   title: Los alumnos sólo repiten 1 línea cuando quieren repetir varias líneas
            example:
                error_text: |
                    Por ejemplo, en el siguiente código el alumno quiso coger los pedidos de bebida de 3 personas. Pero, en cambio, el programa preguntó 3 veces, pero sólo escribió un pedido.
                error_code: |
                    repetir 3 veces
                        bebida = preguntar '¿Qué quieres beber?'
                    imprimir bebida
                solution_text: |
                    En el código correcto la tercera línea empieza también con sangría. Así pertenece al bloque repetir y por tanto se repetirá 3 veces.
                    Enseñar estas diferencias a los alumnos les puede ayudar a entender por qué necesitan sangría para hacer que sus programas funcionen.
                solution_code: |
                    repetir 3 veces
                        bebida = preguntar '¿Qué quieres beber?'
                        imprimir bebida
        -   title: Los alumnos quieren anidar sentencias `{if}`, o poner sentencias `{if}` dentro de un bucle
            example:
                error_text: |
                    En este nivel los alumnos aún no tienen permitido poner sentencias `{if}` dentro de otras sentencias `{if}` o dentro de bucles repetir.
                    En este nivel esto está permitido.
                error_code: |
                    cumpleaños = preguntar '¿Es tu cumpleaños?'
                    si cumpleaños = sí
                        repetir 3 veces
                            imprimir '¡Hip Hip Hurra!'
                solution_text: |
                    Este es el código correcto para este nivel:
                solution_code: |
                    cumpleaños = preguntar '¿Es tu cumpleaños?'
                    si cumpleaños = sí
                        imprimir '¡Hip Hip Hurra!'
                        imprimir '¡Hip Hip Hurra!'
                        imprimir '¡Hip Hip Hurra!'
        -   title: Los alumnos hacen programas que tardan demasiado en ejecutar
            example:
                error_text: |
                    En este nivel es muy fácil hacer códigos extensos. Los alumnos no tienen permitido hacer programas que tarden mucho en cargar (para proteger nuestros servidores).
                error_code: |
                    repetir 100 veces
                        imprimir '¿Cuántas veces puedo repetir esto?'
                solution_text: |
                    Asegúrate que los códigos no son demasiado largos
                solution_code: |
                    repetir 20 veces
                        imprimir 'Esto es suficiente'
        -   title: Los alumnos usan el comando `{if}` para comprobar si el valor de la variable es el mismo que el nombre de la variable
            example:
                error_text: |
                    Hemos visto este error por algunos de nuestros alumnos. Hacen una contraseña para su ordenador, pero llaman a la contraseña 'contraseña'.
                    En la línea 2 se pide al ordenador comprobar si la variable contraseña es la misma que la variable contraseña, por lo que sí. Lo que significa que la respuesta siempre es sí.
                    Así que con este código la respuesta siempre será 'Puedes entrar' sin importar lo que el jugador ponga.
                error_code: |
                    contraseña es preguntar '?Cuál es la contraseña?'
                    si contraseña es contraseña
                        imprimir 'Puedes entrar'
                    si no
                        imprimir 'No puedes entrar'
                solution_text: |
                    Puedes arreglar este error añadiendo comillas. Así el ordenador sabe que la segunda contraseña en el `{if} contraseña {is} 'contraseña'` tiene un valor de cadena texto (como texto normal) y no el nombre de la variable.
                solution_code: |
                    contraseña es preguntar '¿Cuál es la contraseña?'
                    si contraseña es 'contraseña'
                        imprimir 'Puedes entrar'
                    si no
                        imprimir 'No puedes entrar'
    -   level: '9'
        sections:
        -   title: Los alumnos cometen errores con la sangría
            example:
                error_text: |
                    La parte más dificil sobre este nivel es conseguir la sangría correcta. A los alumnos les encanta anidar sentencias `{if}`, a veces incluso dentro de otras sentencias anidadas `{if}`. Llevar la cuenta de la sangría puede ser bastante difícil.
                error_code: |
                    imprimir 'Robin está caminando por el centro'
                    ubicación = preguntar '¿Va Robin a entrar a una tienda, o se va a casa?'
                    si ubicación es tienda
                        imprimir 'Entra en la tienda.'
                        imprimir 'Robin ve un libro interesante'
                        libro = preguntar '¿Va a comprar el libro?'
                            si libro es sí
                    imprimir 'Robin compra el libro y se va a casa'
                    si no
                        imprimir 'Robin sale de la tienda y se va a casa'
                    si no
                        imprimir 'Robin se va a casa'
                solution_text: |
                    Este es el código correcto. Intenta llevar la cuenta de todas las diferentes construcciones al poner sentencias `{if}` dentro de otras sentencias `{if}`.
                solution_code: |
                    imprimir 'Robin está caminando por el centro'
                    ubicación = preguntar '¿Va Robin a entrar a una tienda, o se va a casa?'
                    si ubicación es tienda
                        imprimir 'Entra en la tienda.'
                        imprimir 'Robin ve un libro interesante'
                        libro = preguntar '¿Va a comprar el libro?'
                        si libro es sí
                            imprimir 'Robin compra el libro y se va a casa'
                        si no
                            imprimir 'Robin sale de la tienda y se va a casa'
                    si no
                        imprimir 'Robin se va a casa'
    -   level: '10'
        sections:
        -   title: Los alumnos no utilizan correctamente el comando para
            example:
                error_text: |
                    Con frecuencia vemos que los alumnos intentan imprimir la lista (animales, en el ejemplo) en vez de los objetos de la lista.
                error_code: |
                    animales es perro, gato, pez globo
                    para animal en animales
                      imprimir 'Amo ' animales
                solution_text: |
                    La palabra animales de la última línea debería cambiarse por animal.
                solution_code: |
                    animales es perro, gato, pez globo
                    para animal en animales
                      imprimir 'Amo ' animal
        -   title: Los alumnos olvidan la sangría
            example:
                error_text: |
                    Los alumnos tienden a olvidar el usar sangría tras un comando para.
                error_code: |
                    animales es perro, gato, pez globo
                    para animal en animales
                    imprimir 'Amo ' animales
                solution_text: |
                    Debes usar sangría tras un comando para.
                solution_code: |
                    animales es perro, gato, pez globo
                    para animal en animales
                      imprimir 'Amo ' animal
    -   level: '11'
        sections:
        -   title: Los alumnos olvidan usar sangría
            example:
                error_text: |
                    Asegúrate que los alumnos usan sangría.
                error_code: |
                    para i en rango 1 a 5
                    imprimir i
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    para i en rango 1 a 5
                        imprimir i
        -   title: Los alumnos no entienden la i
            example:
                error_text: |
                    Algunos alumnos no entienden que i es una variable. i es elegida, porque se usa en programación en Python, pero puedes también podrías utilizar otro nombre de variable.
                    Por ejemplo, este código:
                error_code: |
                    para i en rango 1 a 5
                    imprimir i
                solution_text: |
                    También podría sustituirse por este código. Funciona igual.
                solution_code: |
                    para plátano en rango 1 a 5
                        imprimir plátano
    -   level: '12'
        sections:
        -   title: Los alumnos olvidan las comillas
            example:
                error_text: |
                    Los alumnos necesitan mas comillas ahora que en los niveles anteriores. En este ejemplo se olvidaron las comillas en la lista y en el comando `{if}`.
                error_code: |
                    superhéroes = Spiderman, Batman, Iron Man
                    superhéroe = superhéroes {at} {random}
                    {if} superhéroe = Batman
                        {print} '¡SOY BATMAN!'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    superhéroes = 'Spiderman', 'Batman', 'Iron Man'
                    superhéroe = superhéroes {at} {random}
                    {if} superhéroe {is} 'Batman'
                        {print} '¡SOY BATMAN!'
        -   title: Los alumnos usan las comillas en los números que quieren usar para cálculos
            example:
                error_text: |
                    Puedes usar comillas en números, pero sólo si quieres que el ordenador los considere como texto. Esto implica que no puedes hacer cálculos con el número.
                    En el siguiente ejemplo, no puedes hacer cálculos con el numero 25, porque está entre comillas.
                error_code: |
                    puntuación = '25'
                    respuesta es preguntar '¿Quieres un punto?'
                    si respuesta es 'sí'
                        puntuación = puntuación + 1
                        imprimir puntuación
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    puntuación = 25
                    respuesta es preguntar '¿Quieres un punto?'
                    si respuesta es 'sí'
                        puntuación = puntuación + 1
                        imprimir puntuación
        -   title: Los alumnos usan comas en vez de puntos en los números decimales
            example:
                error_text: |
                    Los números decimales se pueden usar desde este nivel, pero no puedes usar comas.
                error_code: |
                    imprimir 2,5 + 2,5
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    imprimir 2.5 + 2.5
    -   level: '13'
        sections:
        -   title: Los alumnos confunden `and` con `or`
            example:
                error_text: |
                    Ambos comandos podrían parecer similares, pero su función es muy diferente.
                error_code: |
                    juego es preguntar '¿Quieres jugar a un juego?'
                    tiempo es preguntar '¿Tienes tiempo para jugar?'
                    si juego es 'sí' o tiempo es 'sí'
                        imprimir '¡Juguemos!'
                solution_text: |
                    En este caso, la persona debería responder sí a ambas preguntas, así que debes usar `and`.
                solution_code: |
                    uego es preguntar '¿Quieres jugar a un juego?'
                    tiempo es preguntar '¿Tienes tiempo para jugar?'
                    si juego es 'sí' y tiempo es 'sí'
                        imprimir '¡Juguemos!'
    -   level: '14'
        sections:
        -   title: Los alumnos confunden los signos < y >
            example:
                error_text: |
                    A menudo, los alumnos ya están familiarizados con estos signos de sus clases de matemáticas. Pero si tus alumnos no conocen todavía estos signos, quizá tengan un desafío con esto.
                error_code: |
                    edad = preguntar '¿Cuántos años tienes?'
                    si edad < 12
                        imprimir '¡Eres mayor que yo!'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    edad = preguntar '¿Cuántos años tienes?'
                    si edad > 12
                        imprimir '¡Eres mayor que yo!'
        -   title: Los alumnos usan los signos incorrectos para `!=` `<=` y `>=`
            example:
                error_text: |
                    Estos signos probablemente sean nuevos para la mayoría de los alumnos. Asegúrate de explicar estos signos a tus alumnos.
                error_code: |
                    nombre = preguntar '¿Cómo te llamas?'
                    si nombre =< 'Hedy'
                        imprimir 'No eres Hedy'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    nombre = preguntar '¿Cómo te llamas?'
                    si nombre != 'Hedy'
                        imprimir 'No eres Hedy'
        -   title: Los alumnos olvidan usar el signo ==
            example:
                error_text: |
                    En este nivel, los alumnos todavía pueden usar el = o es. Pero en otros niveles, o en Python, quizá encuentren problemas por eso. Así que es mejor enseñarles a usarlo.
                error_code: |
                    nombre = preguntar '¿Cómo te llamas?'
                    si nombre = 'Hedy'
                        imprimir '¡Eres genial!'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    nombre = preguntar '¿Cómo te llamas?'
                    si nombre == 'Hedy'
                        imprimir '¡Eres genial!'
    -   level: '15'
        sections:
        -   title: Los alumnos olvidan la sangría en el bucle mientras
            example:
                error_text: |
                    La sangría suele ser complicada para los alumnos.
                error_code: |
                    respuesta = 0
                    mientras respuesta != 25
                    respuesta = preguntar '¿Cuánto es 5 veces 5?'
                    imprimir 'Se ha dado una respuesta correcta'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    respuesta = 0
                    mientras respuesta != 25
                        respuesta = preguntar '¿Cuánto es 5 veces 5?'
                    imprimir 'Se ha dado una respuesta correcta'
    -   level: '16'
        sections:
        -   title: Los alumnos olvidan los corchetes
            example:
                error_text: |
                    Desde este nivel en adelante las listas deben ir entre corchetes.
                error_code: |
                    helado = 'fresa', 'chocolate'
                    imprimir 'Me encanta el helado de ' helado[aleatorio]
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    helado = ['fresa', 'chocolate']
                    imprimir 'Me encanta el helado de ' helado[aleatorio]
        -   title: Los alumnos usan los corchetes incorrectos
            example:
                error_text: |
                    Desde este nivel en adelante las listas deben ir entre corchetes.
                error_code: |
                    helado = ('fresa', 'chocolate'}
                    imprimir 'Me encanta el helado de ' helado[aleatorio]
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    helado = ['fresa', 'chocolate']
                    imprimir 'Me encanta el helado de ' helado[aleatorio]
        -   title: Los alumnos se olvidan las comillas mientras se centran los corchetes
            example:
                error_text: |
                    A veces los alumnos están tan atentos al nuevo aspecto de la sintaxis, que se olvidan las comillas.
                error_code: |
                    helado = [fresa, chocolate]
                    imprimir 'Me encanta el helado de ' helado[aleatorio]
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    helado = ['fresa', 'chocolate']
                    imprimir 'Me encanta el helado de ' helado[aleatorio]
        -   title: Los alumnos todavía usan el viejo comando en aleatorio
            example:
                error_text: |
                    A veces los alumnos están tan atentos al nuevo aspecto de la sintaxis, que se olvidan las comillas.
                error_code: |
                    helado = [fresa, chocolate]
                    imprimir 'Me encanta el helado de ' helado en aleatorio
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    helado = ['fresa', 'chocolate']
                    imprimir 'Me encanta el helado de ' helado[aleatorio]
        -   title: Los alumnos se olvidan las comillas cuando se centran en los corchetes
            example:
                error_text: |
                    A veces los alumnos están tan atentos al nuevo aspecto de la sintaxis, que se olvidan las comillas.
                error_code: |
                    helado = [fresa, chocolate]
                    imprimir 'Me encanta el helado de ' helado[aleatorio]
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    helado = ['fresa', 'chocolate']
                    imprimir 'Me encanta el helado de ' helado[aleatorio]
    -   level: '17'
        sections:
        -   title: Los alumnos usan `{elif}` como `{else}`, sin una condición
            example:
                error_text: |
                    El comando `{elif}` necesita una condición tras él. No se puede usar como `{else}`, sin una condición.
                error_code: |
                    color = preguntar '¿Cuál es tu color favorito?'
                    {if} color == 'verde':
                        {print} 'el verde es bonito'
                    {elif}:
                        {print} 'Me gusta el verde'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    color = {ask} '¿Cuál es tu color favorito?'
                    {if} color == 'verde':
                        {print} 'el verde es bonito'
                    {elif} color == amarillo:
                        {print} 'el amarillo está bien'
                    {else}:
                        {print} 'Me gusta el verde'
        -   title: Los alumnos se olvidan los dos puntos
            example:
                error_text: |
                    Tras cada comando que necesite sangría, se deben usar dos puntos.
                error_code: |
                    respuesta = preguntar '¿Qué tal estás?'
                    {if} respuesta {is} 'genial'
                        {print} '¡Yo también!'
                    {elif} respuesta {is} 'mal'
                        {print} '¡Deja que te anime!'
                    {else}
                        {print} '¡Estoy genial!'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    respuesta = preguntar '¿Qué tal estás?'
                    si respuesta es 'genial':
                        imprimir '¡Yo también!'
                    sinosi respuesta es 'mal':
                        imprimir '¡Deja que te anime!'
                    sino:
                        imprimir '¡Estoy genial!'
    -   level: '18'
        sections:
        -   title: Los alumnos olvidan usar los paréntesis
            example:
                error_text: |
                    Los alumnos olvidarán poner paréntesis alrededor de sus textos.
                error_code: |
                    imprimir '¡mi nombre es Hedy!'
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    imprimir('¡mi nombre es Hedy!')
        -   title: Los alumnos todavía usarán el comando preguntar
            example:
                error_text: |
                    El comando preguntar se ha usado desde el nivel 1. Así que puede ser complicado que los alumnos cambien a entrada en vez de preguntar.
                error_code: |
                    imprimir('¡Mi nombre es Hedy!')
                    nombre = preguntar('¿Cómo te llamas?')
                    imprimir('Así que tu nombre es ', nombre)
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    imprimir('¡Mi nombre es Hedy!')
                    nombre = entrada('¿Cómo te llamas?')
                    imprimir('Así que tu nombre es ', nombre)
        -   title: Los alumnos quizá usen los paréntesis como comillas
            example:
                error_text: |
                    Han aprendido a usar las variables fuera de las comillas, así que quizás hagan lo mismo con los paréntesis. Cuál no es la manera correcta de usarlos.
                error_code: |
                    temperatura = 25
                    imprimir('Hay ') temperatura ('grados fuera')
                solution_text: |
                    Este es el código correcto:
                solution_code: |
                    temperatura = 25
                    imprimir('Hay ', temperatura, 'grados fuera')
    key: errores_comunes
    intro: |
        Tu puedes aprender de tus errores, especialmente programando!
        Errar es inevitable y una gran oportunidad para aprender, pero para los profesores puede ser difícil encontrar la solución correcta a un error!
        Especialmente mientras el código crece junto a al progreso de los niveles. Es por esto que hemos hecho una lista de los errores frecuentes en cada nivel y sus soluciones.
start-sections:
-   title: ¡Programación textual más fácil!
    text: |
        Muchos colegios y profesores en todo el mundo quieren enseñar programación a sus alumnos. Al principio suele hacerse con herramientas lúdicas, desde el robot Beebot a
        Scratch Junior o Scratch. Después de usar estas herramientas, los niños suelen querer pasar a lenguajes de programación textuales más potentes, como Python.

        Sin embargo Python es complicado, porque sólo está disponible en inglés, y requiere que los alumnos aprendan conceptos de programación y sintaxis complejos de una vez.
        ¡Hedy es la manera fácil para empezar con lenguajes de programación textuales! Hedy es de uso gratuito, de código abierto, y se diferencia de otros lenguajes de programación textuales en tres aspectos.

        1. Hedy es multilingüe, puedes usar Hedy en tu propio lenguaje
        2. Hedy es gradual, para que puedas aprender un concepto y su sintaxis a la vez
        3. Hedy está construido para el aula, permitiendo a los profesores personalizar completamente la experiencia de sus alumnos
-   title: Programación multilingüe
    text: |
        Mientras que la mayoría de los lenguajes de programación textual tienen palabras clave en inglés, como `for` o `repeat`, ¡Hedy puede usarse en cualquier lenguaje! Ahora mismo admitimos 39 idiomas distintos, incluyendo español, árabe, chino simplificado e hindú. Si tu idioma no está disponible siempre puedes iniciar una nueva traducción.
-   title: Multi-lingual programming
    text: |
        While almost all textual programming language have keywords in English, such as `for` or `repeat`, Hedy can be used in any language! We currently support 39 different languages, including Spanish, Arabic, Simplified Chinese and Hindi. If your language is not available you can always start a a new translation.
-   title: Built for the classroom
    text: |
        Hedy is suitable for kids aged 10 and up and designed for classroom use.
        Teachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.
-   title: La programación en contexto
    text: |
        ¡Hedy está pensado para todos los niños que quieran aprender a programar! Aunque se recomienda que sepan leer inglés con facilidad.
-   title: ¿Se necesita tener experiencia como programador?
    text: |
        ¡Sí! Hedy es 'Código abierto', lo que significa que cualquiera puede ayudarnos a mejorar Hedy.
        Puedes encontrar nuestro código en <a href="https://github.com/hedyorg/hedy" target="_blank">Github</a>.
        Si te gusta Hedy y quieres colaborar, aceptamos (y estamos muy agradecidos por ello) <a href="https://github.com/sponsors/hedyorg" target="_blank">donaciones</a>!
-   title: ¿Tengo que instalar algo?
    text: No. Hedy funciona en el navegador, que es el programa que utilizas para ver esta página. Probablemente Chrome o Edge o Firefox. Hedy también funciona en móviles y tablets.
-   title: ¿Necesito experiencia en programación para enseñar con Hedy?
    text: |-
        No, eso no es necesario. Todos los conceptos se explican en las diapositivas y en la interfaz para los alumnos.
        Si creas una cuenta de profesor gratuita, también tienes acceso al manual del profesor con información sobre como enseñar
        y los errores más comunes.
