levels:
    1:
        1:
            question_text: Wie heißt diese Programmiersprache?
            mp_choice_options:
            -   feedback: Gut gemacht!
                option: Hedy
            -   feedback: Nicht dieses!
                option: Heddy
            -   feedback: Dieses nicht!
                option: Haydie
            -   feedback: Nicht dieses!
                option: Heidi
            hint: Es ist nach Hedy Lamarr benannt.
            correct_answer: A
            question_score: '10'
        2:
            code: _ Hallo!
            question_text: Welche müssen in die Lücken gefüllt werden, um den Text Hello! erscheinen zu lassen?
            mp_choice_options:
            -   feedback: '`{echo}` wiederholt eine gegebene Antwort.'
                option: '`{echo}`'
            -   feedback: Richtig!
                option: '`{print}`'
            -   feedback: Hallo ist kein Befehl.
                option: '`hello`'
            -   feedback: Mit `{ask}` kannst du eine Frage stellen.
                option: '`{ask}`'
            hint: _ Hallo Welt!
            correct_answer: B
            question_score: '10'
        3:
            question_text: Wie fragst du, was jemandes Lieblingsfarbe ist?
            mp_choice_options:
            -   feedback: '`{print}` gibt Text aus, aber es stellt keine Fragen.'
                option: |-
                    ```
                    {print} Was ist deine Lieblingsfarbe?
                    ```
            -   feedback: Du brauchst nur einen Befehl, nicht zwei.
                option: |-
                    ```
                    {ask} {print} Was ist deine Lieblingsfarbe?
                    ```
            -   feedback: Großartig!
                option: |-
                    ```
                    {ask} Was ist deine Lieblingsfarbe?
                    ```
            -   feedback: '`{echo}` gibt deine Antwort aus.'
                option: |-
                    ```
                    {echo} Was ist deine Lieblingsfarbe?
                    ```
            hint: Mit dem `{ask}`-Befehl kannst du etwas fragen
            correct_answer: C
            question_score: '10'
        4:
            code: |-
                Hallo, ich bin Hedy!
                {ask} Wer bist du?
                {echo} Hallo…
            question_text: Was ist falsch an diesem Code?
            mp_choice_options:
            -   feedback: Richtig!
                option: '`{print}` fehlt in Zeile 1.'
            -   feedback: Der Befehl ist richtig geschrieben.
                option: Der Befehl in Zeile 2 ist falsch geschrieben.
            -   feedback: '`{echo}` ist ein Befehl, es gibt noch einen weiteren Fehler.'
                option: '`{echo}` ist kein Befehl.'
            -   feedback: Falsch, schau nochmal genau hin!
                option: Nichts! Der Code ist perfekt!
            hint: Zeile 1 sieht nicht ganz richtig aus
            correct_answer: A
            question_score: '10'
        5:
            code: |-
                {ask} Was ist dein Lieblingstier?
                _ Also ist dein Lieblingstier...
            question_text: Welcher Befehl fehlt in Zeile 2?
            mp_choice_options:
            -   feedback: Nein, du möchtest, dass dir die Antwort laut zurückgegeben wird.
                option: '`{print}`'
            -   feedback: Hedy ist kein Befehl.
                option: '`Hedy`'
            -   feedback: Mit `{ask}` kannst du fragen stellen.
                option: '`{ask}`'
            -   feedback: Richtig!
                option: '`{echo}`'
            hint: Du möchtest die Antwort am Ende von Zeile 2 sehen...
            correct_answer: D
            question_score: '10'
        6:
            code: |-
                {print} Hi ich bin Hedy!
                {print} Welches Fußball-Team unterstützt du?
                {echo} Du unterstützt...
                {print} Cool! Ich auch!
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: '`{print}` in Zeile 1 ist richtig.'
                option: In Zeile 1 sollte `{print}` mit `{ask}` ersetzt werden.
            -   feedback: Großartig! Du hast aufgepasst!
                option: In Zeile 2 sollte `{print}` mit `{ask}` ersetzt werden.
            -   feedback: '`{echo}` ist richtig.'
                option: Zeile 3 muss mit `{print}` anstelle von `{echo}` beginnen.
            -   feedback: Nein, der Fehler liegt woanders
                option: In Zeile 4, `{print}` ist falsch geschrieben.
            hint: Prüfe die `{print}` Befehle.
            correct_answer: B
            question_score: '10'
        7:
            code: |-
                {print} Willkommen bei Hedys Restaurant!
                {ask} Was würdest du gerne essen?
                {echo}  Deine Bestellung lautet ...
                {print} Kommt sofort! Guten Appetit!
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Bist du sicher, dass etwas nicht stimmt?
                option: In Zeile 1 sollte `{print}` mit `{ask}` ersetzt werden
            -   feedback: Bist du sicher, dass etwas nicht stimmt?
                option: In Zeile 1 sollte `{print}` mit `{echo}` ersetzt werden
            -   feedback: Bist du sicher, dass etwas nicht stimmt?
                option: In Zeile 3 sollte `{echo}` mit `{print}` ersetzt werden
            -   feedback: Richtig!
                option: Nichts! Dies ist ein perfekter Code!
            hint: Prüfe den Code Zeile für Zeile
            correct_answer: D
            question_score: '10'
        8:
            question_text: Wie wird der Befehl `{echo}` verwendet?
            mp_choice_options:
            -   feedback: Dafür ist `{ask}` da!
                option: Du kannst `{ask}` verwenden um eine Frage zu stellen.
            -   feedback: Dafür ist `{print}` da!
                option: Du kannst es genauso benutzen wie `{print}`.
            -   feedback: Gut gemacht!
                option: Du kannst es verwenden, um eine Antwort zu wiederholen.
            -   feedback: Das ist nicht richtig...
                option: Du kannst es verwenden, um Text verschwinden zu lassen.
            hint: '`{echo}` wird nach einem `{ask}` Befehl benutzt.'
            correct_answer: C
            question_score: '10'
        9:
            code: |-
                {print} Hallo!
                {print} Wie geht es dir?
                {echo} Also geht es dir...
            question_text: Was ist an diesem Code falsch?
            mp_choice_options:
            -   feedback: Nein, `{print}` ist richtig. Wo wird die Frage gestellt?
                option: '`{print}` in line 1 should be `{ask}`'
            -   feedback: Super!
                option: '`{print}` in line 2 should be `{ask}`'
            -   feedback: Nein, `{echo}` ist richtig. Wo wird die Frage gestellt?
                option: '`{echo}` in Zeile 3 sollte `{ask}` sein'
            -   feedback: Suche sorgfältig nach dem Fehler...
                option: Nichts. Dies ist einwandfreier Code!
            hint: '`{ask}` erlaubt es dir, eine Frage zu stellen'
            correct_answer: B
            question_score: '10'
        10:
            code: |-
                {ask} Are you ready to go to level 2?
                {echo}
                {echo}
            question_text: Welche Ausgabe wird im Ausgabebereich erscheinen, wenn du diesen Code ausführst?
            mp_choice_options:
            -   feedback: There are two echo commands
                option: Are you ready to go to level 2?
            -   feedback: Great job!
                option: |-
                    Yes!
                    Yes!
            -   feedback: There are two echo commands
                option: Yes!
            -   feedback: There are two echo commands
                option: |-
                    Are you ready to go to level 2?
                    Yes!
            hint: Let's go!
            correct_answer: B
            question_score: '10'
    2:
        1:
            question_text: Welche Aussage ist wahr?
            mp_choice_options:
            -   feedback: Dazu ist frage da
                option: Du kannst den `{print}` Befehl benutzen, um Fragen zu stellen.
            -   feedback: Das ist nicht richtig
                option: Du kannst den `{ask}` Befehl benutzen um eine Antwort auszugeben.
            -   feedback: Gut
                option: Mit dem `{print}` Befehl kannst du Text erscheinen lassen
            -   feedback: So funktioniert `{sleep}` nicht.
                option: Mit dem {sleep} Befehl kannst du Text vom Bildschirm entfernen.
            hint: '`{print}` funktioniert genauso wie in Level 1'
            correct_answer: C
            question_score: '10'
        2:
            question_text: Welcher Code ist korrekt?
            mp_choice_options:
            -   feedback: Super!
                option: |-
                    ```
                    name {is} {ask} Wie ist dein Name?
                    ```
            -   feedback: Die Worte sind richtig, die Reihenfolge nicht!
                option: |-
                    ```
                    {ask} {is} name Wie ist dein Name?
                    ```
            -   feedback: Das funktionierte in Level 1, aber in Level 2 und höhere funktioniert es anders.
                option: |-
                    ```
                    {ask} Wie lautet dein Name?
                    ```
            -   feedback: Die Worte sind richtig, die Reihenfolge nicht!
                option: |-
                    ```
                    {ask} Wie lautet dein Name? {is} name
                    ```
            hint: '`{ask}` funktioniert nicht wie in Level 1'
            correct_answer: A
            question_score: '10'
        3:
            code: |-
                name {is} Marleen
                {print} name geht auf den Markt und kauft einen Apfel.
            question_text: Was erscheint in der Ausgabe, wenn du diesen Code ausführst?
            mp_choice_options:
            -   feedback: Das Wort name wird durch Marleen ersetzt
                option: name geht auf den Markt und kauft einen Apfel.
            -   feedback: Der zweite Teil des Satzes wird nicht ausgelassen!
                option: Marleen geht auf den Markt.
            -   feedback: Richtig!
                option: Marleen geht auf den Markt und kauft einen Apfel.
            -   feedback: Sie wird nicht durch name ersetzt
                option: Marleen geht auf den Markt und Marleen kauft einen Apfel.
            hint: Das Wort name wird durch Marleen ersetzt
            correct_answer: C
            question_score: '10'
        4:
            code: |-
                Name {is} Hedy
                {print} Hi mein Name ist Name!
            question_text: Was wird auf dem Ausgabebildschirm angezeigt, wenn du diesen Code ausführst?
            mp_choice_options:
            -   feedback: Der Variablenname wird durch Hedy ersetzt
                option: Hi my name is name
            -   feedback: Der Variablenname wird durch Hedy ersetzt
                option: Hi my name is Hedy
            -   feedback: Der Variablenname wird durch Hedy ersetzt
                option: Hi my Hedy is name
            -   feedback: Richtig, dieser Fehler wird in Level 3 behoben!
                option: Hi my Hedy is Hedy
            hint: '''name'' wird an beiden Stellen durch ''Hedy'' ersetzt'
            correct_answer: D
            question_score: '10'
        5:
            question_text: Was passiert wenn du den `{sleep}` Befehl verwendest?
            mp_choice_options:
            -   feedback: glücklicherweise nicht!
                option: Es verlangsamt deinen Computer
            -   feedback: glücklicherweise nicht!
                option: Es schließt Hedy
            -   feedback: Das ist korrekt!
                option: Dein Programm pausiert für eine Sekunde und fährt dann fort
            -   feedback: Nein, es wäre am Ende deines Codes nutzlos
                option: Du fügst es am Ende ein, damit Hedy weiß, dass dein Programm fertig ist
            hint: Der Computer wartet eine Sekunde lang beim Befehl `{sleep}`
            correct_answer: C
            question_score: '10'
        6:
            code: |-
                {print} Und der Preis für die beste Programmiersprache geht an...
                _
                {print} Hedy!
            question_text: Was sollte in den Zeilen stehen?
            mp_choice_options:
            -   feedback: Perfekt!
                option: '`{sleep}`'
            -   feedback: Hier gibt es nichts zu wiederholen
                option: '`{echo}`'
            -   feedback: Es gibt hier keinen Text für `{print}`
                option: '`{print}`'
            -   feedback: Es gibt keine Frage, die gestellt wird
                option: '`{ask}`'
            hint: Pause für dramatischen Effekt...
            correct_answer: A
            question_score: '10'
        7:
            code: |-
                {print} Ich werde in 3 Sekunden explodieren!
                _
                {print} BOOM!
            question_text: Welcher Befehl sollte in Zeile 2 verwendet werden?
            mp_choice_options:
            -   feedback: Du brauchst `{print}` nicht
                option: |-
                    ```
                    {print} 3
                    ```
            -   feedback: Perfekt!
                option: |-
                    ```
                    {sleep} 3
                    ```
            -   feedback: Auf diese Weise wird die Bombe in 1 Sekunde explodieren
                option: |-
                    ```
                    {sleep}
                    ```
            -   feedback: Mach es dir leichter, indem du die Zahl 3 verwendest
                option: |-
                    ```
                    {sleep} {sleep} {sleep}
                    ```
            hint: Du willst, dass der Computer 3 Sekunden lang wartet
            correct_answer: B
            question_score: '10'
        8:
            code: |-
                {ask} {is} Wie alt bist du?
                {print} age
            question_text: Wie würdest du die erste Zeile des Codes korrigieren?
            mp_choice_options:
            -   feedback: Das ist die falsche Reihenfolge
                option: |-
                    ```
                    age {ask} {is} Wie alt bist du?
                    ```
            -   feedback: Das ist die falsche Reihenfolge
                option: |-
                    ```
                    {ask} {is} age Wie alt bist du?
                    ```
            -   feedback: Du hast es verstanden!
                option: |-
                    ```
                    age {is} {ask} Wie alt bist du?
                    ```
            -   feedback: Wo ist der `{ask}` Befehl?
                option: |-
                    ```
                    age {is} Wie alt bist du?
                    ```
            hint: Der Variablenname sollte an erster Stelle stehen
            correct_answer: C
            question_score: '10'
        9:
            code: |-
                dogs {is} animal
                {print} I love animal
            question_text: Was läuft in diesem Code schief?
            mp_choice_options:
            -   feedback: Der Variablenname ist animal
                option: 'Zeile 1 sollte lauten: dogs `{is}` animals'
            -   feedback: Großartig!
                option: 'Zeile 1 sollte lauten: animal `{is}` dogs'
            -   feedback: Der Variablenname ist animal
                option: 'Zeile 2 sollte lauten: `{print}` I love animals'
            -   feedback: Schlafe wird nicht benutzt, um Text zu `{print}`
                option: 'Zeile 2 sollte lauten: `{sleep}` I love animals'
            hint: Du willst mit  `{print}`  'I love dogs' ausgeben
            correct_answer: B
            question_score: '10'
        10:
            code: |-
                sorte {is} _
                {print} Dein Lieblingseis ist...
                {sleep}
                {print} sorte
            question_text: Welcher Befehl muss in Zeile 1 verwendet werden?
            mp_choice_options:
            -   feedback: Du willst die Lieblingssorte wissen!
                option: |-
                    ```
                    {sleep} 3
                    ```
            -   feedback: Du willst keinen  `{print}` Befehl in der Mitte der Zeile...
                option: |-
                    ```
                    {print} Erdbeere
                    ```
            -   feedback: So machst du eine Liste. Das willst du jetzt gerade nicht.
                option: |-
                    ```
                    Erdbeere, Schokolade, Vanille
                    ```
            -   feedback: Das ist richtig!
                option: |-
                    ```
                    {ask} Was ist dein Lieblingseis?
                    ```
            hint: Du willst mit `{ask}` eine Frage stellen
            correct_answer: D
            question_score: '10'
    3:
        1:
            question_text: Mit welchen Befehlen kann Hedy etwas Zufälliges auswählen?
            mp_choice_options:
            -   feedback: '`{print}` wird verwendet, um Texte auszugeben'
                option: '`{print}`'
            -   feedback: '`{ask}` wird verwendet, um Fragen zu stellen'
                option: '`{ask}`'
            -   feedback: '`{is}` wird verwendet, um eine Liste zu erstellen'
                option: '`{is}`'
            -   feedback: Korrekt!
                option: '`{at}` `{random}`'
            hint: Zufällig bedeutet ohne Plan.
            correct_answer: D
            question_score: '10'
        2:
            code: |-
                tiere {is} Hund Katze Kuh
                {print} tiere {at} {random}
            question_text: Welcher Fehler versteckt sich in diesem Code?
            mp_choice_options:
            -   feedback: Gut gemacht!
                option: 'Du brauchst Beistriche in Zeile 1: Hund, Katze, Kuh.'
            -   feedback: Nein, `{print}` brauchst du nicht
                option: Zeile 1 muss mit  `{print}` beginnen.
            -   feedback: tiere ist korrekt.
                option: Zeile 2 muss sein 'tier' anstatt 'tiere'
            -   feedback: '`{at} {random}` ist die richtige Schreibweise'
                option: '`{at} {random}` ist nicht richtig geschrieben'
            hint: In Zeile 1 hat sich ein Fehler eingeschlichen
            correct_answer: A
            question_score: '10'
        3:
            code: |-
                optionen {is} Schere, Stein, Papier
                {print} Schere, Stein, Papier {at} {random}
            question_text: Wie beseitigt man den Fehler in Zeile 2?
            mp_choice_options:
            -   feedback: Fast richtig. Die Reihenfolge der Wörter ist noch nicht korrekt.
                option: |-
                    ```
                    {at} {random} {print} options
                    ```
            -   feedback: Du willst, dass Hedy nicht immer Stein mit {print} ausgibt, manchmal möchtest du auch Schere oder Papier.
                option: |-
                    ```
                    {print} Stein {at} {random}
                    ```
            -   feedback: Sehr gut!
                option: |-
                    ```
                    {print} options {at} {random}
                    ```
            -   feedback: Such genau nach dem Fehler
                option: Nichts, der Code ist korrekt!
            hint: Die Variable (die Liste) heißt optionen.
            correct_answer: C
            question_score: '10'
        4:
            code: |-
                preise {is} 1 Euro, 100 Euro, 1 million Euro
                {print} preis {at} {random}
            question_text: Was muss in Zeile 2 geändert werden, um einen Zufallspreis auszugeben?
            mp_choice_options:
            -   feedback: Du möchtest nicht das Wort `{print}` ausgeben, aber du möchtest einen Preis `{print}` aus deiner Liste `{at} {random}`
                option: |-
                    ```
                    {print} preis
                    ```
            -   feedback: Großartig! Du hast wirklich aufgepasst.
                option: |-
                    ```
                    {print} preise {at} {random}
                    ```
            -   feedback: '`{at} {random}` wird hinter der Variablen platziert.'
                option: |-
                    ```
                    {print} {at} {random} preise
                    ```
            -   feedback: Such aufmerksam nach dem Fehler den du übersehen hast!
                option: Nichts, dieser Code ist in Ordnung.
            hint: Der Variablenname ist prices
            correct_answer: B
            question_score: '10'
        5:
            code: |-
                problemstellung {is} {ask} Was möchtest du wissen?
                {print} problemstellung
                antworten {is} ja, nein, vielleicht
                {print} antworten {at} {random}
            question_text: Wo ist der Fehler in diesem Code?
            mp_choice_options:
            -   feedback: Nein, das ist nicht falsch.
                option: Zeile 1 sollte `{print}` anstelle von `{ask}` enthalten
            -   feedback: Nein das ist nicht falsch.
                option: Zeile 2 soll `{ask}` anstelle von `{print}` enthalten
            -   feedback: Nein, das ist nicht falsch.
                option: Zeile 2 sollte antworten `{at} {random}` `{is}` ja, nein, vielleicht
            -   feedback: Das ist richtig!
                option: Nichts, dieser Code ist perfekt
            hint: Hat dieser Code überhaupt einen Fehler?
            correct_answer: D
            question_score: '10'
        6:
            code: |-
                problemstellung {is} {ask} Was möchtest du wissen?
                antworten ja, nein, vielleicht
                {print} antworten {at} {random}
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Nein das stimmt nicht
                option: Zeile 2 soll problemstellung anstelle von antworten enthalten
            -   feedback: Richtig
                option: Zeile 2 braucht den `{is}` Befehl
            -   feedback: Nein die Variable heißt antworten
                option: Zeile 3 soll antwort anstelle von antworten enthalten
            -   feedback: Tatsächlich hat Zeile 2 einen Fehler.
                option: Nichts! Dieser Code ist großartig!
            hint: Da stimmt etwas nicht mit Zeile 2.
            correct_answer: B
            question_score: '10'
        7:
            code: |-
                bücher {is} Harry Potter, The Hobbit, Green Eggs and Ham
                dein_buch {is} {ask} Was ist dein Lieblingsbuch?
                {add} dein_buch {to} bücher
                {print} bücher {at} {random}
            question_text: Was macht der `{add}` Befehl?
            mp_choice_options:
            -   feedback: Der entferne-Befehl entfernt, der addiere-Befehl fügt hinzu
                option: Der `{add}` Befehl entfernt ein zufälliges Buch aus der Liste
            -   feedback: Tut es nicht. Es fügt eine Antwort zur Liste hinzu!
                option: Der `{add}` Befehl fügt ein zufälliges Buch zur Liste hinzu
            -   feedback: Richtig!
                option: Der `{add}` Befehl fügt dein Lieblingsbuch zur Liste hinzu
            -   feedback: Nein, es fügt dein Lieblingsbuch zur Liste hinzu
                option: Der `{add}` Befehl gibt dein Lieblingsbuch aus.
            hint: Der `{add}` Befehl fügt ein Buch hinzu, aber welches?
            correct_answer: C
            question_score: '10'
        8:
            code: |-
                chips {is} Meersalz, Paprika, Saure Sahne
                {remove} Meersalz {from} chips
                {remove} Paprika {from} chips
                {print} chips {at} {random}
            question_text: Was ist die Ausgabe dieses Code?
            mp_choice_options:
            -   feedback: Schau dir den `{remove}` Befehl an
                option: Das kannst du nicht sagen, weil Hedy mit `{print}` in Verbindung mit `{at} {random}` eine der 3 Geschmacksrichtungen ausgibt
            -   feedback: Meersalz wird von der Liste entfernt
                option: sea salt
            -   feedback: Paprika wird von der Liste entfernt
                option: Paprika
            -   feedback: Das ist richtig!
                option: Saure Sahne
            hint: Es gibt 3 Geschmacksrichtungen, aber 2 werden entfernt. Welche bleibt übrig?
            correct_answer: D
            question_score: '10'
        9:
            code: |-
                farben {is} Blau, Lila, Grün
                gewählte_farbe {is} {ask} Welche Haarfarbe würdest du nicht haben wollen?
                {remove} gewählte_farbe {from} farben
                {print} Ich werde meine Haare farbe {at} {random} färben
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Aber vielleicht möchtest du blaues Haar!
                option: 'Zeile 3 sollte sein: `{remove}` Blau `{from}` farben'
            -   feedback: Du möchtest die gewählte Farbe entfernen, also ist `{remove}` richtig.
                option: Zeile 3 sollte einen `{add}` Befehl anstelle eines `{remove}` Befehls haben
            -   feedback: Großartig gemacht!
                option: In Zeile 4 sollte die Variable farben sein anstelle von farbe
            -   feedback: Finde den Fehler!
                option: Nichts, dies ist korrekter Code!
            hint: Schau in Zeile 3
            correct_answer: C
            question_score: '10'
        10:
            code: |-
                gassigeher {is} Papa, Mama, Sam, Petra
                gestern_gegangen {is} {ask} Wer ging gestern Gassi?
                {print} gestern_gegangen sollte heute nicht erneut mit dem Hund Gassi gehen
                _
                {print} gassigeher {at} {random} , du bist dran mit Gassi gehen!
            question_text: Was sollte in den Lücken sein _?
            mp_choice_options:
            -   feedback: Super!
                option: |-
                    ```
                    {remove} gestern_gegangen {from} gassigeher
                    ```
            -   feedback: '`{remove} {from}` oder `{add} {to}`, nicht `{remove} {to}`'
                option: |-
                    ```
                    {remove} gestern gegangen {to} gassigeher
                    ```
            -   feedback: gestern ist keine Variable
                option: |-
                    ```
                    {remove} gassigeher {from} gestern
                    ```
            -   feedback: Dies hat die Wahrscheinlichkeit erhöht, dass die Person die gestern ging jetzt schon wieder gehen muss. Das ist gemein.
                option: |-
                    ```
                    {add} gestern_gegangen {to} gassigeher
                    ```
            hint: Die Person, die gestern ging, sollte von der Liste entfernt werden.
            correct_answer: A
            question_score: '10'
    4:
        1:
            question_text: Welches dieser Programme ist korrekt?
            mp_choice_options:
            -   feedback: Das ist richtig
                option: |-
                    ```
                    {print} 'Ich bin sehr aufgeregt dieses Quiz zu machen!'
                    ```
            -   feedback: '`{ask}` benötigt ebenfalls Anführungszeichen!'
                option: |-
                    ```
                    {print} Ich bin sehr aufgeregt dieses Quiz zu machen!
                    ```
            -   feedback: '`{at} {random}` funktioniert weiterhin'
                option: |-
                    ```
                    {print} 'I'ch bin sehr aufgeregt dieses Quiz zu machen!'
                    ```
            -   feedback: Nein, aber 2 andere Befehle schon.
                option: |-
                    ```
                    {print} 'I'ch bin sehr aufgeregt dieses Quiz zu machen!
                    ```
            hint: In Level 4 benötigst du für 2 Befehle Anführungszeichen.
            correct_answer: A
            question_score: '10'
        2:
            question_text: Welcher Code benutzt die richtigen Anführungszeichen?
            mp_choice_options:
            -   feedback: Dieses Anführungszeichen ist schräg, du brauchst ein gerades.
                option: |-
                    ```
                    {print} `hello`
                    ```
            -   feedback: Richtig
                option: |-
                    ```
                    {print} 'hallo'
                    ```
            -   feedback: Hier gibt es keine Anführungszeichen!
                option: |-
                    ```
                    {print} hallo
                    ```
            -   feedback: Dies ist ein Komma, du brauchst Anführungszeichen.
                option: |-
                    ```
                    {print} ,hallo,
                    ```
            hint: Wähle die richtigen Anführungszeichen.
            correct_answer: B
            question_score: '10'
        3:
            question_text: Wo werden die Anführungszeichen richtig benutzt?
            mp_choice_options:
            -   feedback: Bitte füge Anführungszeichen hinzu!
                option: |-
                    ```
                    {print} Hi Im Hedy
                    ```
            -   feedback: Wörter, die du ausgeben möchtest, benötigen davor und dahinter Anführungszeichen.
                option: |-
                    ```
                    {print} 'Hi Im Hedy
                    ```
            -   feedback: Das erste Anführungszeichen sollte hinter `{print}` stehen
                option: |-
                    ```
                    '{print} Hi Im Hedy'
                    ```
            -   feedback: Perfekt!
                option: |-
                    ```
                    {print} 'Hi Im Hedy'
                    ```
            hint: Sowohl vor als auch hinter Wörtern, die du ausgeben möchtest, sollten Anführungszeichen stehen.
            correct_answer: D
            question_score: '10'
        4:
            question_text: Welche Aussage ist wahr?
            mp_choice_options:
            -   feedback: Die Anführungszeichen sollten nicht um den Befehl selbst herum stehen.
                option: 'Du brauchst um `{print}` herum Anführungszeichen, wie hier: `''{print}''`.'
            -   feedback: Super!
                option: Du benötigst Anführungszeichen um die Wörter herum, die du ausgeben möchtest.
            -   feedback: Beide, `{print}` und `{ask}` benötigen Anführungszeichen
                option: Du brauchst keine Anführungszeichen, wenn du den `{ask}` Befehl benutzt
            -   feedback: Leider ist Hedy strenger.
                option: Du kannst selbst wählen, ob du Anführungszeichen benutzt oder nicht.
            hint: Ab Level 4 musst du Anführungszeichen benutzen.
            correct_answer: B
            question_score: '10'
        5:
            code: |-
                auswahlmöglichkeiten {is} Stein, Schere, Papier
                {print} 'auswahlmöglichkeiten {at} {random}'
            question_text: Was muss geändert werden, um das Spiel zum Laufen zu bringen?
            mp_choice_options:
            -   feedback: Schreibe nie Anführungszeichen vor den `{print}`-Befehl.
                option: |-
                    ```
                    '{print} options {at} {random}'
                    ```
            -   feedback: auswahlmöglichkeiten ist eine Variable. Du möchtest nicht wortwörtlich 'auswahlmöglichkeiten {at} {random}' ausgeben.
                option: |-
                    ```
                    {print} 'options' {at} {random}
                    ```
            -   feedback: Das ist richtig
                option: |-
                    ```
                    {print} options {at} {random}
                    ```
            -   feedback: Schau genau hin. Dort ist ein Fehler.
                option: Nichts, das Spiel funktioniert bereits!
            hint: Du möchtest nicht das Hedy wortwörtlich 'auswahlmöglichkeiten {at} {random}' ausgibt, du möchtest 'Stein' oder 'Papier' oder 'Schere' ausgeben.
            correct_answer: C
            question_score: '10'
        6:
            code: preise {is} 1 Euro, 100 Euro, 1 Million Euro
            question_text: Was wäre eine gute nächste Zeile in diesem Code?
            mp_choice_options:
            -   feedback: Großartig! Du kapierst es!
                option: |-
                    ```
                    {print} 'Du gewinnst...' preise {at} {random}
                    ```
            -   feedback: Hedy wird wortwörtlich 'preise {at} {random}' ausgeben
                option: |-
                    ```
                    {print} Du gewinnst... 'preise {at} {random}'
                    ```
            -   feedback: Du brauchst einige Anführungszeichen!
                option: |-
                    ```
                    {print} Du gewinnst... preise {at} {random}
                    ```
            -   feedback: Hedy wird wortwörtlich 'preise {at} {random}'' ausgeben
                option: |-
                    ```
                    {print} 'Du gewinnst... preise {at} {random}'
                    ```
            hint: 'Denk scharf nach: was ist eine Variable und sollte außerhalb von Anführungszeichen stehen? Und was sind normale Wörter, die innerhalb stehen sollten?'
            correct_answer: A
            question_score: '10'
        7:
            code: |-
                problemstellung {is} {ask} Was möchtest du wissen?
                antworten {is} ja, nein, vielleicht
                {print} antworten {at} {random}
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Richtig!
                option: Anführungszeichen fehlen in Zeile 1
            -   feedback: Eine Variable braucht keine Anführungszeichen
                option: Anführungszeichen fehlen in Zeile 2
            -   feedback: Du möchtest nicht, dass Hedy wortwörtlich 'antworten {at} {random}' ausgibt, also werden hier keine Anführungszeichen gebraucht!
                option: Anführungszeichen fehlen in Zeile 3
            -   feedback: Schau genau hin. Du hast einen Fehler übersehen!
                option: Nichts, dieser Code ist gut so wie er ist!
            hint: Prüfe jede Zeile, ob sie Anführungszeichen benötigen könnte oder nicht.
            correct_answer: A
            question_score: '10'
        8:
            code: |-
                {print} 'Willkommen bei der Geld-Show!'
                {print} 'Vor dir sind 3 Türen'
                Tür {is} {ask} 'Welche Tür wählst du?'
            question_text: Was wäre eine gute nächste Zeile in diesem Code?
            mp_choice_options:
            -   feedback: Wir brauchen Anführungszeichen
                option: |-
                    ```
                    {print} Also wählst du Tür Tür
                    ```
            -   feedback: Wenn der Spieler Tür 3 wählt, wird Hedy 'Also wählst du 3 3 ausgeben
                option: |-
                    ```
                    {print} 'Also wählst du ' Tür Tür
                    ```
            -   feedback: Super!
                option: |-
                    ```
                    {print} 'Also wählst du Tür ' Tür
                    ```
            -   feedback: Hedy wird wortwörtlich 'Also wählst du Tür Tür ausgeben
                option: |-
                    ```
                    {print} 'Also wählst du Tür Tür'
                    ```
            hint: Das zweite Wort Tür sollte mit der Nummer ersetzt werden, das erste sollte weiterhin das Wort Tür sein...
            correct_answer: C
            question_score: '10'
        9:
            code: |-
                clubs {is} Real Madrid, Bayern München, Manchester United, Ajax
                {print} clubs {at} {random} ' wird die Champions League gewinnen'
            question_text: Was wird nie im Ausgabebereich erscheinen?
            mp_choice_options:
            -   feedback: Hedy könnte es `{print}`
                option: Ajax wird die Champions League gewinnen
            -   feedback: Hedy könnte es `{print}`
                option: Real Madrid wird die Champions League gewinnen
            -   feedback: Hedy könnte es `{print}`
                option: Bayern München wird die Champions League gewinnen
            -   feedback: Das ist richtig. Es ist nicht in der Liste
                option: FC Barcelona wird die Champions League gewinnen
            hint: Was sind Hedys Auswahlmöglichkeiten von denen zufällig gewählt wird?
            correct_answer: D
            question_score: '10'
        10:
            code: |-
                leute {is} Mama, Papa, Emma, Sophie
                {print} Abgewaschen wird von...
                {print} leute {at} {random}
            question_text: Welche Aussage ist wahr?
            mp_choice_options:
            -   feedback: Eine Liste benötigt keine Anführungszeichen
                option: Anführungszeichen fehlen in Zeile 1
            -   feedback: Richtig
                option: Anführungszeichen fehlen in Zeile 2
            -   feedback: Zeile 3 benötigt keine Anführungszeichen, weil es nicht wortwörtlich ausgegeben wird
                option: Anführungszeichen fehlen in Zeile 2 und 3
            -   feedback: Du hast einen übersehen!
                option: Nichts, dieser Code hat keine Fehler
            hint: Eine Zeile benötigt Anführungszeichen, weil du sie wortwörtlich ausgeben möchtest.
            correct_answer: B
            question_score: '10'
    5:
        1:
            code: |-
                zahl {is} {ask} 'Was ist deine Glückszahl?'
                {if} zahl {is} 5 {print} 'Meine auch!'
                _ {print} 'Meine Glückszahl ist 5!'
            question_text: Welcher Befehl sollte in die Lücken _?
            mp_choice_options:
            -   feedback: Es gibt schon einen `{print}` Befehl.
                option: '`{print}`'
            -   feedback: Der `{if}` Befehl wird in der Zeile darüber benutzt.
                option: '`{if}`'
            -   feedback: Das ist es nicht!
                option: '`{sleep}`'
            -   feedback: Das ist richtig!
                option: '`{else}`'
            hint: Welches passt zum `{if}` Befehl?
            correct_answer: D
            question_score: '10'
        2:
            code: |-
                name {is} {ask} 'Was ist dein Name?'
                {if} name {is} Hedy {print} 'Spaß' {else} {print} 'weniger Spaß'
            question_text: Was erscheint im Ausgabebereich, wenn du den Namen Hedy eintippst?
            mp_choice_options:
            -   feedback: Das ist richtig!
                option: Spaß
            -   feedback: Wenn der Name Hedy ist, wird 'Spaß'' ausgegeben
                option: weniger Spaß
            -   feedback: Nein, es gibt den Namen nicht aus
                option: Hedy
            -   feedback: Glücklicherweise nicht!
                option: Error
            hint: '`{if}` name `{is}` Hedy `{print}` ...?'
            correct_answer: A
            question_score: '10'
        3:
            code: |-
                passwort {is} {ask} 'Was ist das Passwort?'
                {if} passwort {is} GEHEIMNIS {print} 'Richtig!'
                {else} {print} 'ALARM! EINDRINGLING!'
            question_text: Was ist das richtige Passwort?
            mp_choice_options:
            -   feedback: Dies wird ausgegeben, wenn du das richtige Passwort eintippst
                option: Richtig!
            -   feedback: Das ist richtig!'
                option: SECRET
            -   feedback: Das Passwort ist nicht Passwort...
                option: password
            -   feedback: Dies wird ausgegeben, wenn du das falsche Passwort eintippst!
                option: ALARM INTRUDER
            hint: '`{if}` passwort `{is}` ... `{print}` ''Richtig!''!'''
            correct_answer: B
            question_score: '10'
        4:
            code: |-
                passwort {is} {ask} 'Was ist das Passwort?'
                {if} passwort {is} GEHEIMNIS {print} 'Richtig!'
                {else} {print} 'ALARM! EINDRINGLING!'
            question_text: Was gibt Hedy aus, wenn du das falsche Passwort eintippst?
            mp_choice_options:
            -   feedback: Das wird ausgegeben, wenn die richtige Antwort eingegeben wurde, nicht die falsche...
                option: Richtig
            -   feedback: Das ist nicht die richtige Antwort
                option: SECRET
            -   feedback: Nein, dies ist nicht, was Hedy ausgeben wird
                option: Falsch!
            -   feedback: Großartig gemacht!
                option: ALARM! INTRUDER!
            hint: Dein Computer wird bei Eindringlingen Alarm schlagen!
            correct_answer: D
            question_score: '10'
        5:
            code: |-
                passwort {is} {ask} 'Was ist das Passwort?'
                {if} passwort {is} GEHEIMNIS {print} 'Richtig!'
                {else} {print} 'ALARM! EINDRINGLING!'
            question_text: Warum wird Hedy 'ALARM! EINDINGLING' ausgeben, wenn du 'geheimnis' eintippst?
            mp_choice_options:
            -   feedback: In der Tat!
                option: Weil es in Großbuchstaben sein muss, also GEHEIMNIS
            -   feedback: Nein, dies ist nicht das Passwort.
                option: Weil das Passwort Alarm ist
            -   feedback: Das ist nicht wie man geheimnis schreibt
                option: Weil es falsch geschrieben ist.
            -   feedback: Nein, Hedy hat recht
                option: Weil Hedy Fehler macht
            hint: Die Rechtschreibung des Wortes muss genau gleich sein.
            correct_answer: A
            question_score: '10'
        6:
            code: |-
                {print} 'Ich bin Hedy die Fußballwahrsagerin!'
                {print} 'Ich werde vorhersagen, welchen Platz dein Team am Ende belegen wird!'
                club is {ask} 'Welcher Club ist dein Favorit?'
                {if} club {is} ajax {print} 'Ajax wird natürlich gewinnen!'
                _ {print} 'Sorry, dein Club wird auf dem letzten Platz landen...'
            question_text: Welches Wort sollte anstelle des Fragezeichens in der letzten Zeile stehen?
            mp_choice_options:
            -   feedback: '`{if}` ist bereits in der obigen Zeile'
                option: |-
                    ```
                    {if}
                    ```
            -   feedback: Nein, du brauchst `{else}`.
                option: |-
                    ```
                    {at} {random}
                    ```
            -   feedback: Großartig!
                option: |-
                    ```
                    {else}
                    ```
            -   feedback: '`{print}` ist bereits dort, wir brauchen ein Wort davor!'
                option: |-
                    ```
                    {print}
                    ```
            hint: '`{if}` geht zusammen mit...?'
            correct_answer: C
            question_score: '10'
        7:
            code: |-
                {print} 'Ich kann vorhersagen, ob du ein Millionär sein wirst oder nicht!'
                name {is} {ask} 'Was ist dein Name?'
                {if} name {is} Hedy {print} 'Du wirst ein Millionär sein!'
                {else} _ 'Unglücklicherweise... Kein großes Geld für dich.'
            question_text: Welches Wort sollte anstelle des Fragezeichens stehen?
            mp_choice_options:
            -   feedback: '`{if}` ist in der Zeile darüber.'
                option: '`{if}`'
            -   feedback: Nein, du brauchst kein `{at} {random}`.
                option: '`{at}` `{random}`'
            -   feedback: Dort ist bereits ein `{else}` Befehl
                option: '`{else}`'
            -   feedback: Toll!
                option: '`{print}`'
            hint: Nach `{else}` folgt ein `{print}` Befehl
            correct_answer: D
            question_score: '10'
        8:
            code: |-
                Tier {is} {ask} 'Was ist dein Lieblingstier?'
                {if} _ {is} Pinguin {print} 'Das ist auch mein Lieblingstier!'
                {else} {print} 'Cool! Ich mag Pinguine.'
            question_text: Welches Wort sollte anstelle des Fragezeichens stehen?
            mp_choice_options:
            -   feedback: Dies ist nicht der Variablenname.
                option: |-
                    ```
                    Lieblingstier
                    ```
            -   feedback: Großartig gemacht!
                option: |-
                    ```
                    Tier
                    ```
            -   feedback: '`{if}` ist bereits dort'
                option: '`{if}`'
            -   feedback: Nein, das ist es nicht.
                option: '`{print}`'
            hint: Was ist der Variablenname?
            correct_answer: B
            question_score: '10'
        9:
            code: |-
                {print} 'Entkomme vom Spukhaus!'
                {print} 'Vor dir sind 3 Türen'
                tür {is} {ask} 'Welche Tür wählst du?'
                monster {is} Vampir, Werwolf, Riesenspinne
                {if} tür {is} 2 {print} 'Juchuu, du entkommst!'
                {else} {print} 'Du wirst verschlungen von einem/r... ' monster {at} {random}
            question_text: Welche Tür solltest du wählen um zu entkommen??
            mp_choice_options:
            -   feedback: Schlechte Wahl! Du wirst gegessen
                option: '1'
            -   feedback: Super! Du bist entkommen!
                option: '2'
            -   feedback: Schlechte Wahl! Du wirst gegessen.
                option: '3'
            -   feedback: Glücklicherweise nicht!
                option: Es ist eine Falle, du wirst immer gegessen werden!
            hint: Eine der Türen wird dich in Sicherheit bringen..
            correct_answer: B
            question_score: '10'
        10:
            code: |-
                {print} 'Entkomme vom Spukhaus!'
                {print} 'Vor dir sind 3 Türen'
                tür {is} {ask} 'Welche Tür wählst du?'
                monster {is} Vampir, Werwolf, Riesenspinne
                {if} tür {is} 2 {print} 'Juchuu, du entkommst!'
                {else} {print} 'Du wirst verschlungen von einem/r... ' monster {at} {random}
            question_text: Welches Monster steht hinter Tür 1?
            mp_choice_options:
            -   feedback: Toll!
                option: Hedy wählt jedes Mal ein zufälliges Monster.
            -   feedback: Nicht immer...
                option: Vampir
            -   feedback: Nicht immer...
                option: Werwolf
            -   feedback: Nicht immer...
                option: Riesenspinne
            hint: Beachte die letzten 3 Wörter... Monster `{at} {random}`...
            correct_answer: A
            question_score: '10'
    6:
        1:
            code: '{print} 2*10'
            question_text: Was gibt Hedy aus, wenn du diesen Code laufen lässt?
            mp_choice_options:
            -   feedback: Richtig!
                option: '20'
            -   feedback: Nein, das Plus-Zeichen wird für die Addition benutzt
                option: '12'
            -   feedback: Nein, Hedy wird die Antwort berechnen
                option: 2*10
            -   feedback: Beachte, dass es eine Berechnung ist.
                option: '210'
            hint: Das `*` wird als Multiplikationszeichen benutzt
            correct_answer: A
            question_score: '10'
        2:
            question_text: Was benutzt du wenn du zwei Zahlen addieren möchtest?
            mp_choice_options:
            -   feedback: Das ist es nicht
                option: '`-`'
            -   feedback: Das ist es nicht
                option: plus
            -   feedback: Das ist es nicht
                option: '`*`'
            -   feedback: Richtig!
                option: '`+`'
            hint: Es ist das Pluszeichen.
            correct_answer: D
            question_score: '10'
        3:
            code: '{print} ''3*10'''
            question_text: Was ist Hedys Ausgabe, wenn du diesen Code ausführst?
            mp_choice_options:
            -   feedback: Dies wäre die richtige Antwort, wenn es keine Anführungszeichen geben würde.
                option: '30'
            -   feedback: Versuche es nochmal..
                option: '13'
            -   feedback: Richtig! Dort sind Anführungszeichen, daher wird Hedy es wortwörtlich ausgeben.
                option: 3*10
            -   feedback: Nein, Hedy wird es wortwörtlich ausgeben.
                option: Nichts, Hedy wird eine Fehlermeldung ausgeben.
            hint: Beachte die Anführungszeichen!!
            correct_answer: C
            question_score: '10'
        4:
            code: |-
                name = {ask} 'Wie viele Buchstaben hat dein Name?'
                alter = {ask} 'Wie alt bist du?'
                glückszahl = name*alter
                {print} 'Deine Glückszahl ist...' glückszahl
            question_text: Kim ist 10 Jahre alt. Was wird Hedy für sie ausgeben?
            mp_choice_options:
            -   feedback: Beachte, dass Hedy ebenfalls 'Deine Glückszahl ist...' ausgeben wird
                option: '30'
            -   feedback: Bitte versuche es nochmal.
                option: '10'
            -   feedback: Das ist richtig!
                option: Deine Glückszahl ist... 30
            -   feedback: Ihre Glückszahl ist Name mal Alter...
                option: Deine Glückszahl ist... 10
            hint: 'Kim hat 3 Buchstaben, sie ist 10 Jahre alt, also: Buchstaben mal Alter = 3*10 = 30.'
            correct_answer: C
            question_score: '10'
        5:
            code: |-
                {print} 'Willkommen bei Hedys!'
                leute = {ask} 'Wie viele Leute essen heute Abend mit uns?'
                preis = leute * 10
                {print} 'Das macht ' preis 'Euro biite'
            question_text: Wenn 5 Leute im Restaurant essen, wie viel müssen sie insgesamt bezahlen?
            mp_choice_options:
            -   feedback: Unglücklicherweise ist es nicht so billig.
                option: 5 Euro
            -   feedback: Nein, es sind 10 Euro für jeden.
                option: 10 Euro
            -   feedback: Das * bedeutet Multiplikation.
                option: 15 Euro
            -   feedback: Großartig!
                option: 50 Euro
            hint: preis ist leute mal 10
            correct_answer: D
            question_score: '10'
        6:
            code: |-
                {print} 'Willkommen in Hedys Diner'
                essen = {ask} 'Was möchten Sie essen?'
                preis = 0
                {if} essen {is} Hamburger preis = 15
                {if} essen {is} Pommes preis = 6
            question_text: Wie viel kostet ein Hamburger in diesem virtuellen Restaurant?
            mp_choice_options:
            -   feedback: Super!
                option: 15 Euro
            -   feedback: Die Pommes kosten 6 Euro
                option: 6 Euro
            -   feedback: Der Hamburger ist nicht kostenlos!
                option: 0 Euro
            -   feedback: Das ist der Preis für einen Hamburger und Pommes!
                option: 21 Euro
            hint: Beachte die vierte Zeile.
            correct_answer: A
            question_score: '10'
        7:
            code: |-
                {print} 'Willkommen in Hedys Diner'
                essen = {ask} 'Was möchten Sie essen?'
                preis = 0
                {if} essen {is} Hamburger preis = preis + 15
                {if} essen {is} Pommes preis = preis + 6
                getränke ist {ask} 'Was möchten Sie trinken?'
                {if} getränke {is} Cola preis = preis + 3
                {if} getränke {is} Wasser preis = preis + 1
                {print} preis ' Euro bitte'
            question_text: Warum sagt Zeile 7 'preis ist preis + 3' anstelle von 'preis ist 3'?
            mp_choice_options:
            -   feedback: Nein, das ist nicht wahr. Hedy muss 3 Euro zum Gesamtbetrag addieren.
                option: Es könnte genauso gut `preis = 3` gewesen sein.
            -   feedback: Hedy würde es verstehen, aber es würde nicht richtig sein.
                option: Weil Hedy `preis = 3` nicht versteht.
            -   feedback: Das ist richtig!
                option: Weil Hedy sonst die vorige Bestellung vergessen würde. Der Preis würde insgesamt 3 Euro betragen.
            -   feedback: Das ist wahr, jedoch nicht der Grund
                option: Weil der Preis 0 Euro ist.
            hint: Der Preis sollte nicht 3 sein, aber 3 Euro mehr als es bereits war
            correct_answer: C
            question_score: '10'
        8:
            code: |-
                richtige antwort = 3*12
                antwort = {ask} 'Was ist 3 mal 12?'
                {if} antwort {is} richtige antwort {print} 'Gut gemacht!'
                {else} {print} 'Nein... es war ' richtige antwort
            question_text: Warum ist dieser Code inkorrekt?
            mp_choice_options:
            -   feedback: Nein, dort sollten welche sein!
                option: Es sollten in Zeile 2 keine Anführungszeichen stehen
            -   feedback: Richtig!
                option: Die Variable heißt correct answer, aber der Name einer Variablen kann nur aus einem Wort bestehen. Sie sollte also correct_answer heißen
            -   feedback: Nein, das ist nicht wahr.
                option: Die `{if}` und `{else}` Befehle sollten in der gleichen Zeile stehen.
            -   feedback: Variablennamen können ähnlich sein, aber sie dürfen nicht aus 2 Wörtern bestehen...
                option: Die Variable in Zeile 2 kann nicht antwort heißen, weil sie zu ähnlich zur Variable richtige antwort ist.
            hint: Untersuche die Namen der Variablen.
            correct_answer: B
            question_score: '10'
        9:
            code: |-
                {print} 'Ich bin Hedy die alberne Wahrsagerin'
                {print} 'Ich werde vorhersagen wie schlau du bist!'
                fußball = {ask} 'Auf einer Skala von 0 bis 10, wie sehr liebst du Fußball?'
                bananen = {ask} 'Wie viele Bananen hast du diese Woche gegessen?'
                hygiene = {ask} 'Wie viele Male hast du heute deine Hände gewaschen??'
                ergebnis = bananen + hygiene
                ergebnis = ergebnis * fußball
                {print} 'Du bist ' ergebnis 'Prozent schlau.'
            question_text: Stell dir vor, du liebst Fußball eine 10, du hast 2 Bananen gegessen und hast heute 3 Mal deine Hände gewaschen. Wie schlau denkt die alberne Wahrsagerin, dass du bist?
            mp_choice_options:
            -   feedback: (2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?
                option: 10%
            -   feedback: (2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?
                option: 32%
            -   feedback: Super! Du bist 100 Prozent schlau!
                option: 50%
            -   feedback: (2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?
                option: 100%
            hint: (2 Bananen + 3 Hygiene) * 10 Fußball = 5*10 =?
            correct_answer: C
            question_score: '10'
        10:
            code: |-
                name _ Hedy
                {print} name 'geht durch den Wald'
            question_text: Welche Aussage ist wahr?
            mp_choice_options:
            -   feedback: Du darfst auch das `=` Zeichen nutzen
                option: Du kannst nur das Wort ist in die Lücken `_` füllen
            -   feedback: Toll!
                option: Du kannst entweder das Wort ist oder das `=` Zeichen in die Lücken `_` füllen
            -   feedback: Nein, ein `=` Zeichen ist genug
                option: Du musst =ist= in Lücken `_` füllen
            -   feedback: Du kannst das `=` auch mit Wörtern benutzen.
                option: Du kannst nur das `=` Zeichen verwenden, wenn du mit Zahlen arbeitest, nicht mit Wörtern.
            hint: '`{is}` und `=` sind beide erlaubt'
            correct_answer: B
            question_score: '10'
    7:
        1:
            question_text: Wie viele Zeilen Code kannst du mit einem Mal mit dem wiederhole-Befehl in diesem Level wiederholen?
            mp_choice_options:
            -   feedback: Nein, du kannst eine Zeile wiederholen.
                option: '0'
            -   feedback: Richtig, eine Zeile mit einem Mal
                option: '1'
            -   feedback: In diesem Level nur eine Zeile mit einem Mal
                option: '3'
            -   feedback: In diesem Level kannst du nur eine Zeile wiederholen
                option: unendlich
            hint: Du kannst nur eine Zeile mit einem Mal wiederholen
            correct_answer: B
            question_score: '10'
        2:
            question_text: Welcher Code ist richtig?
            mp_choice_options:
            -   feedback: '`{repeat}` 100 `{times}` `{print}` ''hallo'''
                option: |-
                    ```
                    {print} 100 {times} 'hallo'
                    ```
            -   feedback: '{repeat} 100 {times} {print} ''hallo'''
                option: |-
                    ```
                    {print} {repeat} 100 {times} 'hallo'
                    ```
            -   feedback: '{repeat} 100 {times} {print} ''hallo'''
                option: |-
                    ```
                    {repeat} 'hallo' 100 {times}
                    ```
            -   feedback: Das ist richtig!
                option: |-
                    ```
                    {repeat} 100 {times} {print} 'hallo'
                    ```
            hint: Erst der wiederhole-Befehl, dann der `{print}` Befehl
            correct_answer: D
            question_score: '10'
        3:
            code: '{repeat} 100 {times} ''Hallo!'''
            question_text: Ist dieser Code richtig oder falsch?
            mp_choice_options:
            -   feedback: Nein, ein Wort fehlt
                option: Right
            -   feedback: Das Wort `{repeat}` ist da, ein anderes Wort fehlt
                option: Falsch, das Wort `{repeat}` fehlt
            -   feedback: Das Wort `{times}` ist da, ein anderes Wort fehlt.
                option: Falsch, das Wort `{times}` fehlt
            -   feedback: Richtig
                option: Falsch, das Wort `{print}` fehlt
            hint: 'Es sollte so sein: `{repeat}` 100 `{times}` `{print}` ''Hallo'''
            correct_answer: D
            question_score: '10'
        4:
            code: |-
                {print} 'I'm blue'
                {repeat} 7 {times} {print} 'da ba dee, da ba da'
            question_text: Welches Wort ist falsch im Code?
            mp_choice_options:
            -   feedback: Das ist richtig!
                option: |-
                    ```
                    I'm
                    ```
            -   feedback: '`{print}` ist richtig geschrieben'
                option: '`{print}`'
            -   feedback: '`{repeat}` ist richtig geschrieben'
                option: '`{repeat}`'
            -   feedback: '`{times}` ist richtig geschrieben'
                option: '`{times}`'
            hint: I'm ist falsch, du kannst keine Apostrophe verwenden
            correct_answer: A
            question_score: '10'
        5:
            code: '{repeat} 100 {times} {print} ''Hedy ist toll!'''
            question_text: Ist dieser Code richtig oder falsch?
            mp_choice_options:
            -   feedback: Das ist richtig!
                option: Richtig
            -   feedback: Das ist es nicht
                option: Falsch
            hint: Der Code ist richtig!
            correct_answer: A
            question_score: '10'
        6:
            code: |-
                {print} 'The wheels on the bus go'
                {repeat} 3 {times} {print} ' round and round'
            question_text: Was wird die Ausgabe dieses Code sein?
            mp_choice_options:
            -   feedback: Nur die zweite Zeile wird 3 mal wiederholt
                option: |-
                    the wheels on the bus go
                    round and round
            -   feedback: Nur die zweite Zeile wird 3 Mal wiederholt
                option: |-
                    the wheels on the bus go
                    the wheels on the bus go
                    the wheels on the bus go
                    round and round
            -   feedback: Nur die zweite Zeile wird 3 Mal wiederholt
                option: |-
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
                    the wheels on the bus go
                    round and round
            -   feedback: All through the town! Perfekt!
                option: |-
                    the wheels on the bus go
                    round and round
                    round and round
                    round and round
            hint: Nur 'round and round' wird 3 Mal wiederholt.
            correct_answer: D
            question_score: '10'
        7:
            code: |-
                {repeat} 2 {times} {print} 'We will'
                {print} 'ROCK YOU!'
            question_text: Was wird die Ausgabe dieses Code sein?
            mp_choice_options:
            -   feedback: '''We will'' wird nicht zwei Mal in einer Zeile erscheinen'
                option: |-
                    We will We will
                    ROCK YOU!
            -   feedback: Großartig!
                option: |-
                    We will
                    We will
                    ROCK YOU!
            -   feedback: ROCK YOU! wird nicht wiederholt
                option: |-
                    We will
                    ROCK YOU!
                    We will
                    ROCK YOU!
            -   feedback: Beachte den wiederhole-Befehl
                option: |-
                    We will
                    ROCK YOU!
            hint: Beachte den `{repeat}` Befehl.
            correct_answer: B
            question_score: '10'
        8:
            code: |-
                Here comes the sun
                Do do do do
                Here comes the sun
                And I say
                Its alright
            question_text: Welcher Hedy code gehört zu dieser Ausgabe?
            mp_choice_options:
            -   feedback: Toll, du kannst den `{repeat}` Befehl hier nicht verwenden.
                option: |-
                    ```
                    {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
            -   feedback: Wo hast du 'Do do do do' gelassen?
                option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'And I say'
                    {print} 'Its alright'
            -   feedback: Dies ist nicht die richtige Reihenfolge..
                option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {print} 'Do do do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
            -   feedback: Dies ist nicht die richtige Reihenfolge..
                option: |-
                    ```
                    {repeat} 2 {times} {print} 'Here comes the sun'
                    {repeat} 2 {times} {print} 'Do do'
                    {print} 'And I say'
                    {print} 'Its alright'
                    ```
            hint: '`{repeat}` kann nur benutzt werden, wenn du die gleiche Zeile mehrfach in Folge ausführen möchtest.'
            correct_answer: A
            question_score: '10'
        9:
            code: |-
                Batman flog durch Gotham.
                Als er plötzlich jemanden schreien hörte...
                Hilfe!
                Hilfe!
                Hilfe!
                Bitte helft mir!
            question_text: Welcher Hedy-Code gehört dieser Ausgabe?
            mp_choice_options:
            -   feedback: Deine Wiederholung ist falsch.
                option: |-
                    ```
                    {print} 'Batman flog durch Gotham. '
                    {print} 'Als er plötzlich jemanden schreien hörte!'
                    {print} 'Hilfe!'
                    {repeat} 3 {times} {print} 'Bitte hilf mir!'
                    ```
            -   feedback: Der `{print}` Befehl fehlt in Zeile 3.
                option: |-
                    ```
                    {print} 'Batman flog durch Gotham.'
                    {print} 'Als er plötzlich jemanden schreien hörte!'
                    {repeat} 3 {times} 'Hilfe!'
                    {print} 'Bitte hilf mir!'
                    ```
            -   feedback: Dir fehlen die Anführungszeichen
                option: |-
                    ```
                    {print} Batman flog durch Gotham.
                    {print} Als er plötzlich jemanden schreien hörte!
                    {repeat} 3 {times} {print} Hilfe!
                    {print} Bitte hilf mir!
                    ```
            -   feedback: Perfekt
                option: |-
                    ```
                    {print} 'Batman flog durch Gotham.'
                    {print} 'Als er plötzlich jemanden schreien hörte!'
                    {repeat} 3 {times} {print} 'Hilfe!'
                    {print} 'Bitte hilf mir!'
                    ```
            hint: '''Help!'' wird 3 Mal wiederholt.'
            correct_answer: D
            question_score: '10'
        10:
            code: |-
                if youre happy and you know it clap your hands
                if youre happy and you know it clap your hands
                if youre happy and you know it and you really want to show it
                if youre happy and you know it clap your hands
            question_text: Welcher Code gehört zu dieser Ausgabe?
            mp_choice_options:
            -   feedback: Fast! Die erste Zeile braucht ein weiteres Wort
                option: |-
                    ```
                    {repeat} 2 {times} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
            -   feedback: Großartig!
                option: |-
                    ```
                    {repeat} 2 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    {print} 'if youre happy and you know it clap your hands'
                    ```
            -   feedback: Dies ist nicht die richtige Reihenfolge.
                option: |-
                    ```
                    {repeat} 3 {times} {print} 'if youre happy and you know it clap your hands'
                    {print} 'if youre happy and you know it and you really want to show it'
                    ```
            -   feedback: Dies ist nicht in der richtigen Reihenfolge.
                option: |-
                    ```
                    {repeat} 4 {times} 'if youre happy and you know it'
                    {repeat} 2 times 'clap your hands'
                    {print} 'and you really want to show it'
                    {print} 'clap your hands'
                    ```
            hint: Beachte die Reihenfolge der Sätze.
            correct_answer: B
            question_score: '10'
    8:
        1:
            code: |-
                {repeat} 2 {times}
                    {print} 'Hallo'
                    {print} 'Ich bin Hedy!'
            question_text: Welche Ausgabe wird von diesem Code erzeugt?
            mp_choice_options:
            -   feedback: Alles wird doppelt ausgegeben.
                option: |-
                    Hallo
                    Ich bin Hedy!
            -   feedback: Die zweite Zeile wird ebenfalls doppelt wiederholt.
                option: |-
                    Hello
                    Hello
                    Ich bin Hedy
            -   feedback: Super!
                option: |-
                    Hello
                    Ich bin Hedy!
                    Hello
                    Ich bin Hedy!
            -   feedback: Alles wird doppelt ausgegeben
                option: |-
                    Hello
                    Hello
                    Ich bin Hedy!
                    Ich bin Hedy!
            hint: Beide Zeilen werden zweimal wiederholt.
            correct_answer: C
            question_score: '10'
        2:
            code: |-
                {repeat} 5 {times}
                {print} 'Hedy ist cool!'
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Nein, es sollten 2 Zeilen sein.
                option: Dies sollte nur eine Zeile sein, nicht 2.
            -   feedback: Nein, du brauchst es.
                option: Das `{print}`-Kommando muss entfernt werden.
            -   feedback: Nein, wiederhole ist die richtige Schreibweise
                option: Da ist ein Schreibfehler im `{repeat}` Befehl.
            -   feedback: Richtig!
                option: Die zweite Zeile sollte mit 4 Leerzeichen als Einrückung beginnen.
            hint: Etwas fehlt in der zweiten Zeile?
            correct_answer: D
            question_score: '10'
        3:
            code: |-
                {repeat} 3 {times}
                    {print} 'Baby shark tututudutudu'
                {print} 'Baby shark'
            question_text: Welche Ausgabe wird erzeugt, wenn du dieses Programm ausführst?
            mp_choice_options:
            -   feedback: Beachte den `{repeat}` Befehl!
                option: |-
                    Baby shark tututudutudu
                    Baby shark
            -   feedback: Die letzte Zeile hat keine Einrückung, daher wird sie nicht wiederholt.
                option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
            -   feedback: Richtig!
                option: |-
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark
            -   feedback: Was wird wiederholt und was nicht.
                option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark
                    Baby shark
            hint: Was wird wiederholt und was nicht?.
            correct_answer: C
            question_score: '10'
        4:
            code: |-
                {print} 'Die Kinder riefen:'
                {repeat} 2 {times}
                    {print} 'Juchuu!'
                    {print} 'Wir fahren in den Urlaub!'
            question_text: Welche Ausgabe ist richtig?
            mp_choice_options:
            -   feedback: Beachte den `{repeat}` Befehl!
                option: |-
                    Die Kinder sagten:
                    Juchhuu!
                    Wir fahren in den Urlaub!
            -   feedback: Richtig!
                option: |-
                    Die Kinder gingen:
                    Juchhuu!
                    Wir fahren in den Urlaub!
                    Juchhuu!
                    Wir fahren in den Urlaub!
            -   feedback: Diese Reihenfolge ist falsch.
                option: |-
                    Die Kinder gingen:
                    Juchhuu!
                    Juchhuu!
                    Wir fahren in den Urlaub!
                    Wir fahren in den Urlaub!
            -   feedback: Die letzte Zeile wird auch wiederholt.
                option: |-
                    Die Kinder gingen:
                    Juchhuu!
                    Juchhuu!
                    Wir fahren in den Urlaub!
            hint: Der Block unter dem `{repeat}` Befehl wird zwei Mal wiederholt.
            correct_answer: B
            question_score: '10'
        5:
            code: |-
                ende = {ask} 'Möchtest du ein glückliches oder ein trauriges Ende?'
                {if} ende {is} glücklich {print} 'Und sie lebten glücklich bis ans Ende ihrer Tage'
                {else} {print} 'Die Welt explodierte. Ende.'
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Das ist richtig!
                option: Die `{print}` Befehle in den letzten zwei Zeilen sollten in neuen Zeilen sowie mit 4 Leerzeichen beginnen.
            -   feedback: Ist es!
                option: '`{else}` ist kein Befehl!'
            -   feedback: Das ist nicht wahr
                option: Zeilen die mit `{if}` beginnen, sollten mit 4 Leerzeichen beginnen
            -   feedback: Das ist nicht wahr
                option: '`{ask}` ist kein Befehl mehr'
            hint: Etwas stimmt mit der Einrückung nicht
            correct_answer: A
            question_score: '10'
        6:
            code: |-
                {print} 'Welcome to restaurant Hedy'
                {repeat} 2 {times}
                    food {is} {ask} 'What do you want to eat?'
                    {print} food
            question_text: Which code was used to create this output?
            mp_choice_options:
            -   feedback: You need to take 2 orders.
                option: |-
                    ```
                    {print} 'Welcome to restaurant Hedy'
                    food = {ask} 'What would you like to eat?'
                    {print} food
                    ```
            -   feedback: The welcome line would be printed twice in this code too
                option: |-
                    ```
                    {repeat} 2 {times}
                        {print} 'Welcome to restaurant Hedy'
                        food = {ask} 'What would you like to eat?'
                        {print} food
                    ```
            -   feedback: Now only the last order is printed.
                option: |-
                    ```
                    {print} 'Welcome to restaurant Hedy'
                    {repeat} 2 {times}
                        food = {ask} 'What would you like to eat?'
                    {print} food
                    ```
            -   feedback: Awesome!
                option: |-
                    ```
                    {print} 'Welcome to restaurant Hedy'
                    {repeat} 2 {times}
                        food = {ask} 'What would you like to eat?'
                        {print} food
                    ```
            hint: Pay attention to what sould be repeated and what should only be printed once.
            correct_answer: D
            question_score: '10'
        7:
            code: |-
                essen = {ask} 'Was würdest du gerne essen?'
                {if} essen {is} Pommes
                sauce = {ask} 'Welche Sauce hättest du gerne?'
                    {print} 'Einmal Pommes mit ' sauce
                {if} essen {is} Pizza
                    belag = {ask} 'Welchen Belag möchtest du?'
                    {print} 'Eine Pizza mit ' topping
                {print} 'Vielen Dank für deine Bestellung'
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Etwas stimmt nicht!
                option: Nichts, dieser Code ist richtig!
            -   feedback: Du bist!
                option: Du darfst keinen `{if}` Befehl nach einem `{ask}` Befehl benutzen.
            -   feedback: Du musst immer Einrückung verwenden.
                option: Du musst nicht zwei Mal Einrückung verwenden. Nur im ersten `{if}` Befehl.
            -   feedback: Das ist richtig.
                option: Die Einrückung ist im ersten `{if}` Befehl falsch.
            hint: Schau dir die Einrückung genau an.
            correct_answer: D
            question_score: '10'
        8:
            question_text: In welchem Programm wurde die Einrückung richtig gemacht?
            mp_choice_options:
            -   feedback: Du liegst falsch!
                option: |-
                    ```
                    {if} antwort {is} 32
                       {print} 'Du bist...'
                          {sleep}
                              {print} 'richtig!'
                          {else}
                              {print} 'Du liegst falsch!'
                    ```
            -   feedback: Du liegst falsch!
                option: |-
                    ```
                    {if} antwort {is} 32
                    {print} 'Du bist...'
                    {sleep}
                    {print} 'richtig!'
                    {else}
                    {print} 'Du liegst falsch!'
                    ```
            -   feedback: Du hast... recht!
                option: |-
                    ```
                    {if} antwort {is} 32
                        {print} 'Du bist...'
                        {sleep}
                        {print} 'richtig!'
                    {else}
                        {print} 'Du liegst falsch!'
                    ```
            -   feedback: Du liegst falsch!
                option: |-
                    ```
                    {if} antwort {is} 32
                        {print} 'Du bist...'
                        {sleep}
                    {print} 'richtig!'
                    {else}
                        {print} 'Du liegst falsch!'
                    ```
            hint: Was sollte passieren, wenn die Person richtig liegt? Und was sonst?
            correct_answer: C
            question_score: '10'
        9:
            code: |-
                1 musik = {ask} 'Was ist dein Lieblingsmusikgenre?'
                2 {if} musik {is} Rock
                3 {print} '🤘'
                4 {else}
                5 {print} '👎'
            question_text: Welche Zeilen sollten mit 4 Leerzeichen beginnen?
            mp_choice_options:
            -   feedback: Die Zeilen nach dem `{if}` und `{else}` Befehl sollten mit 4 Leerzeichen beginnen
                option: Zeile 2 und 4
            -   feedback: Nicht nur 3...
                option: Nur in Zeile 3
            -   feedback: Zeile 4 sollte nicht
                option: Zeile 3, 4 und 5
            -   feedback: Gut gemacht!
                option: Zeile 3 und 5
            hint: Die Zeilen nach dem `{if}` oder `{else}` Befehl sollten mit 4 Leerzeichen beginnen.
            correct_answer: D
            question_score: '10'
        10:
            code: |-
                1 level = {ask} 'In welchem Level bist du?'
                2 {if} level {is} 8
                3 {print} 'Großartig gemacht!'
            question_text: Welche Aussage ist wahr?
            mp_choice_options:
            -   feedback: Das ist nicht wahr
                option: Alle Zeilen sollten mit 4 Leerzeichen beginnen
            -   feedback: Das ist nicht wahr
                option: Zeile 2 und 3 sollten mit 4 Leerzeichen beginnen
            -   feedback: Das ist nicht wahr
                option: Zeile 2 sollte mit 4 Leerzeichen beginnen
            -   feedback: Du liegst richtig!
                option: Zeile 3 sollte mit 4 Leerzeichen beginnen
            hint: Nur eine Zeile sollte mit 4 Leerzeichen beginnen, aber welche...?
            correct_answer: D
            question_score: '10'
    9:
        1:
            code: |-
                {repeat} 3 {times}
                    essen = {ask} 'Was würdest du gerne essen?'
                    {if} essen {is} Pommes
                        sauce = {ask} 'Welche Sauce hättest du gerne?'
                        {print} 'Einmal Pommes mit ' sauce
                    {if} essen {is} Pizza
                        belag = {ask} 'Welchen Belag möchtest du?'
                        {print} 'Eine Pizza mit ' topping
                {print} 'Vielen Dank für deine Bestellung'
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Das ist richtig!
                option: Nichts, der Code ist korrekt!
            -   feedback: Du bist!
                option: Du darst keinen `{if}` Befehl nach einem `{ask}` Befehl verwenden.
            -   feedback: Du musst immer Einrückung verwenden.
                option: Du musst nicht zwei Mal Einrückung verwenden.
            -   feedback: Es ist nicht die Einrückung.
                option: Die Einrückung im letzten `{if}` Befehl ist falsch.
            hint: Alle Einrückungen wurden richtig gemacht.
            correct_answer: A
            question_score: '10'
        2:
            code: |-
                passwort = {ask} 'Was ist das Passwort?'
                richtiges_passwort = Hedy
                {if} passwort {is} richtiges_passwort
                    {repeat} 2 {times}
                        {print} 'Gut gemacht!'
                        {print} 'Du kannst den Computer benutzen!'
                {else}
                    {print} 'Der Computer explodiert in 5... 4... 3... 2... 1...'
            question_text: Was wird ausgegeben nachdem man das richtige Passwort eingegeben hat?
            mp_choice_options:
            -   feedback: Das ist es nicht!
                option: |-
                    ```
                    Gut gemacht!
                    Gut gemacht!
                    ```
            -   feedback: Das ist es nicht!
                option: |-
                    ```
                    Der Computer explodiert in 5... 4... 3... 2... 1...
                    ```
            -   feedback: Das ist es nicht!
                option: |-
                    ```
                    Gut gemacht!
                    Gut gemacht!
                    Du kannst den Computer benutzen!
                    ```
            -   feedback: Richtig!
                option: |-
                    ```
                    Gut gemacht!
                    Du kannst den Computer benutzen!
                    Gut gemacht!
                    Du kannst den Computer benutzen!
                    ```
            hint: Alles unter dem `{repeat}` Befehl wird zwei Mal wiederholt.
            correct_answer: D
            question_score: '10'
        3:
            code: |-
                {print} 'Wähle den richtigen Koffer und gewinne!'
                koffer = {ask} 'Welchen Koffer wählst du? 1 oder 2?'
                {if} koffer {is} 1
                     aktion = {ask} 'Öffnen oder verkaufen?'
                         {if} aktion {is} verkaufen
                             {print} 'Du verkaufst deinen Koffer für 10 Euro'
                         {if} aktion {is} öffnen
                             {print} 'Du öffnest den Koffer und gewinnst einen Apfelkuchen'
                {if} koffer {is} 2
                     aktion = {ask} 'Öffnen oder verkaufen?'
                         {if} aktion {is} verkaufen
                             {print} 'Du verkaufst deinen Koffer für 500 Euro'
                         {if} aktion {is} öffnen
                             {print} 'Du öffnest den Koffer und gewinnst eine Million Euro!'
            question_text: Welchen Fall solltest du wählen, um eine Million Euro zu gewinnen?
            mp_choice_options:
            -   feedback: Du gewinnst keine Million!
                option: Fall 1, verkaufen
            -   feedback: Du gewinnst keine Million
                option: Fall 1, offen
            -   feedback: Du gewinnst keine Million
                option: Fall 2, verkaufen
            -   feedback: Großartig gemacht! Du gewinnst!
                option: Fall 2, offen
            hint: Folge dem richtigen Pfad
            correct_answer: D
            question_score: '10'
        4:
            code: |-
                name = {ask} 'Was ist dein Name?'
                grösse = {ask} 'Was ist deine Schuhgrösse?'
                {if} grösse {is} 38
                    {if} name {is} Aschenputtel
                        {print} '❤️❤️❤️'
                    {else}
                        {print} 'Du bist nicht die Richtige!'
                {else}
                    {print} 'Ich suche weiter'
            question_text: Welche Aussage ist wahr?
            mp_choice_options:
            -   feedback: Nein, sie bekommt "Du bist nicht die Richtige!"
                option: Dornröschen mit Schuhgröße 38 erhält die Ausgabe "Ich suche weiter"
            -   feedback: Nein, sie bekommt "Ich suche weiter"
                option: Aschenputtel mit Schuhgröße 40 bekommt die Ausgabe '❤️❤️❤️'
            -   feedback: Das ist richtig!
                option: Dornröschen mit Schuhgröße 40 erhält die Ausgabe "Ich suche weiter"
            -   feedback: Nein, sie bekommt "❤️❤️❤️"
                option: Aschenputtel mit Schuhgröße 38 bekommt den Ausgang "Ich suche weiter"
            hint: Egal wie du heißt, wenn du Schuhgröße 40 hast, bekommst du die Nachricht "Ich suche weiter".
            correct_answer: C
            question_score: '10'
        5:
            question_text: Welcher Code hat diese Ausgabe erzeugt?
            output: |-
                Eis ist das Beste!
                Eis ist das Beste!
                Eis ist das Beste!
            mp_choice_options:
            -   feedback: Vergiss nicht die Einrückung nach dem `{repeat}` Befehl.
                option: |-
                    ```
                    nachtisch = {ask} 'Was ist dein Lieblingsnachtisch?'
                    {if} nachtisch {is} Eis
                        {repeat} 3 {times}
                        {print} 'Eis ist das Beste!'
                    ```
            -   feedback: Benutze Einrückung nach dem `{if}` Befehl
                option: |-
                    ```
                    nachtisch = {ask} 'Was ist dein Lieblingsnachtisch?'
                    {if} nachtisch {is} Eis
                    {repeat} 3 {times}
                        {print} 'Eis ist das Beste!'
                    ```
            -   feedback: Perfekt
                option: |-
                    ```
                    nachtisch = {ask} 'Was ist dein Lieblingsnachtisch?'
                    {if} nachtisch {is} Eis
                        {repeat} 3 {times}
                            {print} 'Eis ist das Beste!'
                    ```
            -   feedback: Es gibt 2 `{repeat}` Befehle in diesem Code.
                option: |-
                    ```
                    {repeat} 3 {times}
                        nachtisch = {ask} 'Was ist dein Lieblingsnachtisch?'
                        {if} nachtisch {is} Eis
                            {repeat} 3 {times}
                            {print} 'Eis ist das Beste!'
                    ```
            hint: Beachte die Einrückung
            correct_answer: C
            question_score: '10'
        6:
            question_text: Nach welchen/welchem Befehl/Befehlen solltest du Einrückung verwenden (die Zeile mit 4 Leerzeichen beginnen)?
            mp_choice_options:
            -   feedback: Vergiss nicht die anderen
                option: '`{if}`'
            -   feedback: Vergiss nicht `{else}`!
                option: '`{if}` `{repeat}`'
            -   feedback: Weiter so!
                option: '`{if}` `{else}` `{repeat}`'
            -   feedback: Nicht mit drucke
                option: '`{if}` `{else}` `{repeat}` `{print}`'
            hint: Einrückung passiert in der Zeile unter manchen Befehlen
            correct_answer: C
            question_score: '10'
        7:
            code: |-
                {if} essen {is} Pizza
                {if} größe {is} medium
                {if} getränk {is} Cola
                preis = preis - 2
            question_text: Du bekommst 5 Euro Rabatt, wenn du eine mittlere Pizza mit Cola bestellst.<br>Aber der Code hat einen Fehler! Wie kann man ihn debuggen?
            mp_choice_options:
            -   feedback: Toll!
                option: |-
                    ```
                    {if} essen {is} Pizza
                        {if} größe {is} medium
                            {if} getränk {is} Cola
                                preis = preis - 5
                    ```
            -   feedback: Dem zweiten `{if}` fehlt Code!
                option: |-
                    ```
                    {if} essen {is} Pizza
                        {if} größe {is} medium
                    {if} getränk {is} Cola
                        preis = preis - 5
                    ```
            -   feedback: Zwei aufeinander folgende `{if}`s sind nie korrekt.
                option: |-
                    ```
                    {if} essen {is} Pizza
                    {if} größe {is} medium
                    {if} getränk {is} Cola
                            preis = preis - 5
                    ```
            -   feedback: Du bist sehr gut, aber du musst dich an die letzte Regel halten.
                option: |-
                    ```
                    {if} essen {is} Pizza
                        {if} größe {is} medium
                            {if} getränk {is} Cola
                            preis = preis - 5
                    ```
            hint: Nach jedem `{if}` Befehl sollte die Zeile darunter eingerückt sein
            correct_answer: A
            question_score: '10'
        8:
            code: |-
                alter = {ask} 'Alles Gute zum Geburtstag! Wie alt bist du?'
                singen = {ask} 'Möchtest du, dass wir singen?'
                    {if} singen {is} Ja
                        {repeat} alter {times}
                            {print} 'Hip Hip Hooray'
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Ja, du kannst.
                option: Du kannst nicht zwei Fragen in Folge stellen
            -   feedback: Gutes Auge! Gut gemacht!
                option: Die Variable mit der Bezeichnung "alter" wird später als "jahre" verwendet
            -   feedback: Du musst tatsächlich so beginnen.
                option: Du darfst nicht mit 8 Leerzeichen beginnen, wie Zeile 4 und 5 es tun
            -   feedback: Das ist nicht wahr.
                option: Code muss immer mit einem `{print}` Befehl in der ersten Zeile beginnen
            hint: Die Einrückung wurde dieses Mal richtig gemacht
            correct_answer: B
            question_score: '10'
        9:
            question_text: Wie viele `{if}` Befehle können in einem anderen `{if}` Befehl platziert werden?
            mp_choice_options:
            -   feedback: Das darfst du
                option: Keine, das ist nicht erlaubt
            -   feedback: Du könntest mehr nutzen, wenn du möchtest
                option: Nur 1
            -   feedback: Du könntest mehr nutzen, wenn du möchtest
                option: '3'
            -   feedback: Das ist wahr
                option: Unendlich, solange du die Einrückung richtig benutzt
            hint: Du kannst einen `{if}` Befehl in einen `{if}` Befehl schreiben.
            correct_answer: D
            question_score: '10'
        10:
            code: |-
                1 {repeat} 2 {times}
                2 {if} level {is} 9
                3 {print} Großartig gemacht!
            question_text: Welche Aussage ist wahr?
            mp_choice_options:
            -   feedback: Nur Zeile 2 und 3 beginnen mit Leerzeichen
                option: Alle Zeilen sollten mit 4 Leerzeichen beginnen
            -   feedback: Zeile 3 sollte mit 8 beginnen
                option: Zeile 2 und 3 sollte mit 4 Leerzeichen beginnen
            -   feedback: Zeile 2 sollte mit 4 beginnen
                option: Zeile 2 und 3 sollte mit 8 Leerzeichen beginnen
            -   feedback: Du liegst richtig!
                option: Zeile 2 sollte mit 4 Leerzeichen beginnen und Zeile 3 mit 8
            hint: Die erste Zeile beginnt nicht mit Leerzeichen
            correct_answer: D
            question_score: '10'
    10:
        1:
            code: |-
                komplimente = perfekt, großartig gemacht, toll
                _
                    {print} kompliment
            question_text: Was müssen wir in die Lücken `_` füllen, wenn wir jedes Kompliment ausgeben wollen?
            mp_choice_options:
            -   feedback: Das ist es nicht
                option: |-
                    ```
                    {for} jedes kompliment
                    ```
            -   feedback: Du verdienst all diese Komplimente!
                option: |-
                    ```
                    {for} kompliment {in} komplimente
                    ```
            -   feedback: Das ist es nicht
                option: |-
                    ```
                    {if} kompliment {in} komplimente
                    ```
            -   feedback: Fast richtig!
                option: |-
                    ```
                    {for} komplimente {in} kompliment
                    ```
            hint: '`{for}` jedes kompliment in der Liste der komplimente...'
            correct_answer: B
            question_score: '10'
        2:
            code: |-
                mahlzeiten = Pizza, Pasta, Eierkuchen
                {for} mahlzeit {in} mahlzeiten
                    {print} 'Ich liebe ' mahlzeit
            question_text: Welche Ausgabe ist richtig?
            mp_choice_options:
            -   feedback: Zeile 2 sagt `{for}` jede mahlzeit in der Liste der mahlzeiten. Also wird jede mahlzeit ausgegeben.
                option: Ich liebe Pizza
            -   feedback: Zeile 2 sagt `{for}` jede mahlzeit in der Liste der mahlzeiten. Also wird jede mahlzeit ausgegeben.
                option: Ich liebe Pasta
            -   feedback: Zeile 2 sagt `{for}` jede mahlzeit in der Liste der mahlzeiten. Also wird jede mahlzeit ausgegeben.
                option: Ich liebe Eierkuchen
            -   feedback: Großartig!
                option: |-
                    Ich liebe Pizza
                    Ich liebe Pasta
                    Ich liebe Eierkuchen
            hint: Zeile 2 sagt für jede mahlzeit in der Liste der mahlzeiten. Also wird jede mahlzeit ausgegeben.
            correct_answer: D
            question_score: '10'
        3:
            code: |-
                tiere = Hunde, Katzen, Hamster, Hühner
                {for} tier {in} tiere
                    {print} tier ' sind schöne Haustiere'
            question_text: Welche Ausgabe ist richtig?
            mp_choice_options:
            -   feedback: Zeile 2 sagt {for} jedes tier in der Liste der tiere. Also wird jedes tier ausgegeben.
                option: Hunde sind schöne Haustiere
            -   feedback: Jedes tier bekommt seine eigene Zeile in der Ausgabe.
                option: Hunde, Katzen, Hamster, Hühner sind schöne Haustiere
            -   feedback: Großartig!
                option: |-
                    Hunde sind schöne Haustiere
                    Katzen sind schöne Haustiere
                    Hamster sind schöne Haustiere
                    Hühner sind schöne Haustiere
            -   feedback: Zeile 2 sagt {for} jedes tier in der Liste der tiere. Also wird jedes tier ge{print}t.
                option: Das weißt du noch nicht. Weil es eines der Tiere {at} {random} auswählt.
            hint: Zeile 2 sagt {for} jedes tier in der Liste der tiere. Also wird jedes tier ausgegeben
            correct_answer: C
            question_score: '10'
        4:
            code: |-
                einkäufe = Äpfel, Brot, Milch
                {for} artikel {in} einkäufe
                    {print} 'Wir brauchen ' einkäufe
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Nein, tut es nicht. Nur Zeile 3 braucht Einrückung. Die hat sie.
                option: Zeile 2 muss mit 4 Leerzeichen als Einrückung beginnen
            -   feedback: Zeile 2 ist ein `{for}` Befehl also muss Zeile 3 mit Einrückung beginnen.
                option: Zeile 3 muss nicht mit 4 Leerzeichen als Einrückung beginnen
            -   feedback: Gut gemacht!
                option: In Zeile 3 sollte "aritkel" statt "einkäufe" stehen
            -   feedback: Nein, tut es nicht.
                option: 'In Zeile 2 muss es heißen: "einkäufe" anstelle von "artikel"'
            hint: Zeile 2 lautet `{for}` jeden "artikel" in der Liste "einkäufe"
            correct_answer: C
            question_score: '10'
        5:
            code: |-
                {print} 'Willkommen beim digitalen Würfel!'
                spielerinnen = Ann, John, Jesse
                möglichkeiten = 1, 2, 3, 4, 5, 6
                {for} spieler {in} spielerinnen
                    {print} spieler ' wirft ' _ {at} {random}
            question_text: Welches Wort sollte beim _ stehen?
            mp_choice_options:
            -   feedback: 'Es würde ausgeben: "Ann wirft Jesse", statt "Ann wirft 6".'
                option: spielerinnen
            -   feedback: Das ist richtig!
                option: möglichkeiten
            -   feedback: Du bist sehr nahe dran. Aber du musst Hedy aus der Liste auswählen, die "möglichkeiten" und nicht "möglichkeit" heißt...
                option: möglichkeit
            -   feedback: Schau dir die Namen der Variablen an.
                option: würfel
            hint: Hedy muss eine Zahl `{at} {random}` auswählen
            correct_answer: B
            question_score: '10'
        6:
            code: |-
                möglichkeiten = Schere, Stein, Papier
                spielerinnen = Kelly, Meredith
                {for} spielerin {in} spielerinnen
                    {print} spielerin ' wählt ' möglichkeiten {at} {random}
            question_text: Welche der Antworten unten ist ein mögliches Resultat, wenn du den Code ausführst?
            mp_choice_options:
            -   feedback: Meredith will auch mitspielen!
                option: Kelly wählt Stein
            -   feedback: So nah dran! Aber Kelly ist die erste in der Liste, also ist sie zuerst dran
                option: |-
                    Meredith wählt Schere
                    Kelly wählt Stein
            -   feedback: Kelly möchte auch spielen!
                option: Meredith wählt Papier
            -   feedback: Toll!
                option: |-
                    Kelly wählt Papier
                    Meredith wählt Schere
            hint: Jede Spielerin wird eine Auswahl treffen. Die Spielerin die zuvorderst in der Liste steht beginnt.
            correct_answer: D
            question_score: '10'
        7:
            code: |-
                namen = Ron, Leslie, April, Andy
                essen = Pasta, Pommes, Salat
                _
                    {print} name ' isst ' essen {at} {random} ' zu Abend'
            question_text: Welche Ziele sollte in die Lücken _ in diesem Programm, die entscheidet, was diese Leute zu Abend essen werden?
            mp_choice_options:
            -   feedback: Du hast einen Lauf!
                option: |-
                    ```
                    {for} name {in} namen
                    ```
            -   feedback: Nein, es sollte für jeden name in der Liste nameN sein, also anders herum
                option: |-
                    ```
                    {for} namen {in} name
                    ```
            -   feedback: Jedem name sollte gesagt werden, was sie zum Abendessen haben werden.
                option: |-
                    ```
                    {for} essen {in} essen
                    ```
            -   feedback: Jedem name sollte gesagt werden, was sie zum Abendessen haben werden.
                option: |-
                    ```
                    {for} name {in} essen
                    ```
            hint: Jedem name sollte gesagt werden, was sie zum Abendessen haben werden.
            correct_answer: A
            question_score: '10'
        8:
            code: |-
                namen = Donna, Tommy, Ben
                farben = Blau, Rot, Lila
                {for} name {in} namen
                    {print} _
            question_text: Was sollte in den Lücken _ in diesem Programm stehen, was entscheidet, welche Farbe das Hemd hat, das du bekommst?
            mp_choice_options:
            -   feedback: Das ist es nicht!
                option: |-
                    ```
                    'name bekommt ein farbe Hemd'
                    ```
            -   feedback: Großartig gemacht! Dies war schwierig!
                option: |-
                    ```
                    name 'bekommt ein ' farben {at} {random} ' Hemd'
                    ```
            -   feedback: Du möchtest jeden name ausgeben. Also sollte das erste Wort nicht namen sein, sondern...
                option: |-
                    ```
                    namen 'bekommt ein ' farbe {at} {random} ' Hemd'
                    ```
            -   feedback: Es gibt keine Variable mit dem Namen leute..
                option: |-
                    ```
                    leute ' bekommt ein farben Hemd'
                    ```
            hint: Beachten Sie die Anführungszeichen und die Namen der Variablen
            correct_answer: B
            question_score: '10'
        9:
            code: |-
                gänge = Vorspeise, Hauptspeise, Nachtisch
                namen = Timon, Onno
                {for} name {in} namen
                    {for} gang {in} gänge
                            essen = {ask} name ', was würdest du gerne essen als ' gang '?'
                            {print} name ' bestellt ' essen ' als ' gang
            question_text: Was ist die erste Frage, die Hedy stellt, wenn du das Programm ausführst?
            mp_choice_options:
            -   feedback: Perfekt!
                option: Timon, was würdest du gerne essen als Vorspeise?
            -   feedback: Timon ist der Erste in der Liste!
                option: Onno, was würdest du gerne als Vorspeise essen?
            -   feedback: Vorspeisen stehen als erstes in der Liste
                option: Timon, was würdest du gerne essen als Nachtisch?
            -   feedback: Es gibt kein `{at} {random}` in diesem Code...
                option: Das weißt du nicht. Hedy wird `{at} {random}` auswählen.
            hint: Die jeweils ersten Möglichkeiten von beiden Listen werden gewählt.
            correct_answer: A
            question_score: '10'
        10:
            code: |-
                preise = 1 Million Euro, Auto, Sandwich
                namen = Bob, Patrick, Sandy, Larry
                {for} preis {in} preise
                    {print} preis ' wird von ' name {at} {random} ' gewonnen'
            question_text: Was ist wahr bezüglich dieses Code?
            mp_choice_options:
            -   feedback: Das ist nicht wahr, du könntest am Ende ohne einen Preis dastehen.
                option: Alle werden immer einen Preis gewinnen.
            -   feedback: Das stimmt nicht. Alle Preise werden verteilt, aber an zufällige Personen
                option: Alle Preise werden stets an eine einzige Person vergeben.
            -   feedback: Das ist nicht wahr. Larry hat die gleichen Chancen wie die anderen
                option: Larry wird nie einen Preis gewinnen
            -   feedback: Du kapierst es!
                option: Jemand könnte zwei Preise gewinnen
            hint: Versuche dir die Ausgabe dieses Code vorzustellen.
            correct_answer: D
            question_score: '10'
    11:
        1:
            code: |-
                {for} i {in} _ 1 {to} 10
                    {print} i
            question_text: Welches Wort sollte anstelle des Fragezeichens stehen?
            mp_choice_options:
            -   feedback: Nein
                option: |-
                    ```
                    counter
                    ```
            -   feedback: Richtig
                option: '`{range}`'
            -   feedback: Nein
                option: '`{if}`'
            -   feedback: Nein
                option: '`{for}`'
            hint: Was hast du in diesem Level gelernt?
            correct_answer: B
            question_score: '10'
        2:
            code: |-
                {for} i {in} {range} 1 {to} 3
                    {print} i
            question_text: Was wird die Ausgabe dieses Code sein?
            mp_choice_options:
            -   feedback: Richtig!
                option: |-
                    1
                    2
                    3
            -   feedback: Das ist es nicht
                option: 1 2 3
            -   feedback: Das ist es nicht
                option: 1, 2, 3
            -   feedback: Das ist es nicht
                option: '123'
            hint: Wie erscheinen die Zahlen auf dem Bildschirm?
            correct_answer: A
            question_score: '10'
        3:
            question_text: Welcher Code wurde benutzt um diese Ausgabe zu bekommen?
            output: |-
                1
                2
                3
                4
                5
                Once I caught a fish alive!
            mp_choice_options:
            -   feedback: Perfekt
                option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
            -   feedback: Dieser Code wird nicht funktionieren. Du brauchst Einrückung nach {for}.
                option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                    {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
            -   feedback: Nun wird Hedy 1 Once I caught a fish alive!, 2 Once I caught a fish alive! usw. zählen.
                option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                        {print} 'Once I caught a fish alive!'
                    ```
            -   feedback: i ist eine Variable und sollte Anführungszeichen haben
                option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} 'i'
                    {print} 'Once I caught a fish alive!'
                    ```
            hint: Erst alle Zahlen und dann den Satz
            correct_answer: A
            question_score: '10'
        4:
            question_text: Welcher Code wurde benutzt um diese Ausgabe zu erzeugen?
            output: |-
                10
                9
                8
                7
                6
                5
                4
                3
                2
                1
                0
            mp_choice_options:
            -   feedback: Jetzt gibt Hedy die Zahlen 0 bis 10 aus anstelle von 10 bis 0.
                option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} i
                    ```
            -   feedback: Hedy würde in diesem Fall negative Zahlen ausgeben.
                option: |-
                    ```
                    {for} i {in} {range} 0 to 10
                        {print} - i
                    ```
            -   feedback: Leider existiert dies nicht.
                option: |-
                    ```
                    {for} i {in} {range} 10 to 0
                        {print} 10 9 8 7 6 5 4 3 2 1 0
                    ```
            -   feedback: Das ist richtig!
                option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} 10 - i
                    ```
            hint: Es muss eine Berechnung sein...
            correct_answer: D
            question_score: '10'
        5:
            code: |-
                {for} i {in} {range} 1 {to} 10
                {print} i
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Nein, tut es nicht.
                option: The i in the last line need quotation marks
            -   feedback: Du könntest genauso gut 1 bis 5 verwenden!
                option: You can't use `{range}` 1 `{to}` 5 only `{range}` 1 `{to}` 10
            -   feedback: Nicht Zeile 1...
                option: Line 1 needs to start with an indention.
            -   feedback: Perfekt!
                option: Line 2 needs to start with an indention
            hint: Da stimmt etwas mit der Einrückung nicht
            correct_answer: D
            question_score: '10'
        6:
            code: |-
                {for} i {in} {range} 0 {to} 2
                    {print} 'Hallo'
            question_text: Wie oft erscheint das Wort Hallo in der Ausgabe, wenn du den Code ausführst?
            mp_choice_options:
            -   feedback: Nein
                option: 1 Mal
            -   feedback: Nein
                option: 2 Mal
            -   feedback: Das ist richtig!
                option: 3 Mal
            -   feedback: Nein
                option: Nie
            hint: 0 zählt auch. Also 0,1,2 ist 3 Mal.
            correct_answer: C
            question_score: '10'
        7:
            code: |-
                {print} 'Willkommen bei Hedys Restaurant'
                personen = {ask} 'Wie viele Personen werden heute Abend hier essen?'
                _
                    essen = {ask} 'Was möchtest du bestellen?'
                    {print} essen
            question_text: Was sollte anstelle des Fragezeichens stehen?
            mp_choice_options:
            -   feedback: Es sind nicht immer 3 Personen
                option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                    ```
            -   feedback: Die Variable heißt nicht gäste
                option: |-
                    ```
                    {for} i {in} {range} 1 {to} gäste
                    ```
            -   feedback: Großartig!
                option: |-
                    ```
                    {for} i {in} {range} 1 {to} personen
                    ```
            -   feedback: Das ist eine Bestellung zu viel!
                option: |-
                    ```
                    {for} i {in} {range} 0 {to} personen
                    ```
            hint: Benutze die Variable 'personen'
            correct_answer: C
            question_score: '10'
        8:
            code: |-
                {for} i {in} {range} 23 {to} 25
                    {print} 'hi'
            question_text: Was wird die Ausgabe dieses Code sein?
            mp_choice_options:
            -   feedback: Die Zahlen erscheinen nicht. Es fehlt `{print}` i.
                option: |-
                    23
                    24
                    25
            -   feedback: Die Zahlen erscheinen nicht. Es fehlt `{print}` i
                option: 23 hi 24 hi 25 hi
            -   feedback: Richtig
                option: |-
                    hi
                    hi
                    hi
            -   feedback: Nein, es wird nur 3 Mal erscheinen.
                option: Das Wort 'hi' wird 25 Mal in Folge erscheinen.
            hint: Es fehlt `{print}` i
            correct_answer: C
            question_score: '10'
        9:
            code: |-
                alter = {ask} 'Wie alt bist du?'
                {for} i {in} {range} 1 {to} alter
                    {print} 'Hip Hip Hoorray!'
            question_text: Wie oft sagt Hedy Hip Hip Hooray?
            mp_choice_options:
            -   feedback: Versuch es nochmal
                option: 1 Mal
            -   feedback: Versuch es nochmal
                option: 2 Mal
            -   feedback: Versuch es nochmal
                option: Nie
            -   feedback: Das ist richtig!
                option: Das hängt davon ab wie alt du bist
            hint: '`{for}` i `{in}` `{range}` 1 `{to}` alter'
            correct_answer: D
            question_score: '10'
        10:
            question_text: Welcher Code gehört zu dieser Ausgabe?
            output: |-
                Baby shark tututudutudu
                Baby shark tututudutudu
                Baby shark tututudutudu
                Baby shark
            mp_choice_options:
            -   feedback: Beachte die Einrückung
                option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
            -   feedback: Das ist richtig!
                option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
            -   feedback: '`{range}` 0 `{to}` 3 ist 4 Mal.'
                option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
            -   feedback: '`{range}` 0 `{to}` 3 ist 4 Mal.'
                option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
            hint: Beachte die Einrückung
            correct_answer: B
            question_score: '10'
    12:
        1:
            code: |-
                {print} 'dreieinhalb plus eineinhalb ist...'
                {print} 3.5 + 1.5
            question_text: Welche Ausgabe ist korrekt?
            mp_choice_options:
            -   feedback: Vergiss nicht die erste Zeile Code!
                option: '5'
            -   feedback: Dieser ist es nicht!
                option: 3.5 + 1.5
            -   feedback: Schau dir die zweite Zeile genau an...
                option: |-
                    Dreieinhalb plus eineinhalb ist...
                    Fünf
            -   feedback: Großartig gemacht!
                option: |-
                    dreieinhalb plus eineinhalb ist...
                    5
            hint: Beide Zeilen werden ausgegeben!
            correct_answer: D
            question_score: '10'
        2:
            question_text: Welches dieser Programme ist korrekt?
            mp_choice_options:
            -   feedback: Alle unterschiedlichen Werte von aromen sollten in Anführungszeichen sein.
                option: |-
                    ```
                    aromen {is} Vanille, Erdbeere, Schokolade
                    {print} 'Ich möchte einen ' aromen {at} {random} ' Kuchen. '
                    ```
            -   feedback: Alle unterschiedlichen Werte von aromen sollten in Anführungszeichen sein.
                option: |-
                    ```
                    'aromen = Vanille, Erdbeere, Schokolade'
                    {print} 'Ich möchte einen ' aromen {at} {random} ' Kuchen. '
                    ```
            -   feedback: In Ordnung!
                option: |-
                    ```
                    aromen = 'Vanille', 'Erdbeer', 'Schokoladen'
                    {print} 'Ich möchte einen ' aromen {at} {random} '-Kuchen.'
                    ```
            -   feedback: Alle unterschiedlichen Werte von aromen sollten in Anführungszeichen sein.
                option: |-
                    ```
                    aromen = 'Vanille, Erdbeere, Schokolade'
                    {print} 'Ich möchte einen ' aromen {at} {random} ' Kuchen. '
                    ```
            hint: Die zweite Zeile ist gleich in beiden Programmen, achte auf die erste Zeile
            correct_answer: C
            question_score: '10'
        3:
            code: |-
                lieblings_tier = {ask} 'Was ist dein Lieblingstier?'
                {print} 'Ich mag ' lieblingstier ' auch!'
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Richtig!
                option: Der Name der Variablen ist in Zeile 1 ein anderer als in Zeile 2.
            -   feedback: Das ist nicht wahr
                option: Die Anführungszeichen werden in Zeile 2 nicht richtig benutzt
            -   feedback: Das stimmt nicht
                option: Du kannst das = Zeichen nicht verwenden, wenn du einen {ask}-Befehl benutzt
            -   feedback: Das stimmt nicht
                option: Nichts ist falsch.
            hint: Die Anführungszeichen werden richtig benutzt
            correct_answer: A
            question_score: '10'
        4:
            code: "{print} Willkommen im Online-Schuhgeschäft\nkategorie = {ask} Welche Art von Schuhen suchen Sie?\n{if} kategorie = High Heels\n\t{print} High Heels sind jetzt 50% reduziert!"
            question_text: In welchen Zeilen werden Anführungszeichen gebraucht, um den Code zum Laufen zu bringen?
            mp_choice_options:
            -   feedback: Nein
                option: Zeile 1 und 2
            -   feedback: Nein
                option: Zeile 1, 2 und 3
            -   feedback: Nein
                option: Zeile 1, 2 und 4
            -   feedback: Perfekt!
                option: Alle Zeilen
            hint: Braucht Zeile 3 auch Anführungszeichen?
            correct_answer: D
            question_score: '10'
        5:
            code: "name {is} {ask} 'Was ist dein Name?'\n{if} name {is} 'Agent007'\n\ta {is} 'Gehe zum Flughafen '\nelse\n\ta {is} 'Gehe zum Bahnhof '\npasswort {is} {ask} 'Was ist das Passwort?'\n{if} passwort {is} 'TOPSECRET'\n\tb {is} 'morgen um 02:00'\nelse\n\tb {is} 'heute um 10:00'\nprint a + b"
            question_text: Welche Ausgabe erhält Agent007 wenn er oder sie das richtige Passwort eingibt?
            mp_choice_options:
            -   feedback: Der Agent wird hier keine Bösewichte erwischen
                option: Gehe zum Bahnhof heute um 10:00
            -   feedback: Du hast den Code geknackt!
                option: Gehe zum Flughafen morgen um 02:00
            -   feedback: Der Agent wird hier keine Bösewichte erwischen
                option: Gehe zum Bahnhof morgen um 02:00
            -   feedback: Der Agent wird hier keine Bösewichte erwischen
                option: Gehe zum Flughafen morgen um 10:00
            hint: Das richtige Passwort lautet TOPSECRET
            correct_answer: B
            question_score: '10'
        6:
            code: "{print} 'Willkommen bei McHedy!'\nbestellung = {ask} 'Möchtest du einen Hamburger oder Pommes?'\n{if} bestellung = 'Hamburger'\n\tpreis = 12\n{if} bestellung = 'Pommes'\n\tpreis = 4\ngetränk = {ask} 'Möchtest du einen Getränk dazu für 2 Euro?'\n{if} getränk = 'Ja'\n\t???\n{print} 'Das\
                \ macht dann ' preis ' Euro bitte'"
            question_text: Welche Zeile soll bei ??? eingefügt werden?
            mp_choice_options:
            -   feedback: Was ist, wenn du nur Pommes und ein Getränk bestellst?
                option: |-
                    ```
                    preis = 14
                    ```
            -   feedback: Was ist, wenn du nur Pommes und ein Getränk bestellst?
                option: |-
                    ```
                    preis = '14'
                    ```
            -   feedback: Exzellent!
                option: |-
                    ```
                    preis = preis + 2
                    ```
            -   feedback: Fast richtig!
                option: |-
                    ```
                    preis = + 2
                    ```
            hint: Was ist, wenn du nur Pommes und ein Getränk bestellst?
            correct_answer: C
            question_score: '10'
        7:
            code: "menü = 'Kekse', 'Käse', 'Weintrauben'\n{print} \"Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!\"\ndiät = {ask} \"Haben Sie irgendwelche diätetischen Einschränkungen?\n{if} diät = 'glutenfrei'\n\t{remove} 'Kekse' {from} menü\n{if} diät = 'vegan'\n\t{remove} 'Käse' {from}\
                \ menü\n{print} 'Für dich habe ich mitgebracht: '\n{for} snack {in} menü\n\t{print} snack"
            question_text: Welche Ausgabe erhält eine Veganerin?
            mp_choice_options:
            -   feedback: Klasse!
                option: |-
                    Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!
                    Für dich habe ich mitgebracht:
                    Kekse
                    Weintrauben
            -   feedback: Es gibt mehr als eine Auswahlmöglichkeit
                option: |-
                    Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!
                    Für dich habe ich mitgebracht:
                    Weintrauben
            -   feedback: Veganer können keinen Käse haben
                option: |-
                    Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!
                    Für dich habe ich mitgebracht:
                    Käse
                    Weintrauben
            -   feedback: Fast richtig, aber beachte die Reihenfolge der Snacks in der Liste
                option: |-
                    Es ist mein Geburtstag! Ich habe ein paar Snacks mitgebracht!
                    Für dich habe ich mitgebracht:
                    Weintrauben
                    Kekse
            hint: Welcher Eintrag wird aus der Liste gestrichen, wenn du "vegan" antwortest?
            correct_answer: A
            question_score: '10'
        8:
            code: '3.5'
            question_text: Welcher Code wurde verwendet, um diese Ausgabe zu erzeugen?
            mp_choice_options:
            -   feedback: Nein
                option: |-
                    ```
                    {print} '7 / 2'
                    ```
            -   feedback: Das ist richtig!
                option: |-
                    ```
                    {print} 7 / 2
                    ```
            -   feedback: Nein
                option: |-
                    ```
                    {print} 7 : 2
                    ```
            -   feedback: Nein
                option: |-
                    ```
                    {print} 7 * 2
                    ```
            hint: 7 geteilt durch 2 ist 3.5
            correct_answer: B
            question_score: '10'
        9:
            code: |-
                ???
                {print} 'Du gewinnst ' preise {at} {random} '!'
            question_text: Welcher Code soll in Zeile 1 anstelle der ???
            mp_choice_options:
            -   feedback: Du gewinnst nichts
                option: |-
                    ```
                    preise = 'eine' 'Million' 'Euro', 'nichts'
                    ```
            -   feedback: Du gewinnst nichts
                option: |-
                    ```
                    preise = 'eine Million Euro, nichts'
                    ```
            -   feedback: Gewinner!
                option: |-
                    ```
                    preise = 'eine Million Euro', 'nichts'
                    ```
            -   feedback: Du eine nichts
                option: |-
                    ```
                    'preise' = 'eine Million Euro', 'nichts'
                    ```
            hint: Die Elemente in der Liste sollten in Anführungszeichen stehen
            correct_answer: C
            question_score: '10'
        10:
            code: "aktionen = 'clap your hands', 'stomp your feet', 'shout Hurray!'\n???\n\t{for} i {in} range 0 {to} 1\n\t\t{print} 'if youre happy and you know it'\n\t\t{print} aktion\n\t{print} 'if youre happy and you know it and you really want to show it'\n\t{print} 'if youre happy and you know it'\n\
                \t{print} aktion"
            question_text: Welche Codezeile soll bei ??? ausgefüllt werden um das Lied zu vervollständigen?
            mp_choice_options:
            -   feedback: Das ist eine schwierige Aufgabe! Alle Aktionen aus der Liste müssen im Lied vorkommen.
                option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                    ```
            -   feedback: Du bist super!
                option: |-
                    ```
                    {for} aktion {in} aktionen
                    ```
            -   feedback: Das ist eine schwierige Aufgabe! Alle Aktionen aus der Liste müssen im Lied vorkommen.
                option: |-
                    ```
                    {repeat} 3 {times}
                    ```
            -   feedback: Das ist eine schwierige Aufgabe! Alle Aktionen aus der Liste müssen im Lied vorkommen.
                option: |-
                    ```
                    {print} aktionen {at} {random}
                    ```
            hint: Das ist eine schwierige Aufgabe! Alle Aktionen aus der Liste müssen im Lied vorkommen.
            correct_answer: B
            question_score: '10'
    13:
        1:
            code: "name = {ask} 'Was ist dein Name?'\nsong = {ask} 'Möchtest du einen Song hören?'\ngeburtstag = {ask} 'Ist heute dein Geburtstag?'\n???\n\t{print} 'Happy Birthday to you!'\n\t{print} 'Happy Birthday to you!'\n\t{print} 'Happy Birthday liebe/r ' name\n\t{print} 'Happy Birthday to you!'"
            question_text: Welcher Code soll bei ??? eingefügt werden?
            mp_choice_options:
            -   feedback: Fast geschafft
                option: |-
                    ```
                    {if} geburtstag {and} song = 'ja'
                    ```
            -   feedback: Hedy singt nur für dich, wenn du ein Lied hören willst
                option: |-
                    ```
                    {if} geburtstag = 'ja' {and} name = 'Hedy'
                    ```
            -   feedback: Super!
                option: |-
                    ```
                    {if} song = 'ja' {and} geburtstag = 'ja'
                    ```
            -   feedback: Hedy singt nur, wenn beide Antworten Ja lauten
                option: |-
                    ```
                    {if} song = 'ja' {or} geburtstag = 'ja'
                    ```
            hint: Hedy singt, wenn du ein Lied hören willst und es dein Geburtstag ist
            correct_answer: C
            question_score: '10'
        2:
            code: |-
                menü = 'Käse', 'Wurstbrötchen', 'Kekse'
                ernährung = {ask} 'Haben Sie irgendwelche Ernährungseinschränkungen?'
                {if} ernährung = 'vegan' ??? ernährung = 'halal'
                    {remove} 'Wurstbrötchen' {from} menü
            question_text: Welcher Befehl fehlt an der Stelle der ??? ?
            mp_choice_options:
            -   feedback: Du musst nicht vegan oder muslimisch sein
                option: '`{and}`'
            -   feedback: Großartiges Denken!
                option: '`{or}`'
            -   feedback: Nein
                option: '`+`'
            -   feedback: Nein
                option: '`{print}`'
            hint: Weder Veganer noch Muslime können Wurstbrötchen essen.
            correct_answer: B
            question_score: '10'
        3:
            code: |-
                mitglied = {ask} 'Hast du eine Mitgliedskarte?'
                rabatt = {ask} 'Hast du einen Rabatt-Code?'
                {if} mitglied = 'ja' {or} rabatt = 'ja'
                    {print} 'Du bekommst einen kostenlosen Apfelkuchen!'
                {else}
                    {print} 'Das sind 5 Euro bitte'
            question_text: Welche Ausgabe bekommt das Mitglied ohne Rabatt-Code?
            mp_choice_options:
            -   feedback: Großartig gemacht!
                option: Du bekommst einen kostenlosen Apfelkuchen!
            -   feedback: Das ist nicht wahr
                option: Das sind 5 Euro bitte
            -   feedback: Dieser Code hat keinen Fehler
                option: Dieser Code wird nicht funktionieren, also wird es keine Ausgabe geben
            -   feedback: Gibt es! Lies die Frage genau
                option: Es gibt keinen Weg es herauszufinden
            hint: Beachte den Befehl `{or}` in Zeile 3
            correct_answer: A
            question_score: '10'
        4:
            code: '{if} computer_wahl {is} ''Stein'' {and} deine_wahl {is} ''Papier'''
            question_text: Welche Zeile Code sollte dieser Zeile im Stein-Schere-Papier-Spiel folgen?
            mp_choice_options:
            -   feedback: Du gewinnst!
                option: |-
                    ```
                    {print} 'du gewinnst'
                    ```
            -   feedback: Du verlierst!
                option: |-
                    ```
                    {print} 'du verlierst'
                    ```
            -   feedback: Es ist nur unentschieden, wenn beide gleich sind
                option: |-
                    ```
                    {print} 'unentschieden'
                    ```
            -   feedback: Versuche es nochmal!
                option: |-
                    ```
                    {print} 'versuche es nochmal'
                    ```
            hint: Papier schlägt Stein
            correct_answer: A
            question_score: '10'
        5:
            code: |-
                {if} name = 'Cinderella' {and} schuhgröße = '38'
                    {print} 'Du bist meine einzig wahre Liebe!'
            question_text: Welche Aussage über diesen Code ist wahr?
            mp_choice_options:
            -   feedback: Der Prinz ist etwas wählerischer!
                option: Jede Person mit Schuhgröße 38 ist die einzig wahre Liebe dieses Prinzen
            -   feedback: Der Prinz ist etwas wählerischer!!
                option: Jede Person namens Cinderella ist des Prinzen einzig wahre Liebe
            -   feedback: Fantastisch!
                option: Jede Person namens Cinderella mit Schuhgröße 38 ist dieses Prinzen wahre Liebe
            -   feedback: Der Prinz ist etwas wählerischer!
                option: Jede Person nicht namens Cinderella mit Schuhgröße 38 ist dieses Prinzen wahre Liebe
            hint: Beide Aussagen müssen wahr sein
            correct_answer: C
            question_score: '10'
        6:
            code: |-
                {print} 'Lass mich raten, welches Familienmitglied du bist!'
                brille = {ask} 'Trägst du eine Brille?'
                weiblich = {ask} 'Bist du weiblich?'
                {if} brille = 'ja' {and} weiblich = 'ja'
                    {print} 'Du musst Sophie sein!'
                {if} brille = 'nein' {and} weiblich = 'ja'
                   {print} 'Du musst Marleen sein!'
                {if} brille = 'ja' {and} weiblich = 'nein'
                    {print} 'Du musst Wouter sein!'
                {if} brille = 'nein' {and} weiblich = 'nein'
                    {print} 'Du musst Michael sein!'
            question_text: Welche Aussage über diesen Code ist wahr?
            mp_choice_options:
            -   feedback: Versuche es nochmal
                option: Michael ist ein Junge mit Brille
            -   feedback: Versuche es nochmal
                option: Marleen ist ein Mädchen mit Brille
            -   feedback: Versuche es nochmal
                option: Wouter ist ein Junge ohne Brille
            -   feedback: Großartig gemacht!
                option: Sophie ist ein Mädchen mit Brille
            hint: Schau es dir genau an! Oder brauchst du eine Brille?
            correct_answer: D
            question_score: '10'
        7:
            code: |-
                {print} 'Danke, dass du mir mit den Haustieren hilfst'
                {print} 'Hier ist ein Programm, das hilft, sie zu füttern'
                tier = {ask} 'Welches Tier ist es?'
                farbe = {ask} 'Welche Farbe hat es?'
                {if} tier = 'Katze' {and} farbe = 'grau'
                    {print} 'Das ist Abby. Sie isst 3 Schaufeln Katzenfutter'
                {if} tier = 'Katze' {and} farbe = 'orange'
                    {print} 'Das ist Milo. Er isst 4 Schaufeln Katzenfutter'
                {if} tier = 'Vogel' {or} farbe = 'schwarz'
                    {print} 'Ich habe sie heute morgen gefüttert! Sie brauchen heute kein Futter mehr'
                {if} tier = 'Hamster' {and} farbe = 'braun'
                    {print} 'Du kannst ihm ein Stück Möhre geben'
            question_text: Welche Aussage ist falsch?
            mp_choice_options:
            -   feedback: Dies ist wahr!
                option: Die graue Katze heißt Abby
            -   feedback: Dies ist wahr
                option: Milo die orange Katze isst 4 Schaufeln Katzenfutter
            -   feedback: Großartig gemacht!
                option: Der schwarze Hamster braucht ein Stück Möhre
            -   feedback: Dies ist wahr
                option: Der gelbe Vogel wurde heute morgen gefüttert
            hint: Lies die letzten 4 Zeilen genau
            correct_answer: C
            question_score: '10'
        8:
            code: |-
                {print} 'Willkommen im Kino'
                popcorn = {ask} 'Möchtest du Popcorn?'
                getränk = {ask} 'Möchtest du ein Getränk?'
                {if} popcorn = 'ja' {and} getränk = 'ja'
                    {print} 'Das macht 8 Euro bitte'
                {if} popcorn = 'nein' {and} getränk = 'ja'
                   {print} 'Das macht 3 Euro bitte'
                {if} popcorn = 'ja' {and} getränk = 'nein'
                    {print} 'Das macht 5 Euro bitte'
                {if} popcorn = 'nein' {and} getränk = 'nein'
                    {print} 'OK'
                {print} 'Viel Spaß beim Film'
            question_text: Welche Ausgabe erhältst du, wenn du Popcorn bestellst, aber kein Getränk?
            mp_choice_options:
            -   feedback: Du hast zu viel bezahlt!
                option: |-
                    Willkommen im Kino
                    Das macht 8 Euro bitte
                    Viel Spaß beim Film
            -   feedback: Toll!
                option: |-
                    Willkommen im Kino
                    Das macht 5 Euro bitte
                    Viel Spaß beim Film
            -   feedback: Das ist nicht genug Geld!
                option: |-
                    Willkommen im Kino
                    Das macht 3 Euro bitte
                    Viel Spaß beim Film
            -   feedback: Du musst für das Popcorn bezahlen!
                option: |-
                    Willkommen im Kino
                    OK
                    Viel Spaß beim Film
            hint: popcorn = ja und getränk = nein
            correct_answer: B
            question_score: '10'
        9:
            code: |-
                1  schokolade = {ask} 'Möchtest du Schokoladen-Sauce auf deinem Eis?'
                2  streusel = {ask} 'Möchtest du Streusel auf deinem Eis?'
                3  {if} schokolade {and} streusel = 'ja'
                4      {print} 'Eis mit Schokoladen-Sauce und Streuseln, kommt sofort!'
                5  {if} schokolade = 'ja' {and} streusel = 'nein'
                6      {print} 'Eis mit Schokoladen-Sauce, kommt sofort!'
                7  {if} schokolade = 'nein' {and} streusel = 'ja'
                8      {print} 'Eis mit Streuseln, kommt sofort'
                9  {if} schokolade = 'nein' {and} streusel = 'nein'
                10     {print} 'Einfach nur Eis, kommt sofort!'
            question_text: Was stimmt mit diesem Code nicht?
            mp_choice_options:
            -   feedback: Richtig!
                option: 'Zeile 3 sollte sein: {if} schokolade = ''ja'' {and} streusel = ''nein'''
            -   feedback: Dies ist nicht was ich bestellt habe!
                option: 'Zeile 3 sollte sein: {if} schokolade = ''nein'' {and} streusel = ''nein'''
            -   feedback: Dies ist nicht was ich bestellt habe!
                option: 'Zeile 5 sollte sein: {if} schokolade = ''ja'' {and} streusel = ''ja'''
            -   feedback: Dies ist nicht was ich bestellt habe!
                option: 'Zeile 7 sollte sein: {if} schokolade = ''ja'' {and} streusel = ''nein'''
            hint: Da ist ein Fehler in Zeile 3
            correct_answer: A
            question_score: '10'
        10:
            code: |-
                {print} 'Willkommen beim Produktfinder dieses Supermarkts'
                produkt = {ask} 'Welches Produkt suchen Sie?'
                bäckerei = 'Brot', 'Brötchen', 'Muffins'
                getränke = 'Sprudel', 'Wasser', 'Limo'
                snacks = 'Chips', 'Nüsse', 'Dips'
                gefroren = 'Pommes', 'Eis', 'Pizza'
                obst = 'Bananen', 'Äpfel', 'Orangen'
                {if} produkt {in} snacks ??? produkt {in} getränke
                    {print} 'Dieses Produkt ist in Gang 3'
                {if} produkt {in} bäckerei {or} produkt {in} bäckerei
                    {print} 'Dieses Produkt ist ganz hinten im Laden'
                {if} produkt {in} obst
                    {print} 'Das Obst ist in der Nähe der Kasse'
            question_text: Welcher Befehl muss in Zeile 8 anstelle der ??? stehen?
            mp_choice_options:
            -   feedback: Es gibt keine Produkte die sowohl in der Liste der Snacks als auch in der Liste der Getränke sind
                option: '`{and}`'
            -   feedback: Großartig gemacht!
                option: '`{or}`'
            -   feedback: Nein
                option: '`{in}`'
            -   feedback: Nein
                option: '`{if}`'
            hint: Das Produkt ist entweder in der Liste der Snacks oder in der Liste der Getränke
            correct_answer: B
            question_score: '10'
    14:
        1:
            code: |-
                name _ {ask} 'Who are you?'
                {if} name == 'Hedy'
                    {print} 'Me too!'
            question_text: Which symbol should be used on the blank?
            mp_choice_options:
            -   feedback: This is not a symbol.
                option: '`=>`'
            -   feedback: We are not comparing anything, just asking.
                option: '`==`'
            -   feedback: We are not comparing anything, just asking
                option: '`!=`'
            -   feedback: Right!
                option: '`=`'
            hint: We are not comparing anything, we are just asking a name.
            correct_answer: D
            question_score: '10'
        2:
            question_text: Which of these codes has used the correct = or == symbol?
            mp_choice_options:
            -   feedback: 'No'
                option: '{if} name = Hedy'
            -   feedback: 'No'
                option: '{if} age = 24'
            -   feedback: Yes!
                option: answer = {ask} 'What is your answer'
            -   feedback: 'No'
                option: answer == {ask} 'How are you doing?'
            hint: When you are comparing two answers you should use ==
            correct_answer: C
            question_score: '10'
        3:
            code: |-
                guests = {ask} 'How many people are at the party?'
                {if} guests _ 130
                    {print} 'You can come in!'
                {if} guests _ 130
                    {print} 'Im sorry, the club is full. '
                    {print} 'You have to wait for a guest to leave'
            question_text: Which symbols should be filled in on the two blanks?
            mp_choice_options:
            -   feedback: That's not it
                option: '`>` and `<`'
            -   feedback: That's not it
                option: '`=` and `>=`'
            -   feedback: You are right
                option: '`<` and `>=`'
            -   option: '`+` and `==`'
            hint: There are 130 people allowed in the club
            correct_answer: C
            question_score: '10'
            feedback: That's not it
        4:
            code: |-
                price = 10
                money = {ask} How much money do you have?
                buy = {ask} 'Would you like to buy this teddy bear?'
                {if} money >= price and buy == 'yes'
                    {print} 'You can buy the bear!'
                {else}
                    {print} 'You cannot buy this bear!'
            question_text: What's wrong with this code?
            mp_choice_options:
            -   feedback: No that's not it
                option: In line 1 == should be used instead of =
            -   feedback: You are correct
                option: Line 2 misses quotation marks
            -   feedback: No that's not it
                option: In line 4 = should have been used instead of ==
            -   feedback: No that's not it
                option: In line 4 <= should have been used instead of >=
            hint: The symbols are right
            correct_answer: B
            question_score: '10'
        5:
            code: |-
                age = {ask} 'How old are you?'
                ticket = {ask} 'Do you have a ticket?'
                {if} age _ and ticket == 'yes'
                    {print} 'You can enter the movie theater.'
                {else}
                    {print} 'You are not allowed to come in!'
            question_text: Which symbol should be filled in on the blanks if the movie is suitable for kids for the age of 12 and up?
            mp_choice_options:
            -   feedback: 12 year olds are allowed too
                option: '`> 12`'
            -   feedback: Great!
                option: '`>= 12`'
            -   feedback: These kids are too young!
                option: '`< 12`'
            -   feedback: These kids are too young
                option: '`<= 12`'
            hint: '> means greater than'
            correct_answer: B
            question_score: '10'
        6:
            code: |-
                lives = 2
                {repeat} 10 times
                    {if} lives != 0
                        answer = {ask} 'Are you annoyed yet?'
                    {if} answer == 'yes'
                        lives = lives - 1
            question_text: How many times do you have to say you are annoyed before this annoying game stops?
            mp_choice_options:
            -   feedback: It stops after 2 times
                option: 10 times
            -   feedback: It stops after 2 times
                option: 0 times
            -   feedback: It stops after 2 times
                option: 1 time
            -   feedback: That is correct
                option: 2 times
            hint: '!= means ''is not'''
            correct_answer: D
            question_score: '10'
        7:
            code: |-
                {print} 'Guess which number'
                numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                number = numbers {at} {random}
                game = 'on'
                {for} i {in} {range} 1 {to} 10
                    {if} game == 'on'
                        guess = {ask} 'Which number do you think it is?'
                        {if} guess < number
                            {print} _
                        {if} guess > number
                            {print} _
                        {if} guess == number
                            {print} _
                            game = 'over'
            question_text: What should be filled in on the three blanks?
            mp_choice_options:
            -   feedback: That's not quite right.
                option: '`''Lower''` and `''Higher''` and `''You win!''`'
            -   feedback: You win!
                option: '`''Higher''` and `''Lower''` and `''You win!''`'
            -   feedback: That's not quite right.
                option: '`''You win!''` and `''Lower!''` and `''Higher''`'
            -   feedback: That's not quite right.
                option: '`''Lower!''` and `''You win!''` and `''Higher!''`'
            hint: The last one should say you win.
            correct_answer: B
            question_score: '10'
        8:
            code: |-
                length = {ask} 'Please fill in your length in cm'
                {if} length < 120
                    {print} 'Sorry, you cannot go on this roller coaster.'
                {else}
                    {print} 'Enjoy the ride'
            question_text: Which statement is true about this roller coaster?
            mp_choice_options:
            -   feedback: True!
                option: You must be taller than 120 cm to go on the roller coaster
            -   feedback: If you are 120 cm you won't get in
                option: You must be taller than 119 cm to go on the roller coaster
            -   feedback: '> means greater than'
                option: You must be shorter than 120 cm to go on the roller coaster
            -   feedback: There are.
                option: There are no length restrictions to go on the roller coaster
            hint: '> means greater than'
            correct_answer: A
            question_score: '10'
        9:
            code: |-
                chocolate = {ask} 'How many pieces of chocolate have you eaten?'
                  {if} chocolate <= 2
                      {print} 'That is a healthy amount'
                  {if} chocolate > 2 and chocolate =< 8
                      {print} 'That is a bit much'
                  {if} chocolate > 8
                      {print} 'You will get a stomach ache!'
            question_text: How many pieces of chocolate will give you a stomach ache according to this fitbit?
            mp_choice_options:
            -   feedback: 'No'
                option: 1 or more
            -   feedback: 'No'
                option: 2 or more
            -   feedback: Almost
                option: 8 or more
            -   feedback: Great!
                option: 9 or more
            hint: '> 8 means more than 8'
            correct_answer: D
            question_score: '10'
        10:
            code: |-
                {print} 'Whoever gets the most points wins!'
                {if} points_player_1 < points_player_2
                    {print} _
            question_text: What should be filled in in the blanks?
            mp_choice_options:
            -   feedback: Look at who has the highest score!
                option: '''player 1 wins'''
            -   feedback: Yes!
                option: '''player 2 wins'''
            -   feedback: Look at who has the highest score!
                option: '''player 2 loses'''
            -   feedback: No it's not, one player has a higher score
                option: '''It is a tie'''
            hint: You win the game by having the most points
            correct_answer: B
            question_score: '10'
    15:
        1:
            code: |-
                answer = 0
                while answer _ 'Amsterdam'
                    answer = ask 'What is the capital city of the Netherlands?'
                print 'You have given the correct answer'
            question_text: 'Which symbol should be used on the blank? Tip: You must keep guessing until you get it right.'
            mp_choice_options:
            -   feedback: That is not right.
                option: '`=!`'
            -   feedback: You don't have to keep guessing if you've given the right answer.
                option: '`==`'
            -   feedback: Correct
                option: '`!=`'
            -   feedback: That's not it
                option: '`=`'
            hint: Keep guessing until you say Amsterdam
            correct_answer: C
            question_score: '10'
        2:
            question_text: Which of these codes has used the correct symbol(s)?
            mp_choice_options:
            -   feedback: 'No'
                option: |-
                    ```
                    {while} name = Hedy
                    ```
            -   feedback: 'No'
                option: |-
                    ```
                    {while} age = 24
                    ```
            -   feedback: Yes!
                option: |-
                    ```
                    {while} time > 0
                    ```
            -   feedback: A quotation mark is missing
                option: |-
                    ```
                    {while} answer == yes'
                    ```
            hint: When you are comparing two answers you should use ==
            correct_answer: C
            question_score: '10'
        3:
            code: |-
                _ age >= 18
                  print 'you are not allowed in this bar'
            question_text: Which command should be filled in on the two blanks?
            mp_choice_options:
            -   feedback: That's not it
                option: '`{in}`'
            -   feedback: You are right
                option: '`{while}`'
            -   feedback: That's not it
                option: '`{for}`'
            -   feedback: That's not it
                option: '`{range}`'
            hint: You are not allowed in the bar as long as you are 17 or younger
            correct_answer: B
            question_score: '10'
        4:
            code: |-
                options = 1, 2, 3, 4, 5, 6
                print 'Throw 6 as fast as you can!'
                thrown = 0
                tries = 0
                while thrown == 6
                    thrown = options at random
                    print 'You threw ' thrown
                    tries = tries + 1
                print 'Yes! You have thrown 6 in ' tries ' tries.'
            question_text: What's wrong with this code?
            mp_choice_options:
            -   feedback: No that's not it
                option: In line 1 == should be used instead of =
            -   feedback: That's not right
                option: Line 2 misses quotation marks
            -   feedback: That's not it
                option: In line 5 if should have been used instead of while
            -   feedback: You are correct
                option: In line 5 != should have been used instead of ==
            hint: There is something wrong in line 5
            correct_answer: D
            question_score: '10'
        5:
            code: |-
                wetness = 10
                while wetness != 0
                    print 'Your hair is still wet, hair dryer on!'
                    sleep 1
                    clear
                    wetness _

                print 'All dry!'
            question_text: What should be placed on the blank to make this program work correctly?
            mp_choice_options:
            -   feedback: That will not change anything
                option: = wetness
            -   feedback: You can't have two times = in one line
                option: = wetness = 1
            -   feedback: You are correct!
                option: = wetness - 1
            -   feedback: The program should count down
                option: = wetness + 1
            hint: wetness should get less each time
            correct_answer: C
            question_score: '10'
        6:
            code: |-
                lives = 100
                    {while} lives != 0
                    answer = {ask} 'Are you annoyed yet?'
                {if} answer == 'yes'
                    lives = lives - 1
            question_text: what is wrong with this code?
            mp_choice_options:
            -   feedback: No that is not right
                option: while should be if
            -   feedback: No that is not right
                option: if should be while
            -   feedback: No that's not right
                option: Line 3 should start with more indentation
            -   feedback: That is correct
                option: Line 2 should start with less indentation
            hint: Look closely at the indentation
            correct_answer: D
            question_score: '10'
        7:
            code: |-
                {print} 'Guess which number'
                numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                number = numbers {at} {random}
                game = 'on'
                {if} game == 'on'
                    guess = {ask} 'Which number do you think it is?'
                    {if} guess < number
                        {print} _
                    {if} guess > number
                        {print} _
                    {if} guess == number
                        {print} _
                        game = 'over'
            question_text: How should this program be changed to that it works?
            mp_choice_options:
            -   feedback: Perfect!
                option: '... change the first {if} into a {while}'
            -   feedback: That's not quite right.
                option: '... change the second {if} into a {while}'
            -   feedback: That's not quite right.
                option: '... change the third {if} into a {while}'
            -   feedback: That's not quite right.
                option: '... change the fourth {if} into a {while}'
            hint: The last one should say you win.
            correct_answer: A
            question_score: '10'
        8:
            code: |-
                while toilet == 'occupied'
                    lights = 'on'
                    air_freshener_sprays = 'yes'
                    sleep 60
                else
                    lights = 'off'
            question_text: Which statement is true about this automated toilet system?
            mp_choice_options:
            -   feedback: False!
                option: The lights and air freshener will turn off after 1 minute
            -   feedback: Great job
                option: The air freshener sprays once every minute and the lights stay on the whole time while you are on the toilet
            -   feedback: It only sprays when you're in there.
                option: The air freshener sprays once you leave the toilet.
            -   feedback: That wouldn't be right.
                option: The lights will always stay on.
            hint: The block after the while command keeps happening while the toilet is occupied.
            correct_answer: B
            question_score: '10'
        9:
            code: |-
                chocolate = {ask} 'How many calories have you eaten today?'
                  {while} calories <= 1000
                      {print} 'You could eat some more'
                  {while} calories > 1000 and calories =< 2000
                      {print} 'That is alright'
                  {while} calories > 2000
                      {print} 'You have had enough for today'
            question_text: What will the diet app say if you have eaten 1600 calories today?
            mp_choice_options:
            -   feedback: 'No'
                option: Nothing. 1600 is not programmed into the app.
            -   feedback: 'No'
                option: you could eat some more
            -   feedback: Yes!
                option: That is alright
            -   feedback: 'No'
                option: You have eaten enough for today
            hint: 1600 is between 1000 and 2000
            correct_answer: C
            question_score: '10'
        10:
            code: |-
                name_player_1 = {ask} 'Name player 1:'
                name_player_2 = {ask} 'Name player 2:'
                {while} points_player_1 > points_player_2
                    {print} _ ' is in the lead right now!'
            question_text: 'What should be filled in in the blanks? Tip: the player with the most points is in the lead.'
            mp_choice_options:
            -   feedback: You are right!
                option: name_player_1
            -   feedback: No they are losing!
                option: name_player_2
            -   feedback: You should fill in a name, not a number
                option: points_player_1
            -   feedback: You should fill in a name, not a number
                option: points_player_2
            hint: You win the game by having the most points. Your name should appear on the screen
            correct_answer: A
            question_score: '10'
